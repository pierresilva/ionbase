{"version":3,"sources":["webpack:///src/app/mails/mails-create/mails-create.component.html","webpack:///src/app/mails/mails-duplicate/mails-duplicate.component.html","webpack:///src/app/mails/mails-edit/mails-edit.component.html","webpack:///src/app/mails/mails-form/mails-form.component.html","webpack:///src/app/mails/mails-list/mails-list.component.html","webpack:///src/app/mails/mails.page.html","webpack:///src/app/mails/mails-create/mails-create.component.scss","webpack:///src/app/mails/mails-create/mails-create.component.ts","webpack:///src/app/mails/mails-duplicate/mails-duplicate.component.scss","webpack:///src/app/mails/mails-duplicate/mails-duplicate.component.ts","webpack:///src/app/mails/mails-edit/mails-edit.component.scss","webpack:///src/app/mails/mails-edit/mails-edit.component.ts","webpack:///src/app/mails/mails-form/mails-form.component.scss","webpack:///src/app/mails/mails-form/mails-form.component.ts","webpack:///src/app/mails/mails-list/mails-list.component.scss","webpack:///src/app/mails/mails-list/mails-list.component.ts","webpack:///src/app/mails/mails-routing.module.ts","webpack:///src/app/mails/mails.module.ts","webpack:///src/app/mails/mails.page.scss","webpack:///src/app/mails/mails.page.ts","webpack:///src/app/mails/mails.service.ts"],"names":["MailsCreateComponent","mailsService","route","platform","splitPanel","id","formValid","clearPosts","show","next","mailForm","mailsForm","valueChanges","subscribe","data","mailsFormValid","valid","console","log","createMail","mail","selector","template","MailsDuplicateComponent","MailsEditComponent","model","snapshot","paramMap","get","editMail","MailsFormComponent","toTitlecase","validationMessages","type","message","transform","event","mail_template_id","value","MailsListComponent","api","loading","getMails","content","scrollToTop","routes","path","component","MailsPageRoutingModule","imports","forChild","exports","MailsPageModule","declarations","MailsPage","MailsService","alert","toast","router","navigation","mailsUrl","mails","mailLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"mails-mails-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/mails'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"mailsService.storeMail()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!mailsService.mailsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'CORREOS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-mails-form #mailForm [model]=\\\"mailsService.mail\\\"></app-mails-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Mails duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/mails'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"mailsService.updateMail()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!mailsService.mailsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'CORREOS' | titlecase}}: {{ mailsService.mail?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-mails-form #mailForm [model]=\\\"mailsService.mail\\\"></app-mails-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #mailsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- mail_template_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'CORREOSPLANTILLA' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"mail_template_id\\\"\\n                          id=\\\"mail_template_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.mail_template\\\"\\n                          [items]=\\\"mailsService.mailLists.MailTemplate\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"subject\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CORREOS PLANTILLAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('CORREOS PLANTILLAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setMailTemplateId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.mail_template_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"mailsForm.form.controls['mail_template_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end mail_template_id -->\\n\\n\\n            <!-- subject -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'ASUNTO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.subject\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"subject\\\"\\n                            id=\\\"subject-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.subject\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"mailsForm.form.controls['subject']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end subject -->\\n\\n\\n            <!-- receiver -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'PARA' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.receiver\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"receiver\\\"\\n                            id=\\\"receiver-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.receiver\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"mailsForm.form.controls['receiver']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end receiver -->\\n\\n\\n            <!-- html -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label position=\\\"stacked\\\" style=\\\"font-size: 1rem;\\\">{{ 'HTML' | titlecase }}</ion-label>\\n                <input [ngxSummernote]\\n                       name=\\\"html\\\"\\n                       id=\\\"html-field\\\"\\n                       [(ngModel)]=\\\"model.html\\\">\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.html\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"mailsForm.form.controls['html']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end html -->\\n\\n\\n            <!-- text -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'TEXTO' | titlecase }}</ion-label>\\n                <ion-textarea [(ngModel)]=\\\"model.text\\\"\\n                              name=\\\"text\\\"\\n                              id=\\\"text-field\\\"\\n                              rows=\\\"6\\\"\\n                              placeholder=\\\"\\\"></ion-textarea>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.text\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"mailsForm.form.controls['text']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end text -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'CORREOS' | titlecase}}\\\"\\n                 primaryLink=\\\"mails/create\\\"\\n                 primaryText=\\\"Crear {{'CORREOS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('CORREOS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.mailsService.searchValue = ''; mailsService.getMails()\\\"\\n                       (keyup.enter)=\\\"mailsService.getMails()\\\"\\n                       [(ngModel)]=\\\"mailsService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && mailsService.mails?.length\\\">\\n        <ion-card *ngFor=\\\"let mail of mailsService.mails; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'ASUNTO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ mail?.subject }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PARA' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ mail?.receiver }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'HTML' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ mail?.html | stripHtml }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TEXTO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ mail?.text }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CORREOS PLANTILLAS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/mail-templates/{{ mail?.mail_template?.id }}/edit\\\">{{ mail?.mail_template?.subject }}</a></div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/mails/' + mail?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"mailsService.deleteMail(mail?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !mailsService.mails?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'CORREOS' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/mails/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'CORREOS' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"mailsService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"mailsService.getMails(mailsService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"mailsService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{mailsService.meta.current_page}}\\n                /{{mailsService.meta.last_page}} {{mailsService.meta.from}}-{{mailsService.meta.to}}\\n                /{{mailsService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"mailsService.getMails(mailsService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"mailsService.meta.current_page == mailsService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"CORREOS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/mails/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'CORREOS'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/mails/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'CORREOS' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haWxzL21haWxzLWNyZWF0ZS9tYWlscy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {MailsService} from \"../mails.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Mail} from \"../mail\";\nimport {MailsFormComponent} from \"../mails-form/mails-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-mails-create',\n    templateUrl: './mails-create.component.html',\n    styleUrls: ['./mails-create.component.scss']\n})\nexport class MailsCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('mailForm') mailForm: MailsFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public mailsService: MailsService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ionViewWillEnter() {\n       this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.mailForm.mailsForm.valueChanges.subscribe((data) => {\n            this.mailsService.mailsFormValid.next(this.mailForm.mailsForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.mailsService.createMail();\n        this.mailsService.mail = <Mail>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haWxzL21haWxzLWR1cGxpY2F0ZS9tYWlscy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mails-duplicate',\n  templateUrl: './mails-duplicate.component.html',\n  styleUrls: ['./mails-duplicate.component.scss'],\n})\nexport class MailsDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haWxzL21haWxzLWVkaXQvbWFpbHMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {MailsService} from \"../mails.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Mail} from \"../mail\";\nimport {MailsFormComponent} from \"../mails-form/mails-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-mails-edit',\n  templateUrl: './mails-edit.component.html',\n  styleUrls: ['./mails-edit.component.scss']\n})\nexport class MailsEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('mailForm') mailForm: MailsFormComponent;\n\n    public id: any = null;\n    public model: Mail = null;\n\n  constructor(\n      public mailsService: MailsService,\n      public route: ActivatedRoute,\n      public platform: Platform,\n      public splitPanel: SplitPanelService,\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.mailsService.editMail(this.id);\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n  ngAfterViewInit() {\n      this.mailForm.mailsForm.valueChanges.subscribe((data) => {\n          this.mailsService.mailsFormValid.next(this.mailForm.mailsForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haWxzL21haWxzLWZvcm0vbWFpbHMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Mail} from \"../mail\";\nimport {FormGroup} from \"@angular/forms\";\nimport {MailsService} from \"../mails.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-mails-form',\n    templateUrl: './mails-form.component.html',\n    styleUrls: ['./mails-form.component.scss']\n})\nexport class MailsFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: Mail = <Mail>{};\n\n    @ViewChild('mailsForm') mailsForm: FormGroup;\n\n    public validationMessages = {\n        'mail_template_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('mailTemplate - NAME') + ' es obligatorio.'},\n        ],\n        'subject': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ASUNTO') + ' es obligatorio.'},\n        ],\n        'receiver': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PARA') + ' es obligatorio.'},\n        ],\n        'html': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('HTML') + ' es obligatorio.'},\n        ],\n        'text': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TEXTO') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public mailsService: MailsService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setMailTemplateId\n\n    setMailTemplateId(event: any) {\n        this.mailsService.mail.mail_template_id = event.value ? event.value.id : null;\n    }\n    // end setMailTemplateId\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haWxzL21haWxzLWxpc3QvbWFpbHMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { MailsService} from \"../mails.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-mails-list',\n    templateUrl: './mails-list.component.html',\n    styleUrls: ['./mails-list.component.scss'],\n})\nexport class MailsListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public mailsService: MailsService,\n        public api: ApiService,\n        public loading: LoadingService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.mailsService.getMails();\n    }\n\n    ionViewWillEnter() {\n     this.splitPanel.show.next(true);\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MailsPage } from './mails.page';\nimport {MailsEditComponent} from \"./mails-edit/mails-edit.component\";\nimport {MailsCreateComponent} from \"./mails-create/mails-create.component\";\nimport {MailsListComponent} from \"./mails-list/mails-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MailsPage\n    },\n    {\n        path: 'list',\n        component: MailsListComponent\n    },\n    {\n      path: 'create',\n      component: MailsCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: MailsEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class MailsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {MailsPageRoutingModule} from './mails-routing.module';\n\nimport { MailsPage} from './mails.page';\nimport { MailsListComponent} from \"./mails-list/mails-list.component\";\nimport { MailsCreateComponent} from \"./mails-create/mails-create.component\";\nimport { MailsDuplicateComponent} from \"./mails-duplicate/mails-duplicate.component\";\nimport { MailsEditComponent} from \"./mails-edit/mails-edit.component\";\nimport { MailsFormComponent} from \"./mails-form/mails-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        MailsPageRoutingModule\n    ],\n    declarations: [\n        MailsPage,\n        MailsListComponent,\n        MailsCreateComponent,\n        MailsDuplicateComponent,\n        MailsEditComponent,\n        MailsFormComponent,\n    ]\n})\nexport class MailsPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haWxzL21haWxzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-mails',\n  templateUrl: './mails.page.html',\n  styleUrls: ['./mails.page.scss'],\n})\nexport class MailsPage implements OnInit {\n\n  constructor(\n    public splitPanel: SplitPanelService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { Mail, MailLists } from \"./mail\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MailsService {\n\n    public mailsUrl = 'mails';\n    public mailsFormValid = new BehaviorSubject<boolean>(false);\n\n    public mails: Mail[] = [];\n    public mail: Mail = <Mail>{};\n    public mailLists: MailLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getMails(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.mailsUrl + '?page=' + page + '&perPage=' + perPage + '&q[subject:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.mails = res.data;\n                    this.mailLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editMail(id: any) {\n        this.api.get(this.mailsUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.mail = res.data.model;\n                    this.mailLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateMail() {\n        this.api.put(this.mailsUrl + '/' + this.mail.id, {\n            model: this.mail,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getMails(1);\n            }\n        );\n    }\n\n    public createMail() {\n        this.api.get(this.mailsUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.mail = <Mail>{};\n                    this.mailLists = res.lists\n                }\n            );\n    }\n\n    public storeMail() {\n        this.api.post(this.mailsUrl, {\n            model: this.mail,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getMails(1);\n            }\n        );\n    }\n\n    public async deleteMail(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.mailsUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getMails(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"]}