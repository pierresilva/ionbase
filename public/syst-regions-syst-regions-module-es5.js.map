{"version":3,"sources":["webpack:///src/app/syst-regions/syst-regions-create/syst-regions-create.component.html","webpack:///src/app/syst-regions/syst-regions-duplicate/syst-regions-duplicate.component.html","webpack:///src/app/syst-regions/syst-regions-edit/syst-regions-edit.component.html","webpack:///src/app/syst-regions/syst-regions-form/syst-regions-form.component.html","webpack:///src/app/syst-regions/syst-regions-list/syst-regions-list.component.html","webpack:///src/app/syst-regions/syst-regions.page.html","webpack:///src/app/syst-regions/syst-regions-create/syst-regions-create.component.scss","webpack:///src/app/syst-regions/syst-regions-create/syst-regions-create.component.ts","webpack:///src/app/syst-regions/syst-regions-duplicate/syst-regions-duplicate.component.scss","webpack:///src/app/syst-regions/syst-regions-duplicate/syst-regions-duplicate.component.ts","webpack:///src/app/syst-regions/syst-regions-edit/syst-regions-edit.component.scss","webpack:///src/app/syst-regions/syst-regions-edit/syst-regions-edit.component.ts","webpack:///src/app/syst-regions/syst-regions-form/syst-regions-form.component.scss","webpack:///src/app/syst-regions/syst-regions-form/syst-regions-form.component.ts","webpack:///src/app/syst-regions/syst-regions-list/syst-regions-list.component.scss","webpack:///src/app/syst-regions/syst-regions-list/syst-regions-list.component.ts","webpack:///src/app/syst-regions/syst-regions-routing.module.ts","webpack:///src/app/syst-regions/syst-regions.module.ts","webpack:///src/app/syst-regions/syst-regions.page.scss","webpack:///src/app/syst-regions/syst-regions.page.ts","webpack:///src/app/syst-regions/syst-regions.service.ts"],"names":["SystRegionsCreateComponent","systRegionsService","route","platform","splitPanel","id","formValid","clearPosts","show","next","systRegionForm","systRegionsForm","valueChanges","subscribe","data","systRegionsFormValid","valid","console","log","createSystRegion","systRegion","selector","template","SystRegionsDuplicateComponent","SystRegionsEditComponent","model","snapshot","paramMap","get","editSystRegion","SystRegionsFormComponent","toTitlecase","validationMessages","type","message","transform","event","userProfileIds","value","length","i","push","user_profile_ids","systCityIds","syst_city_ids","syst_country_id","SystRegionsListComponent","api","loading","getSystRegions","content","scrollToTop","routes","path","component","SystRegionsPageRoutingModule","imports","forChild","exports","SystRegionsPageModule","declarations","SystRegionsPage","SystRegionsService","alert","toast","router","navigation","systRegionsUrl","systRegions","systRegionLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"syst-regions-syst-regions-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/syst-regions'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"systRegionsService.storeSystRegion()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!systRegionsService.systRegionsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'DEPARTAMENTOS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-syst-regions-form #systRegionForm [model]=\\\"systRegionsService.systRegion\\\"></app-syst-regions-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  SystRegions duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/syst-regions'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"systRegionsService.updateSystRegion()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!systRegionsService.systRegionsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'DEPARTAMENTOS' | titlecase}}: {{ systRegionsService.systRegion?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-syst-regions-form #systRegionForm [model]=\\\"systRegionsService.systRegion\\\"></app-syst-regions-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #systRegionsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- user_profile_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'PERFILES DE USUARIOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"user_profile_ids\\\"\\n                          id=\\\"user_profile_ids-field\\\"\\n                          [(ngModel)]=\\\"model.user_profiles\\\"\\n                          [items]=\\\"systRegionsService.systRegionLists.UserProfile\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('PERFILES DE USUARIOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('PERFILES DE USUARIOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setUserProfileIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.user_profile_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systRegionsForm.form.controls['user_profile_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end user_profile_ids -->\\n\\n\\n    <!-- syst_city_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'CIUDADES' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"syst_city_ids\\\"\\n                          id=\\\"syst_city_ids-field\\\"\\n                          [(ngModel)]=\\\"model.syst_cities\\\"\\n                          [items]=\\\"systRegionsService.systRegionLists.SystCity\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CIUDADES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('CIUDADES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setSystCityIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_city_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systRegionsForm.form.controls['syst_city_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end syst_city_ids -->\\n\\n\\n    <!-- syst_country_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'PAISE' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"syst_country_id\\\"\\n                          id=\\\"syst_country_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.syst_country\\\"\\n                          [items]=\\\"systRegionsService.systRegionLists.SystCountry\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('PAISES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('PAISES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setSystCountryId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_country_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systRegionsForm.form.controls['syst_country_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end syst_country_id -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NAME' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"systRegionsForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- code -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"code\\\"\\n                            id=\\\"code-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"systRegionsForm.form.controls['code']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end code -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'DEPARTAMENTOS' | titlecase}}\\\"\\n                 primaryLink=\\\"syst-regions/create\\\"\\n                 primaryText=\\\"Crear {{'DEPARTAMENTOS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('DEPARTAMENTOS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.systRegionsService.searchValue = ''; systRegionsService.getSystRegions()\\\"\\n                       (keyup.enter)=\\\"systRegionsService.getSystRegions()\\\"\\n                       [(ngModel)]=\\\"systRegionsService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && systRegionsService.systRegions?.length\\\">\\n        <ion-card *ngFor=\\\"let systRegion of systRegionsService.systRegions; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NAME' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ systRegion?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ systRegion?.code }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PERFILES DE USUARIOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"systRegion?.user_profiles?.length\\\">\\n                                <ng-container *ngFor=\\\"let userProfile of systRegion?.user_profiles; let last = last\\\">\\n                                    <a routerLink=\\\"/user-profiles/{{ userProfile?.id }}/edit\\\">{{ userProfile?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CIUDADES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"systRegion?.syst_cities?.length\\\">\\n                                <ng-container *ngFor=\\\"let systCity of systRegion?.syst_cities; let last = last\\\">\\n                                    <a routerLink=\\\"/syst-cities/{{ systCity?.id }}/edit\\\">{{ systCity?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PAISES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/syst-countries/{{ systRegion?.syst_country?.id }}/edit\\\">{{ systRegion?.syst_country?.name }}</a></div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/syst-regions/' + systRegion?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"systRegionsService.deleteSystRegion(systRegion?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !systRegionsService.systRegions?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'DEPARTAMENTOS' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/syst-regions/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'DEPARTAMENTOS' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"systRegionsService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"systRegionsService.getSystRegions(systRegionsService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"systRegionsService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{systRegionsService.meta.current_page}}\\n                /{{systRegionsService.meta.last_page}} {{systRegionsService.meta.from}}-{{systRegionsService.meta.to}}\\n                /{{systRegionsService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"systRegionsService.getSystRegions(systRegionsService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"systRegionsService.meta.current_page == systRegionsService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"DEPARTAMENTOS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/syst-regions/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'DEPARTAMENTOS'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/syst-regions/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'DEPARTAMENTOS' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtcmVnaW9ucy9zeXN0LXJlZ2lvbnMtY3JlYXRlL3N5c3QtcmVnaW9ucy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {SystRegionsService} from \"../syst-regions.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {SystRegion} from \"../syst-region\";\nimport {SystRegionsFormComponent} from \"../syst-regions-form/syst-regions-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-syst-regions-create',\n    templateUrl: './syst-regions-create.component.html',\n    styleUrls: ['./syst-regions-create.component.scss']\n})\nexport class SystRegionsCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('systRegionForm') systRegionForm: SystRegionsFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public systRegionsService: SystRegionsService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ionViewWillEnter() {\n       this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.systRegionForm.systRegionsForm.valueChanges.subscribe((data) => {\n            this.systRegionsService.systRegionsFormValid.next(this.systRegionForm.systRegionsForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.systRegionsService.createSystRegion();\n        this.systRegionsService.systRegion = <SystRegion>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtcmVnaW9ucy9zeXN0LXJlZ2lvbnMtZHVwbGljYXRlL3N5c3QtcmVnaW9ucy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-syst-regions-duplicate',\n  templateUrl: './syst-regions-duplicate.component.html',\n  styleUrls: ['./syst-regions-duplicate.component.scss'],\n})\nexport class SystRegionsDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtcmVnaW9ucy9zeXN0LXJlZ2lvbnMtZWRpdC9zeXN0LXJlZ2lvbnMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {SystRegionsService} from \"../syst-regions.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {SystRegion} from \"../syst-region\";\nimport {SystRegionsFormComponent} from \"../syst-regions-form/syst-regions-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-syst-regions-edit',\n  templateUrl: './syst-regions-edit.component.html',\n  styleUrls: ['./syst-regions-edit.component.scss']\n})\nexport class SystRegionsEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('systRegionForm') systRegionForm: SystRegionsFormComponent;\n\n    public id: any = null;\n    public model: SystRegion = null;\n\n  constructor(\n      public systRegionsService: SystRegionsService,\n      public route: ActivatedRoute,\n      public platform: Platform,\n      public splitPanel: SplitPanelService,\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.systRegionsService.editSystRegion(this.id);\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n  ngAfterViewInit() {\n      this.systRegionForm.systRegionsForm.valueChanges.subscribe((data) => {\n          this.systRegionsService.systRegionsFormValid.next(this.systRegionForm.systRegionsForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtcmVnaW9ucy9zeXN0LXJlZ2lvbnMtZm9ybS9zeXN0LXJlZ2lvbnMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {SystRegion} from \"../syst-region\";\nimport {FormGroup} from \"@angular/forms\";\nimport {SystRegionsService} from \"../syst-regions.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-syst-regions-form',\n    templateUrl: './syst-regions-form.component.html',\n    styleUrls: ['./syst-regions-form.component.scss']\n})\nexport class SystRegionsFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: SystRegion = <SystRegion>{};\n\n    @ViewChild('systRegionsForm') systRegionsForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NAME') + ' es obligatorio.'},\n        ],\n        'code': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\n        ],\n        'syst_country_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PAÍS') + ' es obligatorio.'},\n        ],\n        'user_profile_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERFILES DE USUARIOS') + ' es obligatorio.'},\n        ],\n        'syst_city_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CIUDADES') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public systRegionsService: SystRegionsService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setUserProfileIds\n    setUserProfileIds(event: any) {\n        let userProfileIds = null;\n        if (event.value.length) {\n            userProfileIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                userProfileIds.push(event.value[i].id);\n            }\n        }\n        this.systRegionsService.systRegion.user_profile_ids = userProfileIds;\n    }\n    // end setUserProfileIds\n\n\n    // set setSystCityIds\n    setSystCityIds(event: any) {\n        let systCityIds = null;\n        if (event.value.length) {\n            systCityIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                systCityIds.push(event.value[i].id);\n            }\n        }\n        this.systRegionsService.systRegion.syst_city_ids = systCityIds;\n    }\n    // end setSystCityIds\n\n\n    // set setSystCountryId\n\n    setSystCountryId(event: any) {\n        this.systRegionsService.systRegion.syst_country_id = event.value ? event.value.id : null;\n    }\n    // end setSystCountryId\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtcmVnaW9ucy9zeXN0LXJlZ2lvbnMtbGlzdC9zeXN0LXJlZ2lvbnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { SystRegionsService} from \"../syst-regions.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-syst-regions-list',\n    templateUrl: './syst-regions-list.component.html',\n    styleUrls: ['./syst-regions-list.component.scss'],\n})\nexport class SystRegionsListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public systRegionsService: SystRegionsService,\n        public api: ApiService,\n        public loading: LoadingService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.systRegionsService.getSystRegions();\n    }\n\n    ionViewWillEnter() {\n     this.splitPanel.show.next(true);\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SystRegionsPage } from './syst-regions.page';\nimport {SystRegionsEditComponent} from \"./syst-regions-edit/syst-regions-edit.component\";\nimport {SystRegionsCreateComponent} from \"./syst-regions-create/syst-regions-create.component\";\nimport {SystRegionsListComponent} from \"./syst-regions-list/syst-regions-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SystRegionsPage\n    },\n    {\n        path: 'list',\n        component: SystRegionsListComponent\n    },\n    {\n      path: 'create',\n      component: SystRegionsCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: SystRegionsEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class SystRegionsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {SystRegionsPageRoutingModule} from './syst-regions-routing.module';\n\nimport { SystRegionsPage} from './syst-regions.page';\nimport { SystRegionsListComponent} from \"./syst-regions-list/syst-regions-list.component\";\nimport { SystRegionsCreateComponent} from \"./syst-regions-create/syst-regions-create.component\";\nimport { SystRegionsDuplicateComponent} from \"./syst-regions-duplicate/syst-regions-duplicate.component\";\nimport { SystRegionsEditComponent} from \"./syst-regions-edit/syst-regions-edit.component\";\nimport { SystRegionsFormComponent} from \"./syst-regions-form/syst-regions-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        SystRegionsPageRoutingModule\n    ],\n    declarations: [\n        SystRegionsPage,\n        SystRegionsListComponent,\n        SystRegionsCreateComponent,\n        SystRegionsDuplicateComponent,\n        SystRegionsEditComponent,\n        SystRegionsFormComponent,\n    ]\n})\nexport class SystRegionsPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtcmVnaW9ucy9zeXN0LXJlZ2lvbnMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-syst-regions',\n  templateUrl: './syst-regions.page.html',\n  styleUrls: ['./syst-regions.page.scss'],\n})\nexport class SystRegionsPage implements OnInit {\n\n  constructor(\n    public splitPanel: SplitPanelService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { SystRegion, SystRegionLists } from \"./syst-region\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SystRegionsService {\n\n    public systRegionsUrl = 'syst-regions';\n    public systRegionsFormValid = new BehaviorSubject<boolean>(false);\n\n    public systRegions: SystRegion[] = [];\n    public systRegion: SystRegion = <SystRegion>{};\n    public systRegionLists: SystRegionLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getSystRegions(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.systRegionsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.systRegions = res.data;\n                    this.systRegionLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editSystRegion(id: any) {\n        this.api.get(this.systRegionsUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.systRegion = res.data.model;\n                    this.systRegionLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateSystRegion() {\n        this.api.put(this.systRegionsUrl + '/' + this.systRegion.id, {\n            model: this.systRegion,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getSystRegions(1);\n            }\n        );\n    }\n\n    public createSystRegion() {\n        this.api.get(this.systRegionsUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.systRegion = <SystRegion>{};\n                    this.systRegionLists = res.lists\n                }\n            );\n    }\n\n    public storeSystRegion() {\n        this.api.post(this.systRegionsUrl, {\n            model: this.systRegion,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getSystRegions(1);\n            }\n        );\n    }\n\n    public async deleteSystRegion(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.systRegionsUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getSystRegions(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"]}