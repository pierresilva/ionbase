{"version":3,"sources":["webpack:///src/app/comp-addresses/comp-addresses-create/comp-addresses-create.component.html","webpack:///src/app/comp-addresses/comp-addresses-duplicate/comp-addresses-duplicate.component.html","webpack:///src/app/comp-addresses/comp-addresses-edit/comp-addresses-edit.component.html","webpack:///src/app/comp-addresses/comp-addresses-form/comp-addresses-form.component.html","webpack:///src/app/comp-addresses/comp-addresses-list/comp-addresses-list.component.html","webpack:///src/app/comp-addresses/comp-addresses.page.html","webpack:///src/app/comp-addresses/comp-addresses-create/comp-addresses-create.component.scss","webpack:///src/app/comp-addresses/comp-addresses-create/comp-addresses-create.component.ts","webpack:///src/app/comp-addresses/comp-addresses-duplicate/comp-addresses-duplicate.component.scss","webpack:///src/app/comp-addresses/comp-addresses-duplicate/comp-addresses-duplicate.component.ts","webpack:///src/app/comp-addresses/comp-addresses-edit/comp-addresses-edit.component.scss","webpack:///src/app/comp-addresses/comp-addresses-edit/comp-addresses-edit.component.ts","webpack:///src/app/comp-addresses/comp-addresses-form/comp-addresses-form.component.scss","webpack:///src/app/comp-addresses/comp-addresses-form/comp-addresses-form.component.ts","webpack:///src/app/comp-addresses/comp-addresses-list/comp-addresses-list.component.scss","webpack:///src/app/comp-addresses/comp-addresses-list/comp-addresses-list.component.ts","webpack:///src/app/comp-addresses/comp-addresses-routing.module.ts","webpack:///src/app/comp-addresses/comp-addresses.module.ts","webpack:///src/app/comp-addresses/comp-addresses.page.scss","webpack:///src/app/comp-addresses/comp-addresses.page.ts","webpack:///src/app/comp-addresses/comp-addresses.service.ts"],"names":["CompAddressesCreateComponent","compAddressesService","route","platform","splitPanel","id","formValid","clearPosts","show","next","compAddressForm","compAddressesForm","valueChanges","subscribe","data","compAddressesFormValid","valid","console","log","createCompAddress","compAddress","selector","template","CompAddressesDuplicateComponent","CompAddressesEditComponent","model","snapshot","paramMap","get","editCompAddress","CompAddressesFormComponent","toTitlecase","validationMessages","type","message","transform","event","company_id","value","syst_city_id","CompAddressesListComponent","api","loading","getCompAddresses","content","scrollToTop","routes","path","component","CompAddressesPageRoutingModule","imports","forChild","exports","CompAddressesPageModule","declarations","CompAddressesPage","CompAddressesService","alert","toast","router","navigation","compAddressesUrl","compAddresses","compAddressLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"comp-addresses-comp-addresses-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/comp-addresses'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"compAddressesService.storeCompAddress()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!compAddressesService.compAddressesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'EMPRESAS DIRECCIONES' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-comp-addresses-form #compAddressForm [model]=\\\"compAddressesService.compAddress\\\"></app-comp-addresses-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  CompAddresses duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/comp-addresses'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"compAddressesService.updateCompAddress()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!compAddressesService.compAddressesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'EMPRESAS DIRECCIONES' | titlecase}}: {{ compAddressesService.compAddress?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-comp-addresses-form #compAddressForm [model]=\\\"compAddressesService.compAddress\\\"></app-comp-addresses-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #compAddressesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- company_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'EMPRESA' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"company_id\\\"\\n                          id=\\\"company_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.company\\\"\\n                          [items]=\\\"compAddressesService.compAddressLists.Company\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setCompanyId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.company_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"compAddressesForm.form.controls['company_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end company_id -->\\n\\n\\n    <!-- syst_city_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'CIUDAD' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"syst_city_id\\\"\\n                          id=\\\"syst_city_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.syst_city\\\"\\n                          [items]=\\\"compAddressesService.compAddressLists.SystCity\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CIUDADES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('CIUDADES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setSystCityId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_city_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"compAddressesForm.form.controls['syst_city_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end syst_city_id -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"compAddressesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- address -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'DIRECCIÓN' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.address\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"address\\\"\\n                            id=\\\"address-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.address\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"compAddressesForm.form.controls['address']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end address -->\\n\\n\\n            <!-- main -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'PRINCIPAL' | titlecase }}</ion-label>\\n                <ion-toggle name=\\\"main\\\"\\n                            id=\\\"main-field\\\"\\n                            slot=\\\"end\\\"\\n                            [(ngModel)]=\\\"model.main\\\"></ion-toggle>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.main\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"compAddressesForm.form.controls['main']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end main -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'EMPRESAS DIRECCIONES' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"comp-addresses/create\\\"\\r\\n                 primaryText=\\\"Crear {{'EMPRESAS DIRECCIONES' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                       [placeholder]=\\\"'Buscar ' + ('EMPRESAS DIRECCIONES' | lowercase )\\\"\\r\\n                       (ionCancel)=\\\"this.compAddressesService.searchValue = ''; compAddressesService.getCompAddresses()\\\"\\r\\n                       (keyup.enter)=\\\"compAddressesService.getCompAddresses()\\\"\\r\\n                       [(ngModel)]=\\\"compAddressesService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && compAddressesService.compAddresses?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let compAddress of compAddressesService.compAddresses; let index = index\\\">\\r\\n            <ion-list>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ compAddress?.name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'DIRECCIÓN' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ compAddress?.address }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PRINCIPAL' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ compAddress?.main  ? 'Si' : 'No' }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/companies/{{ compAddress?.company?.id }}/edit\\\">{{ compAddress?.company?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CIUDADES' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/syst-cities/{{ compAddress?.syst_city?.id }}/edit\\\">{{ compAddress?.syst_city?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/comp-addresses/' + compAddress?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"compAddressesService.deleteCompAddress(compAddress?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !compAddressesService.compAddresses?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'EMPRESAS DIRECCIONES' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/comp-addresses/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\r\\n                Crear {{'EMPRESAS DIRECCIONES' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"compAddressesService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"compAddressesService.getCompAddresses(compAddressesService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"compAddressesService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{compAddressesService.meta.current_page}}\\r\\n                /{{compAddressesService.meta.last_page}} {{compAddressesService.meta.from}}-{{compAddressesService.meta.to}}\\r\\n                /{{compAddressesService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"compAddressesService.getCompAddresses(compAddressesService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"compAddressesService.meta.current_page == compAddressesService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"EMPRESAS DIRECCIONES\\\"></app-main-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/comp-addresses/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'EMPRESAS DIRECCIONES'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/comp-addresses/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'EMPRESAS DIRECCIONES' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtYWRkcmVzc2VzL2NvbXAtYWRkcmVzc2VzLWNyZWF0ZS9jb21wLWFkZHJlc3Nlcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {CompAddressesService} from \"../comp-addresses.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {CompAddress} from \"../comp-address\";\r\nimport {CompAddressesFormComponent} from \"../comp-addresses-form/comp-addresses-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-comp-addresses-create',\r\n    templateUrl: './comp-addresses-create.component.html',\r\n    styleUrls: ['./comp-addresses-create.component.scss']\r\n})\r\nexport class CompAddressesCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('compAddressForm') compAddressForm: CompAddressesFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public compAddressesService: CompAddressesService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.compAddressForm.compAddressesForm.valueChanges.subscribe((data) => {\r\n            this.compAddressesService.compAddressesFormValid.next(this.compAddressForm.compAddressesForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.compAddressesService.createCompAddress();\r\n        this.compAddressesService.compAddress = <CompAddress>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtYWRkcmVzc2VzL2NvbXAtYWRkcmVzc2VzLWR1cGxpY2F0ZS9jb21wLWFkZHJlc3Nlcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-comp-addresses-duplicate',\r\n  templateUrl: './comp-addresses-duplicate.component.html',\r\n  styleUrls: ['./comp-addresses-duplicate.component.scss'],\r\n})\r\nexport class CompAddressesDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtYWRkcmVzc2VzL2NvbXAtYWRkcmVzc2VzLWVkaXQvY29tcC1hZGRyZXNzZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {CompAddressesService} from \"../comp-addresses.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {CompAddress} from \"../comp-address\";\r\nimport {CompAddressesFormComponent} from \"../comp-addresses-form/comp-addresses-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-comp-addresses-edit',\r\n  templateUrl: './comp-addresses-edit.component.html',\r\n  styleUrls: ['./comp-addresses-edit.component.scss']\r\n})\r\nexport class CompAddressesEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('compAddressForm') compAddressForm: CompAddressesFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: CompAddress = null;\r\n\r\n  constructor(\r\n      public compAddressesService: CompAddressesService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.compAddressesService.editCompAddress(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.compAddressForm.compAddressesForm.valueChanges.subscribe((data) => {\r\n          this.compAddressesService.compAddressesFormValid.next(this.compAddressForm.compAddressesForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtYWRkcmVzc2VzL2NvbXAtYWRkcmVzc2VzLWZvcm0vY29tcC1hZGRyZXNzZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {CompAddress} from \"../comp-address\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {CompAddressesService} from \"../comp-addresses.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-comp-addresses-form',\r\n    templateUrl: './comp-addresses-form.component.html',\r\n    styleUrls: ['./comp-addresses-form.component.scss']\r\n})\r\nexport class CompAddressesFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: CompAddress = <CompAddress>{};\r\n\r\n    @ViewChild('compAddressesForm') compAddressesForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'company_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESA') + ' es obligatorio.'},\r\n        ],\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'syst_city_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CIUDAD') + ' es obligatorio.'},\r\n        ],\r\n        'address': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DIRECCIÓN') + ' es obligatorio.'},\r\n        ],\r\n        'main': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PRINCIPAL') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public compAddressesService: CompAddressesService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setCompanyId\r\n\r\n    setCompanyId(event: any) {\r\n        this.compAddressesService.compAddress.company_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setCompanyId\r\n\r\n\r\n    // set setSystCityId\r\n\r\n    setSystCityId(event: any) {\r\n        this.compAddressesService.compAddress.syst_city_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setSystCityId\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtYWRkcmVzc2VzL2NvbXAtYWRkcmVzc2VzLWxpc3QvY29tcC1hZGRyZXNzZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { CompAddressesService} from \"../comp-addresses.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-comp-addresses-list',\r\n    templateUrl: './comp-addresses-list.component.html',\r\n    styleUrls: ['./comp-addresses-list.component.scss'],\r\n})\r\nexport class CompAddressesListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public compAddressesService: CompAddressesService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.compAddressesService.getCompAddresses();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CompAddressesPage } from './comp-addresses.page';\r\nimport {CompAddressesEditComponent} from \"./comp-addresses-edit/comp-addresses-edit.component\";\r\nimport {CompAddressesCreateComponent} from \"./comp-addresses-create/comp-addresses-create.component\";\r\nimport {CompAddressesListComponent} from \"./comp-addresses-list/comp-addresses-list.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CompAddressesPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        component: CompAddressesListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      component: CompAddressesCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: CompAddressesEditComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class CompAddressesPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {CompAddressesPageRoutingModule} from './comp-addresses-routing.module';\r\n\r\nimport { CompAddressesPage} from './comp-addresses.page';\r\nimport { CompAddressesListComponent} from \"./comp-addresses-list/comp-addresses-list.component\";\r\nimport { CompAddressesCreateComponent} from \"./comp-addresses-create/comp-addresses-create.component\";\r\nimport { CompAddressesDuplicateComponent} from \"./comp-addresses-duplicate/comp-addresses-duplicate.component\";\r\nimport { CompAddressesEditComponent} from \"./comp-addresses-edit/comp-addresses-edit.component\";\r\nimport { CompAddressesFormComponent} from \"./comp-addresses-form/comp-addresses-form.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        CompAddressesPageRoutingModule\r\n    ],\r\n    declarations: [\r\n        CompAddressesPage,\r\n        CompAddressesListComponent,\r\n        CompAddressesCreateComponent,\r\n        CompAddressesDuplicateComponent,\r\n        CompAddressesEditComponent,\r\n        CompAddressesFormComponent,\r\n    ]\r\n})\r\nexport class CompAddressesPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtYWRkcmVzc2VzL2NvbXAtYWRkcmVzc2VzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-comp-addresses',\r\n  templateUrl: './comp-addresses.page.html',\r\n  styleUrls: ['./comp-addresses.page.scss'],\r\n})\r\nexport class CompAddressesPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport { CompAddress, CompAddressLists } from \"./comp-address\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CompAddressesService {\r\n\r\n    public compAddressesUrl = 'comp-addresses';\r\n    public compAddressesFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public compAddresses: CompAddress[] = [];\r\n    public compAddress: CompAddress = <CompAddress>{};\r\n    public compAddressLists: CompAddressLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n\r\n    public getCompAddresses(page: any = this.page, perPage: any = this.perPage) {\r\n\r\n        this.api.get(this.compAddressesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.compAddresses = res.data;\r\n                    this.compAddressLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editCompAddress(id: any) {\r\n        this.api.get(this.compAddressesUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.compAddress = res.data.model;\r\n                    this.compAddressLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateCompAddress() {\r\n        this.api.put(this.compAddressesUrl + '/' + this.compAddress.id, {\r\n            model: this.compAddress,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getCompAddresses(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createCompAddress() {\r\n        this.api.get(this.compAddressesUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.compAddress = <CompAddress>{};\r\n                    this.compAddressLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeCompAddress() {\r\n        this.api.post(this.compAddressesUrl, {\r\n            model: this.compAddress,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getCompAddresses(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteCompAddress(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.compAddressesUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getCompAddresses(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n}\r\n"]}