{"version":3,"sources":["./src/app/syst-cities/syst-cities-create/syst-cities-create.component.html","./src/app/syst-cities/syst-cities-duplicate/syst-cities-duplicate.component.html","./src/app/syst-cities/syst-cities-edit/syst-cities-edit.component.html","./src/app/syst-cities/syst-cities-form/syst-cities-form.component.html","./src/app/syst-cities/syst-cities-list/syst-cities-list.component.html","./src/app/syst-cities/syst-cities.page.html","./src/app/syst-cities/syst-cities-create/syst-cities-create.component.scss","./src/app/syst-cities/syst-cities-create/syst-cities-create.component.ts","./src/app/syst-cities/syst-cities-duplicate/syst-cities-duplicate.component.scss","./src/app/syst-cities/syst-cities-duplicate/syst-cities-duplicate.component.ts","./src/app/syst-cities/syst-cities-edit/syst-cities-edit.component.scss","./src/app/syst-cities/syst-cities-edit/syst-cities-edit.component.ts","./src/app/syst-cities/syst-cities-form/syst-cities-form.component.scss","./src/app/syst-cities/syst-cities-form/syst-cities-form.component.ts","./src/app/syst-cities/syst-cities-list/syst-cities-list.component.scss","./src/app/syst-cities/syst-cities-list/syst-cities-list.component.ts","./src/app/syst-cities/syst-cities-routing.module.ts","./src/app/syst-cities/syst-cities.module.ts","./src/app/syst-cities/syst-cities.page.scss","./src/app/syst-cities/syst-cities.page.ts","./src/app/syst-cities/syst-cities.service.ts"],"names":[],"mappings":"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","file":"syst-cities-syst-cities-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/syst-cities'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"systCitiesService.storeSystCity()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!systCitiesService.systCitiesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'CIUDADES' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-syst-cities-form #systCityForm [model]=\\\"systCitiesService.systCity\\\"></app-syst-cities-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  SystCities duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/syst-cities'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"systCitiesService.updateSystCity()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!systCitiesService.systCitiesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'CIUDADES' | titlecase}}: {{ systCitiesService.systCity?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-syst-cities-form #systCityForm [model]=\\\"systCitiesService.systCity\\\"></app-syst-cities-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #systCitiesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- user_profile_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'PERFILES DE USUARIOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"user_profile_ids\\\"\\n                          id=\\\"user_profile_ids-field\\\"\\n                          [(ngModel)]=\\\"model.user_profiles\\\"\\n                          [items]=\\\"systCitiesService.systCityLists.UserProfile\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('PERFILES DE USUARIOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('PERFILES DE USUARIOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setUserProfileIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.user_profile_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systCitiesForm.form.controls['user_profile_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end user_profile_ids -->\\n\\n\\n    <!-- syst_region_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'DEPARTAMENTO' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"syst_region_id\\\"\\n                          id=\\\"syst_region_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.syst_region\\\"\\n                          [items]=\\\"systCitiesService.systCityLists.SystRegion\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('DEPARTAMENTOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('DEPARTAMENTOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setSystRegionId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_region_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systCitiesForm.form.controls['syst_region_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end syst_region_id -->\\n\\n\\n    <!-- comp_address_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'EMPRESAS DIRECCIONES' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"comp_address_ids\\\"\\n                          id=\\\"comp_address_ids-field\\\"\\n                          [(ngModel)]=\\\"model.comp_addresses\\\"\\n                          [items]=\\\"systCitiesService.systCityLists.CompAddress\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS DIRECCIONES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS DIRECCIONES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setCompAddressIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_address_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systCitiesForm.form.controls['comp_address_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end comp_address_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"systCitiesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- code -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"code\\\"\\n                            id=\\\"code-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"systCitiesForm.form.controls['code']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end code -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'CIUDADES' | titlecase}}\\\"\\n                 primaryLink=\\\"syst-cities/create\\\"\\n                 primaryText=\\\"Crear {{'CIUDADES' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('CIUDADES' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.systCitiesService.searchValue = ''; systCitiesService.getSystCities()\\\"\\n                       (keyup.enter)=\\\"systCitiesService.getSystCities()\\\"\\n                       [(ngModel)]=\\\"systCitiesService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && systCitiesService.systCities?.length\\\">\\n        <ion-card *ngFor=\\\"let systCity of systCitiesService.systCities; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ systCity?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ systCity?.code }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PERFILES DE USUARIOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"systCity?.user_profiles?.length\\\">\\n                                <ng-container *ngFor=\\\"let userProfile of systCity?.user_profiles; let last = last\\\">\\n                                    <a routerLink=\\\"/user-profiles/{{ userProfile?.id }}/edit\\\">{{ userProfile?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'DEPARTAMENTOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/syst-regions/{{ systCity?.syst_region?.id }}/edit\\\">{{ systCity?.syst_region?.name }}</a></div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS DIRECCIONES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"systCity?.comp_addresses?.length\\\">\\n                                <ng-container *ngFor=\\\"let compAddress of systCity?.comp_addresses; let last = last\\\">\\n                                    <a routerLink=\\\"/comp-addresses/{{ compAddress?.id }}/edit\\\">{{ compAddress?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/syst-cities/' + systCity?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"systCitiesService.deleteSystCity(systCity?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !systCitiesService.systCities?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'CIUDADES' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/syst-cities/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'CIUDADES' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"systCitiesService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"systCitiesService.getSystCities(systCitiesService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"systCitiesService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{systCitiesService.meta.current_page}}\\n                /{{systCitiesService.meta.last_page}} {{systCitiesService.meta.from}}-{{systCitiesService.meta.to}}\\n                /{{systCitiesService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"systCitiesService.getSystCities(systCitiesService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"systCitiesService.meta.current_page == systCitiesService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"CIUDADES\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/syst-cities/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'CIUDADES'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/syst-cities/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'CIUDADES' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY2l0aWVzL3N5c3QtY2l0aWVzLWNyZWF0ZS9zeXN0LWNpdGllcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {SystCitiesService} from \"../syst-cities.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {SystCity} from \"../syst-city\";\nimport {SystCitiesFormComponent} from \"../syst-cities-form/syst-cities-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n    selector: 'app-syst-cities-create',\n    templateUrl: './syst-cities-create.component.html',\n    styleUrls: ['./syst-cities-create.component.scss']\n})\nexport class SystCitiesCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('systCityForm') systCityForm: SystCitiesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public systCitiesService: SystCitiesService,\n        public route: ActivatedRoute,\n        public platform: Platform\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.systCityForm.systCitiesForm.valueChanges.subscribe((data) => {\n            this.systCitiesService.systCitiesFormValid.next(this.systCityForm.systCitiesForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.systCitiesService.createSystCity();\n        this.systCitiesService.systCity = <SystCity>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY2l0aWVzL3N5c3QtY2l0aWVzLWR1cGxpY2F0ZS9zeXN0LWNpdGllcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-syst-cities-duplicate',\n  templateUrl: './syst-cities-duplicate.component.html',\n  styleUrls: ['./syst-cities-duplicate.component.scss'],\n})\nexport class SystCitiesDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY2l0aWVzL3N5c3QtY2l0aWVzLWVkaXQvc3lzdC1jaXRpZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {SystCitiesService} from \"../syst-cities.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {SystCity} from \"../syst-city\";\nimport {SystCitiesFormComponent} from \"../syst-cities-form/syst-cities-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-syst-cities-edit',\n  templateUrl: './syst-cities-edit.component.html',\n  styleUrls: ['./syst-cities-edit.component.scss']\n})\nexport class SystCitiesEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('systCityForm') systCityForm: SystCitiesFormComponent;\n\n    public id: any = null;\n    public model: SystCity = null;\n\n  constructor(\n      public systCitiesService: SystCitiesService,\n      public route: ActivatedRoute,\n      public platform: Platform\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.systCitiesService.editSystCity(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.systCityForm.systCitiesForm.valueChanges.subscribe((data) => {\n          this.systCitiesService.systCitiesFormValid.next(this.systCityForm.systCitiesForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY2l0aWVzL3N5c3QtY2l0aWVzLWZvcm0vc3lzdC1jaXRpZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {SystCity} from \"../syst-city\";\nimport {FormGroup} from \"@angular/forms\";\nimport {SystCitiesService} from \"../syst-cities.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-syst-cities-form',\n    templateUrl: './syst-cities-form.component.html',\n    styleUrls: ['./syst-cities-form.component.scss']\n})\nexport class SystCitiesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: SystCity = <SystCity>{};\n\n    @ViewChild('systCitiesForm') systCitiesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'code': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\n        ],\n        'syst_region_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DEPARTAMENTO') + ' es obligatorio.'},\n        ],\n        'user_profile_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERFILES DE USUARIOS') + ' es obligatorio.'},\n        ],\n        'comp_address_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESAS DIRECCIONES') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public systCitiesService: SystCitiesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setUserProfileIds\n    setUserProfileIds(event: any) {\n        let userProfileIds = null;\n        if (event.value.length) {\n            userProfileIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                userProfileIds.push(event.value[i].id);\n            }\n        }\n        this.systCitiesService.systCity.user_profile_ids = userProfileIds;\n    }\n    // end setUserProfileIds\n\n\n    // set setSystRegionId\n\n    setSystRegionId(event: any) {\n        this.systCitiesService.systCity.syst_region_id = event.value ? event.value.id : null;\n    }\n    // end setSystRegionId\n\n\n    // set setCompAddressIds\n    setCompAddressIds(event: any) {\n        let compAddressIds = null;\n        if (event.value.length) {\n            compAddressIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                compAddressIds.push(event.value[i].id);\n            }\n        }\n        this.systCitiesService.systCity.comp_address_ids = compAddressIds;\n    }\n    // end setCompAddressIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY2l0aWVzL3N5c3QtY2l0aWVzLWxpc3Qvc3lzdC1jaXRpZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { SystCitiesService} from \"../syst-cities.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-syst-cities-list',\n    templateUrl: './syst-cities-list.component.html',\n    styleUrls: ['./syst-cities-list.component.scss'],\n})\nexport class SystCitiesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public systCitiesService: SystCitiesService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.systCitiesService.getSystCities();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SystCitiesPage } from './syst-cities.page';\nimport {SystCitiesEditComponent} from \"./syst-cities-edit/syst-cities-edit.component\";\nimport {SystCitiesCreateComponent} from \"./syst-cities-create/syst-cities-create.component\";\nimport {SystCitiesListComponent} from \"./syst-cities-list/syst-cities-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SystCitiesPage\n    },\n    {\n        path: 'list',\n        component: SystCitiesListComponent\n    },\n    {\n      path: 'create',\n      component: SystCitiesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: SystCitiesEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class SystCitiesPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {SystCitiesPageRoutingModule} from './syst-cities-routing.module';\n\nimport { SystCitiesPage} from './syst-cities.page';\nimport { SystCitiesListComponent} from \"./syst-cities-list/syst-cities-list.component\";\nimport { SystCitiesCreateComponent} from \"./syst-cities-create/syst-cities-create.component\";\nimport { SystCitiesDuplicateComponent} from \"./syst-cities-duplicate/syst-cities-duplicate.component\";\nimport { SystCitiesEditComponent} from \"./syst-cities-edit/syst-cities-edit.component\";\nimport { SystCitiesFormComponent} from \"./syst-cities-form/syst-cities-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        SystCitiesPageRoutingModule\n    ],\n    declarations: [\n        SystCitiesPage,\n        SystCitiesListComponent,\n        SystCitiesCreateComponent,\n        SystCitiesDuplicateComponent,\n        SystCitiesEditComponent,\n        SystCitiesFormComponent,\n    ]\n})\nexport class SystCitiesPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY2l0aWVzL3N5c3QtY2l0aWVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-syst-cities',\n  templateUrl: './syst-cities.page.html',\n  styleUrls: ['./syst-cities.page.scss'],\n})\nexport class SystCitiesPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { SystCity, SystCityLists } from \"./syst-city\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SystCitiesService {\n\n    public systCitiesUrl = 'syst-cities';\n    public systCitiesFormValid = new BehaviorSubject<boolean>(false);\n\n    public systCities: SystCity[] = [];\n    public systCity: SystCity = <SystCity>{};\n    public systCityLists: SystCityLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getSystCities(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.systCitiesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.systCities = res.data;\n                    this.systCityLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editSystCity(id: any) {\n        this.api.get(this.systCitiesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.systCity = res.data.model;\n                    this.systCityLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateSystCity() {\n        this.api.put(this.systCitiesUrl + '/' + this.systCity.id, {\n            model: this.systCity,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getSystCities(1);\n            }\n        );\n    }\n\n    public createSystCity() {\n        this.api.get(this.systCitiesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.systCity = <SystCity>{};\n                    this.systCityLists = res.lists\n                }\n            );\n    }\n\n    public storeSystCity() {\n        this.api.post(this.systCitiesUrl, {\n            model: this.systCity,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getSystCities(1);\n            }\n        );\n    }\n\n    public async deleteSystCity(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.systCitiesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getSystCities(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}