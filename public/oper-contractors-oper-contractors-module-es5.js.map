{"version":3,"sources":["webpack:///src/app/oper-contractors/oper-contractors-create/oper-contractors-create.component.html","webpack:///src/app/oper-contractors/oper-contractors-duplicate/oper-contractors-duplicate.component.html","webpack:///src/app/oper-contractors/oper-contractors-edit/oper-contractors-edit.component.html","webpack:///src/app/oper-contractors/oper-contractors-form/oper-contractors-form.component.html","webpack:///src/app/oper-contractors/oper-contractors-list/oper-contractors-list.component.html","webpack:///src/app/oper-contractors/oper-contractors.page.html","webpack:///src/app/oper-contractors/oper-contractors-create/oper-contractors-create.component.scss","webpack:///src/app/oper-contractors/oper-contractors-create/oper-contractors-create.component.ts","webpack:///src/app/oper-contractors/oper-contractors-duplicate/oper-contractors-duplicate.component.scss","webpack:///src/app/oper-contractors/oper-contractors-duplicate/oper-contractors-duplicate.component.ts","webpack:///src/app/oper-contractors/oper-contractors-edit/oper-contractors-edit.component.scss","webpack:///src/app/oper-contractors/oper-contractors-edit/oper-contractors-edit.component.ts","webpack:///src/app/oper-contractors/oper-contractors-form/oper-contractors-form.component.scss","webpack:///src/app/oper-contractors/oper-contractors-form/oper-contractors-form.component.ts","webpack:///src/app/oper-contractors/oper-contractors-list/oper-contractors-list.component.scss","webpack:///src/app/oper-contractors/oper-contractors-list/oper-contractors-list.component.ts","webpack:///src/app/oper-contractors/oper-contractors-routing.module.ts","webpack:///src/app/oper-contractors/oper-contractors.module.ts","webpack:///src/app/oper-contractors/oper-contractors.page.scss","webpack:///src/app/oper-contractors/oper-contractors.page.ts","webpack:///src/app/oper-contractors/oper-contractors.service.ts"],"names":["OperContractorsCreateComponent","operContractorsService","route","platform","splitPanel","id","formValid","clearPosts","show","next","operContractorForm","operContractorsForm","valueChanges","subscribe","data","operContractorsFormValid","valid","console","log","createOperContractor","operContractor","selector","template","OperContractorsDuplicateComponent","OperContractorsEditComponent","model","snapshot","paramMap","get","editOperContractor","OperContractorsFormComponent","toTitlecase","validationMessages","type","message","transform","event","operMovementIds","value","length","i","push","oper_movement_ids","user_id","OperContractorsListComponent","api","loading","getOperContractors","content","scrollToTop","routes","path","component","OperContractorsPageRoutingModule","imports","forChild","exports","OperContractorsPageModule","declarations","OperContractorsPage","OperContractorsService","alert","toast","router","navigation","operContractorsUrl","operContractors","operContractorLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"oper-contractors-oper-contractors-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/oper-contractors'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"operContractorsService.storeOperContractor()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!operContractorsService.operContractorsFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'CONTRATISTAS OPERATIVOS' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-oper-contractors-form #operContractorForm [model]=\\\"operContractorsService.operContractor\\\"></app-oper-contractors-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  OperContractors duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/oper-contractors'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"operContractorsService.updateOperContractor()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!operContractorsService.operContractorsFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'CONTRATISTAS OPERATIVOS' | titlecase}}: {{ operContractorsService.operContractor?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-oper-contractors-form #operContractorForm [model]=\\\"operContractorsService.operContractor\\\"></app-oper-contractors-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #operContractorsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- oper_movement_ids -->\\r\\n    <!--<ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'MOVIMIENTOS OPERATIVOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_movement_ids\\\"\\r\\n                          id=\\\"oper_movement_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_movements\\\"\\r\\n                          [items]=\\\"operContractorsService.operContractorLists.OperMovement\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('MOVIMIENTOS OPERATIVOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('MOVIMIENTOS OPERATIVOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperMovementIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_movement_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['oper_movement_ids']?.hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>-->\\r\\n    <!-- end oper_movement_ids -->\\r\\n\\r\\n    <!-- user_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>Usuario</ion-label>\\r\\n        <ionic-selectable name=\\\"user_id\\\"\\r\\n                          id=\\\"user_id-field\\\"\\r\\n                          [(ngModel)]=\\\"model.user\\\"\\r\\n                          [items]=\\\"operContractorsService.operContractorLists.User\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"false\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar usuarios'\\\"\\r\\n                          [searchFailText]=\\\"'No se encontraron usuarios  que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setUserId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.user_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['user_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end oper_movement_ids -->\\r\\n\\r\\n            <!-- name -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"name\\\"\\r\\n                            id=\\\"name-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end name -->\\r\\n\\r\\n\\r\\n            <!-- document -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'DOCUMENTO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.document\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"document\\\"\\r\\n                            id=\\\"document-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.document\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['document']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end document -->\\r\\n\\r\\n\\r\\n            <!-- address -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'DIRECCIÓN' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.address\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"address\\\"\\r\\n                            id=\\\"address-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.address\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['address']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end address -->\\r\\n\\r\\n\\r\\n            <!-- phone -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TELÉFONO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.phone\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"phone\\\"\\r\\n                            id=\\\"phone-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.phone\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['phone']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end phone -->\\r\\n\\r\\n\\r\\n            <!-- email -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CORREO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.email\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"email\\\"\\r\\n                            id=\\\"email-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['email']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end email -->\\r\\n\\r\\n\\r\\n            <!-- phone_support -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TELÉFONO DE SOPORTE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.phone_support\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"phone_support\\\"\\r\\n                            id=\\\"phone_support-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.phone_support\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['phone_support']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end phone_support -->\\r\\n\\r\\n\\r\\n            <!-- email_support -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CORREO DE SOPORTE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.email_support\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"email_support\\\"\\r\\n                            id=\\\"email_support-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.email_support\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['email_support']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end email_support -->\\r\\n\\r\\n\\r\\n            <!-- contact -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CONTACTO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.contact\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"contact\\\"\\r\\n                            id=\\\"contact-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.contact\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['contact']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end contact -->\\r\\n\\r\\n\\r\\n            <!-- business_hour -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'HORARIO DE ATENCIÓN' | titlecase }}</ion-label>\\r\\n                <ion-textarea [(ngModel)]=\\\"model.business_hour\\\"\\r\\n                              name=\\\"business_hour\\\"\\r\\n                              id=\\\"business_hour-field\\\"\\r\\n                              rows=\\\"6\\\"\\r\\n                              placeholder=\\\"\\\"></ion-textarea>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.business_hour\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['business_hour']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end business_hour -->\\r\\n\\r\\n\\r\\n            <!-- phone_emergency -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TELÉFONO DE EMERGENCIA' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.phone_emergency\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"phone_emergency\\\"\\r\\n                            id=\\\"phone_emergency-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.phone_emergency\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['phone_emergency']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end phone_emergency -->\\r\\n\\r\\n\\r\\n            <!-- email_emergency -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CORREO DE EMERGENCIA' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.email_emergency\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"email_emergency\\\"\\r\\n                            id=\\\"email_emergency-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.email_emergency\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['email_emergency']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end email_emergency -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'CONTRATISTAS OPERATIVOS' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"oper-contractors/create\\\"\\r\\n                 primaryText=\\\"Crear {{'CONTRATISTAS OPERATIVOS' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                       [placeholder]=\\\"'Buscar ' + ('CONTRATISTAS OPERATIVOS' | lowercase )\\\"\\r\\n                       (ionCancel)=\\\"this.operContractorsService.searchValue = ''; operContractorsService.getOperContractors()\\\"\\r\\n                       (keyup.enter)=\\\"operContractorsService.getOperContractors()\\\"\\r\\n                       [(ngModel)]=\\\"operContractorsService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operContractorsService.operContractors?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let operContractor of operContractorsService.operContractors; let index = index\\\">\\r\\n            <ion-list>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'DOCUMENTO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.document }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'DIRECCIÓN' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.address }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.phone }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CORREO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.email }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO DE SOPORTE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.phone_support }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CORREO DE SOPORTE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.email_support }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CONTACTO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.contact }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'HORARIO DE ATENCIÓN' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.business_hour }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO DE EMERGENCIA' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.phone_emergency }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CORREO DE EMERGENCIA' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.email_emergency }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'MOVIMIENTOS OPERATIVOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"operContractor?.oper_movements?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let operMovement of operContractor?.oper_movements; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/oper-movements/{{ operMovement?.id }}/edit\\\">{{ operMovement?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/oper-contractors/' + operContractor?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"operContractorsService.deleteOperContractor(operContractor?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operContractorsService.operContractors?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'CONTRATISTAS OPERATIVOS' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/oper-contractors/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\r\\n                Crear {{'CONTRATISTAS OPERATIVOS' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"operContractorsService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"operContractorsService.getOperContractors(operContractorsService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"operContractorsService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{operContractorsService.meta.current_page}}\\r\\n                /{{operContractorsService.meta.last_page}} {{operContractorsService.meta.from}}-{{operContractorsService.meta.to}}\\r\\n                /{{operContractorsService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"operContractorsService.getOperContractors(operContractorsService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"operContractorsService.meta.current_page == operContractorsService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"CONTRATISTAS OPERATIVOS\\\"></app-main-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/oper-contractors/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'CONTRATISTAS OPERATIVOS'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/oper-contractors/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'CONTRATISTAS OPERATIVOS' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1jcmVhdGUvb3Blci1jb250cmFjdG9ycy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {OperContractorsService} from \"../oper-contractors.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {OperContractor} from \"../oper-contractor\";\r\nimport {OperContractorsFormComponent} from \"../oper-contractors-form/oper-contractors-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-oper-contractors-create',\r\n    templateUrl: './oper-contractors-create.component.html',\r\n    styleUrls: ['./oper-contractors-create.component.scss']\r\n})\r\nexport class OperContractorsCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('operContractorForm') operContractorForm: OperContractorsFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public operContractorsService: OperContractorsService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.operContractorForm.operContractorsForm.valueChanges.subscribe((data) => {\r\n            this.operContractorsService.operContractorsFormValid.next(this.operContractorForm.operContractorsForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.operContractorsService.createOperContractor();\r\n        this.operContractorsService.operContractor = <OperContractor>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1kdXBsaWNhdGUvb3Blci1jb250cmFjdG9ycy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-oper-contractors-duplicate',\r\n  templateUrl: './oper-contractors-duplicate.component.html',\r\n  styleUrls: ['./oper-contractors-duplicate.component.scss'],\r\n})\r\nexport class OperContractorsDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1lZGl0L29wZXItY29udHJhY3RvcnMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {OperContractorsService} from \"../oper-contractors.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {OperContractor} from \"../oper-contractor\";\r\nimport {OperContractorsFormComponent} from \"../oper-contractors-form/oper-contractors-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-oper-contractors-edit',\r\n  templateUrl: './oper-contractors-edit.component.html',\r\n  styleUrls: ['./oper-contractors-edit.component.scss']\r\n})\r\nexport class OperContractorsEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('operContractorForm') operContractorForm: OperContractorsFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: OperContractor = null;\r\n\r\n  constructor(\r\n      public operContractorsService: OperContractorsService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.operContractorsService.editOperContractor(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.operContractorForm.operContractorsForm.valueChanges.subscribe((data) => {\r\n          this.operContractorsService.operContractorsFormValid.next(this.operContractorForm.operContractorsForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1mb3JtL29wZXItY29udHJhY3RvcnMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {OperContractor} from \"../oper-contractor\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {OperContractorsService} from \"../oper-contractors.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-oper-contractors-form',\r\n    templateUrl: './oper-contractors-form.component.html',\r\n    styleUrls: ['./oper-contractors-form.component.scss']\r\n})\r\nexport class OperContractorsFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: OperContractor = <OperContractor>{};\r\n\r\n    @ViewChild('operContractorsForm') operContractorsForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'document': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DOCUMENTO') + ' es obligatorio.'},\r\n        ],\r\n        'address': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DIRECCIÓN') + ' es obligatorio.'},\r\n        ],\r\n        'phone': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO') + ' es obligatorio.'},\r\n        ],\r\n        'email': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CORREO') + ' es obligatorio.'},\r\n        ],\r\n        'phone_support': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO DE SOPORTE') + ' es obligatorio.'},\r\n        ],\r\n        'email_support': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CORREO DE SOPORTE') + ' es obligatorio.'},\r\n        ],\r\n        'contact': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CONTACTO') + ' es obligatorio.'},\r\n        ],\r\n        'business_hour': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('HORARIO DE ATENCIÓN') + ' es obligatorio.'},\r\n        ],\r\n        'phone_emergency': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO DE EMERGENCIA') + ' es obligatorio.'},\r\n        ],\r\n        'email_emergency': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CORREO DE EMERGENCIA') + ' es obligatorio.'},\r\n        ],\r\n        'oper_movement_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('MOVIMIENTOS OPERATIVOS') + ' es obligatorio.'},\r\n        ],\r\n        'user_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('usuario') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public operContractorsService: OperContractorsService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setOperMovementIds\r\n    setOperMovementIds(event: any) {\r\n        let operMovementIds = null;\r\n        if (event.value.length) {\r\n            operMovementIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                operMovementIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.operContractorsService.operContractor.oper_movement_ids = operMovementIds;\r\n    }\r\n    // end setOperMovementIds\r\n\r\n\r\n    setUserId(event: any) {\r\n        this.operContractorsService.operContractor.user_id = event.value ? event.value.id : null;\r\n    }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1saXN0L29wZXItY29udHJhY3RvcnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { OperContractorsService} from \"../oper-contractors.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-oper-contractors-list',\r\n    templateUrl: './oper-contractors-list.component.html',\r\n    styleUrls: ['./oper-contractors-list.component.scss'],\r\n})\r\nexport class OperContractorsListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public operContractorsService: OperContractorsService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.operContractorsService.getOperContractors();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OperContractorsPage } from './oper-contractors.page';\r\nimport {OperContractorsEditComponent} from \"./oper-contractors-edit/oper-contractors-edit.component\";\r\nimport {OperContractorsCreateComponent} from \"./oper-contractors-create/oper-contractors-create.component\";\r\nimport {OperContractorsListComponent} from \"./oper-contractors-list/oper-contractors-list.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: OperContractorsPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        component: OperContractorsListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      component: OperContractorsCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: OperContractorsEditComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class OperContractorsPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {OperContractorsPageRoutingModule} from './oper-contractors-routing.module';\r\n\r\nimport { OperContractorsPage} from './oper-contractors.page';\r\nimport { OperContractorsListComponent} from \"./oper-contractors-list/oper-contractors-list.component\";\r\nimport { OperContractorsCreateComponent} from \"./oper-contractors-create/oper-contractors-create.component\";\r\nimport { OperContractorsDuplicateComponent} from \"./oper-contractors-duplicate/oper-contractors-duplicate.component\";\r\nimport { OperContractorsEditComponent} from \"./oper-contractors-edit/oper-contractors-edit.component\";\r\nimport { OperContractorsFormComponent} from \"./oper-contractors-form/oper-contractors-form.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        OperContractorsPageRoutingModule\r\n    ],\r\n    declarations: [\r\n        OperContractorsPage,\r\n        OperContractorsListComponent,\r\n        OperContractorsCreateComponent,\r\n        OperContractorsDuplicateComponent,\r\n        OperContractorsEditComponent,\r\n        OperContractorsFormComponent,\r\n    ]\r\n})\r\nexport class OperContractorsPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-oper-contractors',\r\n  templateUrl: './oper-contractors.page.html',\r\n  styleUrls: ['./oper-contractors.page.scss'],\r\n})\r\nexport class OperContractorsPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport { OperContractor, OperContractorLists } from \"./oper-contractor\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OperContractorsService {\r\n\r\n    public operContractorsUrl = 'oper-contractors';\r\n    public operContractorsFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public operContractors: OperContractor[] = [];\r\n    public operContractor: OperContractor = <OperContractor>{};\r\n    public operContractorLists: OperContractorLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n\r\n    public getOperContractors(page: any = this.page, perPage: any = this.perPage) {\r\n\r\n        this.api.get(this.operContractorsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.operContractors = res.data;\r\n                    this.operContractorLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editOperContractor(id: any) {\r\n        this.api.get(this.operContractorsUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.operContractor = res.data.model;\r\n                    this.operContractorLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateOperContractor() {\r\n        this.api.put(this.operContractorsUrl + '/' + this.operContractor.id, {\r\n            model: this.operContractor,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getOperContractors(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createOperContractor() {\r\n        this.api.get(this.operContractorsUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.operContractor = <OperContractor>{};\r\n                    this.operContractorLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeOperContractor() {\r\n        this.api.post(this.operContractorsUrl, {\r\n            model: this.operContractor,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getOperContractors(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteOperContractor(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.operContractorsUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getOperContractors(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n}\r\n"]}