{"version":3,"sources":["webpack:///src/app/syst-countries/syst-countries-create/syst-countries-create.component.html","webpack:///src/app/syst-countries/syst-countries-duplicate/syst-countries-duplicate.component.html","webpack:///src/app/syst-countries/syst-countries-edit/syst-countries-edit.component.html","webpack:///src/app/syst-countries/syst-countries-form/syst-countries-form.component.html","webpack:///src/app/syst-countries/syst-countries-list/syst-countries-list.component.html","webpack:///src/app/syst-countries/syst-countries.page.html","webpack:///src/app/syst-countries/syst-countries-create/syst-countries-create.component.scss","webpack:///src/app/syst-countries/syst-countries-create/syst-countries-create.component.ts","webpack:///src/app/syst-countries/syst-countries-duplicate/syst-countries-duplicate.component.scss","webpack:///src/app/syst-countries/syst-countries-duplicate/syst-countries-duplicate.component.ts","webpack:///src/app/syst-countries/syst-countries-edit/syst-countries-edit.component.scss","webpack:///src/app/syst-countries/syst-countries-edit/syst-countries-edit.component.ts","webpack:///src/app/syst-countries/syst-countries-form/syst-countries-form.component.scss","webpack:///src/app/syst-countries/syst-countries-form/syst-countries-form.component.ts","webpack:///src/app/syst-countries/syst-countries-list/syst-countries-list.component.scss","webpack:///src/app/syst-countries/syst-countries-list/syst-countries-list.component.ts","webpack:///src/app/syst-countries/syst-countries-routing.module.ts","webpack:///src/app/syst-countries/syst-countries.module.ts","webpack:///src/app/syst-countries/syst-countries.page.scss","webpack:///src/app/syst-countries/syst-countries.page.ts","webpack:///src/app/syst-countries/syst-countries.service.ts"],"names":["SystCountriesCreateComponent","systCountriesService","route","platform","splitPanel","id","formValid","clearPosts","show","next","systCountryForm","systCountriesForm","valueChanges","subscribe","data","systCountriesFormValid","valid","console","log","createSystCountry","systCountry","selector","template","SystCountriesDuplicateComponent","SystCountriesEditComponent","model","snapshot","paramMap","get","editSystCountry","SystCountriesFormComponent","toTitlecase","validationMessages","type","message","transform","event","userProfileIds","value","length","i","push","user_profile_ids","systRegionIds","syst_region_ids","SystCountriesListComponent","api","loading","getSystCountries","content","scrollToTop","routes","path","component","SystCountriesPageRoutingModule","imports","forChild","exports","SystCountriesPageModule","declarations","SystCountriesPage","SystCountriesService","alert","toast","router","navigation","systCountriesUrl","systCountries","systCountryLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"syst-countries-syst-countries-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/syst-countries'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"systCountriesService.storeSystCountry()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!systCountriesService.systCountriesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'PAISES' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-syst-countries-form #systCountryForm [model]=\\\"systCountriesService.systCountry\\\"></app-syst-countries-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  SystCountries duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/syst-countries'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"systCountriesService.updateSystCountry()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!systCountriesService.systCountriesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'PAISES' | titlecase}}: {{ systCountriesService.systCountry?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-syst-countries-form #systCountryForm [model]=\\\"systCountriesService.systCountry\\\"></app-syst-countries-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #systCountriesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- user_profile_ids -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'PERFILES DE USUARIOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"user_profile_ids\\\"\\r\\n                          id=\\\"user_profile_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.user_profiles\\\"\\r\\n                          [items]=\\\"systCountriesService.systCountryLists.UserProfile\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('PERFILES DE USUARIOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('PERFILES DE USUARIOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setUserProfileIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.user_profile_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systCountriesForm.form.controls['user_profile_ids']?.hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end user_profile_ids -->\\r\\n\\r\\n\\r\\n    <!-- syst_region_ids -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'DEPARTAMENTOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"syst_region_ids\\\"\\r\\n                          id=\\\"syst_region_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.syst_regions\\\"\\r\\n                          [items]=\\\"systCountriesService.systCountryLists.SystRegion\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('DEPARTAMENTOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('DEPARTAMENTOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setSystRegionIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_region_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systCountriesForm.form.controls['syst_region_ids']?.hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end syst_region_ids -->\\r\\n\\r\\n\\r\\n            <!-- name -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"name\\\"\\r\\n                            id=\\\"name-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"systCountriesForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end name -->\\r\\n\\r\\n\\r\\n            <!-- code -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"code\\\"\\r\\n                            id=\\\"code-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"systCountriesForm.form.controls['code']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end code -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'PAISES' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"syst-countries/create\\\"\\r\\n                 primaryText=\\\"Crear {{'PAISES' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                       [placeholder]=\\\"'Buscar ' + ('PAISES' | lowercase )\\\"\\r\\n                       (ionCancel)=\\\"this.systCountriesService.searchValue = ''; systCountriesService.getSystCountries()\\\"\\r\\n                       (keyup.enter)=\\\"systCountriesService.getSystCountries()\\\"\\r\\n                       [(ngModel)]=\\\"systCountriesService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && systCountriesService.systCountries?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let systCountry of systCountriesService.systCountries; let index = index\\\">\\r\\n            <ion-list>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ systCountry?.name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ systCountry?.code }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PERFILES DE USUARIOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"systCountry?.user_profiles?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let userProfile of systCountry?.user_profiles; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/user-profiles/{{ userProfile?.id }}/edit\\\">{{ userProfile?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'DEPARTAMENTOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"systCountry?.syst_regions?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let systRegion of systCountry?.syst_regions; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/syst-regions/{{ systRegion?.id }}/edit\\\">{{ systRegion?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/syst-countries/' + systCountry?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"systCountriesService.deleteSystCountry(systCountry?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !systCountriesService.systCountries?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'PAISES' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/syst-countries/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\r\\n                Crear {{'PAISES' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"systCountriesService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"systCountriesService.getSystCountries(systCountriesService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"systCountriesService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{systCountriesService.meta.current_page}}\\r\\n                /{{systCountriesService.meta.last_page}} {{systCountriesService.meta.from}}-{{systCountriesService.meta.to}}\\r\\n                /{{systCountriesService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"systCountriesService.getSystCountries(systCountriesService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"systCountriesService.meta.current_page == systCountriesService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"PAISES\\\"></app-main-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/syst-countries/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'PAISES'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/syst-countries/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'PAISES' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY291bnRyaWVzL3N5c3QtY291bnRyaWVzLWNyZWF0ZS9zeXN0LWNvdW50cmllcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {SystCountriesService} from \"../syst-countries.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {SystCountry} from \"../syst-country\";\r\nimport {SystCountriesFormComponent} from \"../syst-countries-form/syst-countries-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-syst-countries-create',\r\n    templateUrl: './syst-countries-create.component.html',\r\n    styleUrls: ['./syst-countries-create.component.scss']\r\n})\r\nexport class SystCountriesCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('systCountryForm') systCountryForm: SystCountriesFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public systCountriesService: SystCountriesService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.systCountryForm.systCountriesForm.valueChanges.subscribe((data) => {\r\n            this.systCountriesService.systCountriesFormValid.next(this.systCountryForm.systCountriesForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.systCountriesService.createSystCountry();\r\n        this.systCountriesService.systCountry = <SystCountry>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY291bnRyaWVzL3N5c3QtY291bnRyaWVzLWR1cGxpY2F0ZS9zeXN0LWNvdW50cmllcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-syst-countries-duplicate',\r\n  templateUrl: './syst-countries-duplicate.component.html',\r\n  styleUrls: ['./syst-countries-duplicate.component.scss'],\r\n})\r\nexport class SystCountriesDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY291bnRyaWVzL3N5c3QtY291bnRyaWVzLWVkaXQvc3lzdC1jb3VudHJpZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {SystCountriesService} from \"../syst-countries.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {SystCountry} from \"../syst-country\";\r\nimport {SystCountriesFormComponent} from \"../syst-countries-form/syst-countries-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-syst-countries-edit',\r\n  templateUrl: './syst-countries-edit.component.html',\r\n  styleUrls: ['./syst-countries-edit.component.scss']\r\n})\r\nexport class SystCountriesEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('systCountryForm') systCountryForm: SystCountriesFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: SystCountry = null;\r\n\r\n  constructor(\r\n      public systCountriesService: SystCountriesService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.systCountriesService.editSystCountry(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.systCountryForm.systCountriesForm.valueChanges.subscribe((data) => {\r\n          this.systCountriesService.systCountriesFormValid.next(this.systCountryForm.systCountriesForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY291bnRyaWVzL3N5c3QtY291bnRyaWVzLWZvcm0vc3lzdC1jb3VudHJpZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {SystCountry} from \"../syst-country\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {SystCountriesService} from \"../syst-countries.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-syst-countries-form',\r\n    templateUrl: './syst-countries-form.component.html',\r\n    styleUrls: ['./syst-countries-form.component.scss']\r\n})\r\nexport class SystCountriesFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: SystCountry = <SystCountry>{};\r\n\r\n    @ViewChild('systCountriesForm') systCountriesForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'code': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\r\n        ],\r\n        'user_profile_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERFILES DE USUARIOS') + ' es obligatorio.'},\r\n        ],\r\n        'syst_region_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DEPARTAMENTOS') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public systCountriesService: SystCountriesService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setUserProfileIds\r\n    setUserProfileIds(event: any) {\r\n        let userProfileIds = null;\r\n        if (event.value.length) {\r\n            userProfileIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                userProfileIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.systCountriesService.systCountry.user_profile_ids = userProfileIds;\r\n    }\r\n    // end setUserProfileIds\r\n\r\n\r\n    // set setSystRegionIds\r\n    setSystRegionIds(event: any) {\r\n        let systRegionIds = null;\r\n        if (event.value.length) {\r\n            systRegionIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                systRegionIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.systCountriesService.systCountry.syst_region_ids = systRegionIds;\r\n    }\r\n    // end setSystRegionIds\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY291bnRyaWVzL3N5c3QtY291bnRyaWVzLWxpc3Qvc3lzdC1jb3VudHJpZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { SystCountriesService} from \"../syst-countries.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-syst-countries-list',\r\n    templateUrl: './syst-countries-list.component.html',\r\n    styleUrls: ['./syst-countries-list.component.scss'],\r\n})\r\nexport class SystCountriesListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public systCountriesService: SystCountriesService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.systCountriesService.getSystCountries();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SystCountriesPage } from './syst-countries.page';\r\nimport {SystCountriesEditComponent} from \"./syst-countries-edit/syst-countries-edit.component\";\r\nimport {SystCountriesCreateComponent} from \"./syst-countries-create/syst-countries-create.component\";\r\nimport {SystCountriesListComponent} from \"./syst-countries-list/syst-countries-list.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: SystCountriesPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        component: SystCountriesListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      component: SystCountriesCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: SystCountriesEditComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class SystCountriesPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {SystCountriesPageRoutingModule} from './syst-countries-routing.module';\r\n\r\nimport { SystCountriesPage} from './syst-countries.page';\r\nimport { SystCountriesListComponent} from \"./syst-countries-list/syst-countries-list.component\";\r\nimport { SystCountriesCreateComponent} from \"./syst-countries-create/syst-countries-create.component\";\r\nimport { SystCountriesDuplicateComponent} from \"./syst-countries-duplicate/syst-countries-duplicate.component\";\r\nimport { SystCountriesEditComponent} from \"./syst-countries-edit/syst-countries-edit.component\";\r\nimport { SystCountriesFormComponent} from \"./syst-countries-form/syst-countries-form.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        SystCountriesPageRoutingModule\r\n    ],\r\n    declarations: [\r\n        SystCountriesPage,\r\n        SystCountriesListComponent,\r\n        SystCountriesCreateComponent,\r\n        SystCountriesDuplicateComponent,\r\n        SystCountriesEditComponent,\r\n        SystCountriesFormComponent,\r\n    ]\r\n})\r\nexport class SystCountriesPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY291bnRyaWVzL3N5c3QtY291bnRyaWVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-syst-countries',\r\n  templateUrl: './syst-countries.page.html',\r\n  styleUrls: ['./syst-countries.page.scss'],\r\n})\r\nexport class SystCountriesPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport { SystCountry, SystCountryLists } from \"./syst-country\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SystCountriesService {\r\n\r\n    public systCountriesUrl = 'syst-countries';\r\n    public systCountriesFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public systCountries: SystCountry[] = [];\r\n    public systCountry: SystCountry = <SystCountry>{};\r\n    public systCountryLists: SystCountryLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n\r\n    public getSystCountries(page: any = this.page, perPage: any = this.perPage) {\r\n\r\n        this.api.get(this.systCountriesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.systCountries = res.data;\r\n                    this.systCountryLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editSystCountry(id: any) {\r\n        this.api.get(this.systCountriesUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.systCountry = res.data.model;\r\n                    this.systCountryLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateSystCountry() {\r\n        this.api.put(this.systCountriesUrl + '/' + this.systCountry.id, {\r\n            model: this.systCountry,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getSystCountries(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createSystCountry() {\r\n        this.api.get(this.systCountriesUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.systCountry = <SystCountry>{};\r\n                    this.systCountryLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeSystCountry() {\r\n        this.api.post(this.systCountriesUrl, {\r\n            model: this.systCountry,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getSystCountries(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteSystCountry(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.systCountriesUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getSystCountries(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n}\r\n"]}