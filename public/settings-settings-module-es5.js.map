{"version":3,"sources":["webpack:///src/app/settings/settings-form/settings-form.component.html","webpack:///src/app/settings/settings.page.html","webpack:///src/app/settings/settings-form/settings-form.component.scss","webpack:///src/app/settings/settings-form/settings-form.component.ts","webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/settings.page.scss","webpack:///src/app/settings/settings.page.ts"],"names":["SettingsFormComponent","selector","template","routes","path","component","SettingsPageRoutingModule","imports","forChild","exports","SettingsPageModule","declarations","providers","SettingsPage","settingsService","modalController","splitPane","document","querySelector","windowWidth","window","innerWidth","splitPaneShownAt","when","open","menu","action","create","componentProps","modal","onDidDismiss","then","dataReturned","data","present"],"mappings":"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","file":"settings-settings-module-es5.js","sourcesContent":["export default \"<p>\\n  settings-form works!\\n</p>\\n\";","export default \"<ion-header translucent=\\\"true\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-toggle auto-hide=\\\"false\\\" menu=\\\"main-menu\\\">\\n                <ion-button (click)=\\\"toggleMenu()\\\">\\n                    <ion-icon slot=\\\"icon-only\\\" name=\\\"menu\\\"></ion-icon>\\n                </ion-button>\\n            </ion-menu-toggle>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"success\\\"\\n                        (click)=\\\"settingsService.newSetting(); openModal('Crear')\\\">\\n                <ion-icon slot=\\\"icon-only\\\" [name]=\\\"'add-circle-outline'\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>Parametros</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <app-settings-list></app-settings-list>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLWZvcm0vc2V0dGluZ3MtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-settings-form',\n  templateUrl: './settings-form.component.html',\n  styleUrls: ['./settings-form.component.scss'],\n})\nexport class SettingsFormComponent implements OnInit {\n\n  @ViewChild('settingsForm') settingsForm: FormGroup;\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SettingsPageRoutingModule} from './settings-routing.module';\n\nimport {SettingsPage} from './settings.page';\nimport {SharedModule} from \"../@shared/shared.module\";\nimport {SettingsListComponent} from \"./settings-list/settings-list.component\";\nimport {SettingsFormComponent} from \"./settings-form/settings-form.component\";\nimport {SettingsModalComponent} from \"./settings-modal/settings-modal.component\";\nimport {SettingsService} from \"./settings.service\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        SettingsPageRoutingModule,\n    ],\n    declarations: [\n        SettingsPage,\n        SettingsListComponent,\n        SettingsFormComponent,\n        SettingsModalComponent,\n    ],\n    providers: [\n        SettingsService,\n    ]\n})\nexport class SettingsPageModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {ModalController} from \"@ionic/angular\";\nimport {SettingsService} from \"./settings.service\";\nimport {SettingsModalComponent} from \"./settings-modal/settings-modal.component\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n\n  dataReturned: any;\n\n  constructor(\n      public settingsService: SettingsService,\n      public modalController: ModalController,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  toggleMenu() {\n    const splitPane = document.querySelector('ion-split-pane');\n    const windowWidth = window.innerWidth;\n    const splitPaneShownAt = 992;\n    const when = `(min-width: ${splitPaneShownAt}px)`;\n    if (windowWidth >= splitPaneShownAt) {\n      // split pane view is visible\n      const open = splitPane.when === when;\n      splitPane.when = open ? false : when;\n    } else {\n      // split pane view is not visible\n      // toggle menu open\n      const menu = splitPane.querySelector('ion-menu');\n      return menu.open();\n    }\n  }\n\n  async openModal(action = null) {\n    const modal = await this.modalController.create({\n      component: SettingsModalComponent,\n      componentProps: {\n        action: action ?? ''\n      }\n    });\n\n    modal.onDidDismiss().then((dataReturned) => {\n      if (dataReturned !== null) {\n        this.dataReturned = dataReturned.data;\n        // console.table(dataReturned);\n      }\n    });\n\n    return await modal.present();\n  }\n\n}\n"]}