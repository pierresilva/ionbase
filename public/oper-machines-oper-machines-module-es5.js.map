{"version":3,"sources":["webpack:///src/app/oper-machines/oper-machines-create/oper-machines-create.component.html","webpack:///src/app/oper-machines/oper-machines-duplicate/oper-machines-duplicate.component.html","webpack:///src/app/oper-machines/oper-machines-edit/oper-machines-edit.component.html","webpack:///src/app/oper-machines/oper-machines-form/oper-machines-form.component.html","webpack:///src/app/oper-machines/oper-machines-list/oper-machines-list.component.html","webpack:///src/app/oper-machines/oper-machines.page.html","webpack:///src/app/oper-machines/oper-machines-create/oper-machines-create.component.scss","webpack:///src/app/oper-machines/oper-machines-create/oper-machines-create.component.ts","webpack:///src/app/oper-machines/oper-machines-duplicate/oper-machines-duplicate.component.scss","webpack:///src/app/oper-machines/oper-machines-duplicate/oper-machines-duplicate.component.ts","webpack:///src/app/oper-machines/oper-machines-edit/oper-machines-edit.component.scss","webpack:///src/app/oper-machines/oper-machines-edit/oper-machines-edit.component.ts","webpack:///src/app/oper-machines/oper-machines-form/oper-machines-form.component.scss","webpack:///src/app/oper-machines/oper-machines-form/oper-machines-form.component.ts","webpack:///src/app/oper-machines/oper-machines-list/oper-machines-list.component.scss","webpack:///src/app/oper-machines/oper-machines-list/oper-machines-list.component.ts","webpack:///src/app/oper-machines/oper-machines-routing.module.ts","webpack:///src/app/oper-machines/oper-machines.module.ts","webpack:///src/app/oper-machines/oper-machines.page.scss","webpack:///src/app/oper-machines/oper-machines.page.ts","webpack:///src/app/oper-machines/oper-machines.service.ts"],"names":["OperMachinesCreateComponent","operMachinesService","route","platform","splitPanel","id","formValid","clearPosts","show","next","operMachineForm","operMachinesForm","valueChanges","subscribe","data","operMachinesFormValid","valid","console","log","createOperMachine","operMachine","selector","template","OperMachinesDuplicateComponent","OperMachinesEditComponent","model","snapshot","paramMap","get","editOperMachine","OperMachinesFormComponent","toTitlecase","validationMessages","type","message","transform","event","hous_unit_area_id","value","oper_contractor_id","operPreventiveMaintenanceIds","length","i","push","oper_preventive_maintenance_ids","operReplacementIds","oper_replacement_ids","OperMachinesListComponent","api","loading","getOperMachines","content","scrollToTop","routes","path","title","roles","component","OperMachinesPageRoutingModule","imports","forChild","exports","OperMachinesPageModule","declarations","OperMachinesPage","OperMachinesService","alert","toast","router","navigation","operMachinesUrl","operMachines","operMachineLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"oper-machines-oper-machines-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/oper-machines'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"operMachinesService.storeOperMachine()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!operMachinesService.operMachinesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'OPERATIVIDAD MAQUINARIA' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-oper-machines-form #operMachineForm [model]=\\\"operMachinesService.operMachine\\\"></app-oper-machines-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  OperMachines duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/oper-machines'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"operMachinesService.updateOperMachine()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!operMachinesService.operMachinesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'OPERATIVIDAD MAQUINARIA' | titlecase}}: {{ operMachinesService.operMachine?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-oper-machines-form #operMachineForm [model]=\\\"operMachinesService.operMachine\\\"></app-oper-machines-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #operMachinesForm=\\\"ngForm\\\"\\r\\n      novalidate\\r\\n      autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- hous_unit_area_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'AREA' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"hous_unit_area_id\\\"\\r\\n                          id=\\\"hous_unit_area_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.hous_unit_area\\\"\\r\\n                          [items]=\\\"operMachinesService.operMachineLists.HousUnitArea\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('UNIDADES HABITACIONALES AREAS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('UNIDADES HABITACIONALES AREAS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setHousUnitAreaId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.hous_unit_area_id\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['hous_unit_area_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end hous_unit_area_id -->\\r\\n\\r\\n\\r\\n    <!-- oper_contractor_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'CONTRATISTA' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_contractor_id\\\"\\r\\n                          id=\\\"oper_contractor_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_contractor\\\"\\r\\n                          [items]=\\\"operMachinesService.operMachineLists.OperContractor\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CONTRATISTAS OPERATIVOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('CONTRATISTAS OPERATIVOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperContractorId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_contractor_id\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['oper_contractor_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end oper_contractor_id -->\\r\\n\\r\\n\\r\\n    <!-- oper_preventive_maintenance_ids -->\\r\\n    <!--<ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'MTTO PREVENTIVOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_preventive_maintenance_ids\\\"\\r\\n                          id=\\\"oper_preventive_maintenance_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_preventive_maintenances\\\"\\r\\n                          [items]=\\\"operMachinesService.operMachineLists.OperPreventiveMaintenance\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('OPERATIVIDAD MTTO PREVENTIVOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('OPERATIVIDAD MTTO PREVENTIVOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperPreventiveMaintenanceIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_preventive_maintenance_ids\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['oper_preventive_maintenance_ids']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>-->\\r\\n    <!-- end oper_preventive_maintenance_ids -->\\r\\n\\r\\n\\r\\n    <!-- oper_replacement_ids -->\\r\\n    <!--<ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'OPERATIVIDAD REPUESTOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_replacement_ids\\\"\\r\\n                          id=\\\"oper_replacement_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_replacements\\\"\\r\\n                          [items]=\\\"operMachinesService.operMachineLists.OperReplacement\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('OPERATIVIDAD REPUESTOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('OPERATIVIDAD REPUESTOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperReplacementIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_replacement_ids\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['oper_replacement_ids']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>-->\\r\\n    <!-- end oper_replacement_ids -->\\r\\n\\r\\n\\r\\n    <!-- name -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                   type=\\\"text\\\"\\r\\n                   name=\\\"name\\\"\\r\\n                   id=\\\"name-field\\\"\\r\\n                   [required]=\\\"true\\\"\\r\\n                   placeholder=\\\"\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end name -->\\r\\n\\r\\n\\r\\n    <!-- contract_expiration_date -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'FECHA VENCIMIENTO CONTRATO' | titlecase }}</ion-label>\\r\\n        <ion-datetime name=\\\"contract_expiration_date\\\"\\r\\n                      id=\\\"contract_expiration_date-field\\\"\\r\\n                      [doneText]=\\\"'Seleccionar'\\\"\\r\\n                      [cancelText]=\\\"'Cancelar'\\\"\\r\\n                      [(ngModel)]=\\\"model.contract_expiration_date\\\"\\r\\n                      displayFormat=\\\"DD/MM/YYYY\\\"></ion-datetime>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.contract_expiration_date\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['contract_expiration_date']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end contract_expiration_date -->\\r\\n\\r\\n\\r\\n    <!-- contract_monthly_price -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'VALOR MENSUAL' | titlecase }}</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"model.contract_monthly_price\\\"\\r\\n                   type=\\\"number\\\"\\r\\n                   name=\\\"contract_monthly_price\\\"\\r\\n                   id=\\\"contract_monthly_price-field\\\"\\r\\n                   placeholder=\\\"\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.contract_monthly_price\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['contract_monthly_price']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end contract_monthly_price -->\\r\\n\\r\\n\\r\\n    <!-- monthly_periodicity -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'PERIODICIDAD MENSUAL' | titlecase }}</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"model.monthly_periodicity\\\"\\r\\n                   type=\\\"number\\\"\\r\\n                   name=\\\"monthly_periodicity\\\"\\r\\n                   id=\\\"monthly_periodicity-field\\\"\\r\\n                   placeholder=\\\"\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.monthly_periodicity\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['monthly_periodicity']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end monthly_periodicity -->\\r\\n\\r\\n\\r\\n    <!-- inventory_code -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'CÓDIGO INVENTARIO' | titlecase }}</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"model.inventory_code\\\"\\r\\n                   type=\\\"text\\\"\\r\\n                   name=\\\"inventory_code\\\"\\r\\n                   id=\\\"inventory_code-field\\\"\\r\\n                   placeholder=\\\"\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.inventory_code\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['inventory_code']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end monthly_periodicity -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'OPERATIVIDAD MAQUINARIA' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"oper-machines/create\\\"\\r\\n                 primaryText=\\\"Crear {{'OPERATIVIDAD MAQUINARIA' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                   [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                   [placeholder]=\\\"'Buscar ' + ('OPERATIVIDAD MAQUINARIA' | lowercase )\\\"\\r\\n                   (ionCancel)=\\\"this.operMachinesService.searchValue = ''; operMachinesService.getOperMachines()\\\"\\r\\n                   (keyup.enter)=\\\"operMachinesService.getOperMachines()\\\"\\r\\n                   [(ngModel)]=\\\"operMachinesService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operMachinesService.operMachines?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let operMachine of operMachinesService.operMachines; let index = index\\\">\\r\\n            <ion-list>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'NOMBRE' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">{{ operMachine?.name }}</div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'FECHA VENCIMIENTO CONTRATO' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">{{ operMachine?.contract_expiration_date | dateFormat:'DD/MM/YYYY' }}</div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'VALOR MENSUAL' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">{{ operMachine?.contract_monthly_price }}</div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'PERIODICIDAD MENSUAL' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">{{ operMachine?.monthly_periodicity }}</div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>Código Inventario</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">{{ operMachine?.inventory_code }}</div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'UNIDADES HABITACIONALES AREAS' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">\\r\\n                        <a routerLink=\\\"/hous-unit-areas/{{ operMachine?.hous_unit_area?.id }}/edit\\\">{{ operMachine?.hous_unit_area?.name }}</a>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'CONTRATISTAS OPERATIVOS' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">\\r\\n                        <a routerLink=\\\"/oper-contractors/{{ operMachine?.oper_contractor?.id }}/edit\\\">{{ operMachine?.oper_contractor?.name }}</a>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'OPERATIVIDAD MTTO PREVENTIVOS' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">\\r\\n                        <ng-container *ngIf=\\\"operMachine?.oper_preventive_maintenances?.length\\\">\\r\\n                            <ng-container *ngFor=\\\"let operPreventiveMaintenance of operMachine?.oper_preventive_maintenances; let last = last\\\">\\r\\n                                <a routerLink=\\\"/oper-preventive-maintenances/{{ operPreventiveMaintenance?.id }}/edit\\\">{{ operPreventiveMaintenance?.name }}</a>\\r\\n                                <span *ngIf=\\\"!last\\\">, </span>\\r\\n                            </ng-container>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'OPERATIVIDAD REPUESTOS' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">\\r\\n                        <ng-container *ngIf=\\\"operMachine?.oper_replacements?.length\\\">\\r\\n                            <ng-container *ngFor=\\\"let operReplacement of operMachine?.oper_replacements; let last = last\\\">\\r\\n                                <a routerLink=\\\"/oper-replacements/{{ operReplacement?.id }}/edit\\\">{{ operReplacement?.name }}</a>\\r\\n                                <span *ngIf=\\\"!last\\\">, </span>\\r\\n                            </ng-container>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\"\\r\\n                                    size=\\\"small\\\"\\r\\n                                    fill=\\\"clear\\\"\\r\\n                                    [routerLink]=\\\"'/oper-machines/' + operMachine?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\"\\r\\n                                    size=\\\"small\\\"\\r\\n                                    fill=\\\"clear\\\"\\r\\n                                    (click)=\\\"operMachinesService.deleteOperMachine(operMachine?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operMachinesService.operMachines?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\"\\r\\n                      name=\\\"warning-outline\\\"\\r\\n                      slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'OPERATIVIDAD MAQUINARIA' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/oper-machines/create'\\\"\\r\\n                        fill=\\\"outline\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        slot=\\\"end\\\">\\r\\n                Crear {{'OPERATIVIDAD MAQUINARIA' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\"\\r\\n                          slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"operMachinesService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\"\\r\\n                 size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"operMachinesService.getOperMachines(operMachinesService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"operMachinesService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\"\\r\\n                          name=\\\"play-outline\\\"\\r\\n                          style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"true\\\"> Pag: {{operMachinesService.meta.current_page}}\\r\\n                                           /{{operMachinesService.meta.last_page}} {{operMachinesService.meta.from}}\\r\\n                                           -{{operMachinesService.meta.to}}\\r\\n                                           /{{operMachinesService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"operMachinesService.getOperMachines(operMachinesService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"operMachinesService.meta.current_page == operMachinesService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\"\\r\\n                          name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"OPERATIVIDAD MAQUINARIA\\\"></app-main-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/oper-machines/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'OPERATIVIDAD MAQUINARIA'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/oper-machines/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'OPERATIVIDAD MAQUINARIA' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1jcmVhdGUvb3Blci1tYWNoaW5lcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {OperMachinesService} from \"../oper-machines.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {OperMachine} from \"../oper-machine\";\r\nimport {OperMachinesFormComponent} from \"../oper-machines-form/oper-machines-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-oper-machines-create',\r\n    templateUrl: './oper-machines-create.component.html',\r\n    styleUrls: ['./oper-machines-create.component.scss']\r\n})\r\nexport class OperMachinesCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('operMachineForm') operMachineForm: OperMachinesFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public operMachinesService: OperMachinesService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.operMachineForm.operMachinesForm.valueChanges.subscribe((data) => {\r\n            this.operMachinesService.operMachinesFormValid.next(this.operMachineForm.operMachinesForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.operMachinesService.createOperMachine();\r\n        this.operMachinesService.operMachine = <OperMachine>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1kdXBsaWNhdGUvb3Blci1tYWNoaW5lcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-oper-machines-duplicate',\r\n  templateUrl: './oper-machines-duplicate.component.html',\r\n  styleUrls: ['./oper-machines-duplicate.component.scss'],\r\n})\r\nexport class OperMachinesDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1lZGl0L29wZXItbWFjaGluZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {OperMachinesService} from \"../oper-machines.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {OperMachine} from \"../oper-machine\";\r\nimport {OperMachinesFormComponent} from \"../oper-machines-form/oper-machines-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-oper-machines-edit',\r\n  templateUrl: './oper-machines-edit.component.html',\r\n  styleUrls: ['./oper-machines-edit.component.scss']\r\n})\r\nexport class OperMachinesEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('operMachineForm') operMachineForm: OperMachinesFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: OperMachine = null;\r\n\r\n  constructor(\r\n      public operMachinesService: OperMachinesService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.operMachinesService.editOperMachine(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.operMachineForm.operMachinesForm.valueChanges.subscribe((data) => {\r\n          this.operMachinesService.operMachinesFormValid.next(this.operMachineForm.operMachinesForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"/* generated section */\\n/* end generated section */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3Blci1tYWNoaW5lcy9vcGVyLW1hY2hpbmVzLWZvcm0vb3Blci1tYWNoaW5lcy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFBO0FBRUEsMEJBQUEiLCJmaWxlIjoic3JjL2FwcC9vcGVyLW1hY2hpbmVzL29wZXItbWFjaGluZXMtZm9ybS9vcGVyLW1hY2hpbmVzLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnZW5lcmF0ZWQgc2VjdGlvbiAqL1xyXG5cclxuLyogZW5kIGdlbmVyYXRlZCBzZWN0aW9uICovXHJcbiJdfQ== */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {OperMachine} from \"../oper-machine\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {OperMachinesService} from \"../oper-machines.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-oper-machines-form',\r\n    templateUrl: './oper-machines-form.component.html',\r\n    styleUrls: ['./oper-machines-form.component.scss']\r\n})\r\nexport class OperMachinesFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: OperMachine = <OperMachine>{};\r\n\r\n    @ViewChild('operMachinesForm') operMachinesForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'hous_unit_area_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('AREA') + ' es obligatorio.'},\r\n        ],\r\n        'oper_contractor_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CONTRATISTA') + ' es obligatorio.'},\r\n        ],\r\n        'contract_expiration_date': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('FECHA VENCIMIENTO CONTRATO') + ' es obligatorio.'},\r\n        ],\r\n        'contract_monthly_price': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('VALOR MENSUAL') + ' es obligatorio.'},\r\n        ],\r\n        'monthly_periodicity': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERIODICIDAD MENSUAL') + ' es obligatorio.'},\r\n        ],\r\n        'oper_preventive_maintenance_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('OPERATIVIDAD MTTO PREVENTIVOS') + ' es obligatorio.'},\r\n        ],\r\n        'oper_replacement_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('OPERATIVIDAD REPUESTOS') + ' es obligatorio.'},\r\n        ],\r\n        'inventory_code': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO INVENTARIO') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public operMachinesService: OperMachinesService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setHousUnitAreaId\r\n\r\n    setHousUnitAreaId(event: any) {\r\n        this.operMachinesService.operMachine.hous_unit_area_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setHousUnitAreaId\r\n\r\n\r\n    // set setOperContractorId\r\n\r\n    setOperContractorId(event: any) {\r\n        this.operMachinesService.operMachine.oper_contractor_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setOperContractorId\r\n\r\n\r\n    // set setOperPreventiveMaintenanceIds\r\n    setOperPreventiveMaintenanceIds(event: any) {\r\n        let operPreventiveMaintenanceIds = null;\r\n        if (event.value.length) {\r\n            operPreventiveMaintenanceIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                operPreventiveMaintenanceIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.operMachinesService.operMachine.oper_preventive_maintenance_ids = operPreventiveMaintenanceIds;\r\n    }\r\n    // end setOperPreventiveMaintenanceIds\r\n\r\n\r\n    // set setOperReplacementIds\r\n    setOperReplacementIds(event: any) {\r\n        let operReplacementIds = null;\r\n        if (event.value.length) {\r\n            operReplacementIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                operReplacementIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.operMachinesService.operMachine.oper_replacement_ids = operReplacementIds;\r\n    }\r\n    // end setOperReplacementIds\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1saXN0L29wZXItbWFjaGluZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { OperMachinesService} from \"../oper-machines.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-oper-machines-list',\r\n    templateUrl: './oper-machines-list.component.html',\r\n    styleUrls: ['./oper-machines-list.component.scss'],\r\n})\r\nexport class OperMachinesListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public operMachinesService: OperMachinesService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.operMachinesService.getOperMachines();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OperMachinesPage } from './oper-machines.page';\r\nimport {OperMachinesEditComponent} from \"./oper-machines-edit/oper-machines-edit.component\";\r\nimport {OperMachinesCreateComponent} from \"./oper-machines-create/oper-machines-create.component\";\r\nimport {OperMachinesListComponent} from \"./oper-machines-list/oper-machines-list.component\";\r\n\r\nconst routes: Routes = [\r\n// generated section\r\n    {\r\n        path: '',\r\n        data: {\r\n            title: 'OPERATIVIDAD MAQUINARIA',\r\n            roles: ['admin'],\r\n            // permissions: []\r\n        },\r\n        component: OperMachinesPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        data: {\r\n            title: 'OPERATIVIDAD MAQUINARIA',\r\n            roles: ['admin'],\r\n            // permissions: []\r\n        },\r\n        component: OperMachinesListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      data: {\r\n          title: 'OPERATIVIDAD MAQUINARIA',\r\n          roles: ['admin'],\r\n          // permissions: []\r\n      },\r\n      component: OperMachinesCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        data: {\r\n            title: 'OPERATIVIDAD MAQUINARIA',\r\n            roles: ['admin'],\r\n            // permissions: []\r\n        },\r\n        component: OperMachinesEditComponent\r\n    },\r\n];\r\n// end generated section\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class OperMachinesPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {OperMachinesPageRoutingModule} from './oper-machines-routing.module';\r\n\r\nimport { OperMachinesPage} from './oper-machines.page';\r\nimport { OperMachinesListComponent} from \"./oper-machines-list/oper-machines-list.component\";\r\nimport { OperMachinesCreateComponent} from \"./oper-machines-create/oper-machines-create.component\";\r\nimport { OperMachinesDuplicateComponent} from \"./oper-machines-duplicate/oper-machines-duplicate.component\";\r\nimport { OperMachinesEditComponent} from \"./oper-machines-edit/oper-machines-edit.component\";\r\nimport { OperMachinesFormComponent} from \"./oper-machines-form/oper-machines-form.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n    // imports generated section\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        OperMachinesPageRoutingModule\r\n    // end imports generated section\r\n    ],\r\n    declarations: [\r\n    // declarations generated section\r\n        OperMachinesPage,\r\n        OperMachinesListComponent,\r\n        OperMachinesCreateComponent,\r\n        OperMachinesDuplicateComponent,\r\n        OperMachinesEditComponent,\r\n        OperMachinesFormComponent,\r\n    // end declarations generated section\r\n    ]\r\n})\r\nexport class OperMachinesPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-oper-machines',\r\n  templateUrl: './oper-machines.page.html',\r\n  styleUrls: ['./oper-machines.page.scss'],\r\n})\r\nexport class OperMachinesPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport {OperMachine, OperMachineLists} from \"./oper-machine\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OperMachinesService {\r\n\r\n    public operMachinesUrl = 'oper-machines';\r\n    public operMachinesFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public operMachines: OperMachine[] = [];\r\n    public operMachine: OperMachine = <OperMachine>{};\r\n    public operMachineLists: OperMachineLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n\r\n// generated section\r\n    public getOperMachines(page: any = this.page, perPage: any = this.perPage) {\r\n\r\n        this.api.get(\r\n            this.operMachinesUrl +\r\n            '?page=' + page +\r\n            '&perPage=' + perPage +\r\n            '&q[name:cont]=' + this.searchValue +\r\n            '&q[inventory_code:cont]=' + this.searchValue\r\n        )\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.operMachines = res.data;\r\n                    this.operMachineLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editOperMachine(id: any) {\r\n        this.api.get(this.operMachinesUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.operMachine = res.data.model;\r\n                    this.operMachineLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateOperMachine() {\r\n        this.api.put(this.operMachinesUrl + '/' + this.operMachine.id, {\r\n            model: this.operMachine,\r\n            pivots: {}\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getOperMachines(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createOperMachine() {\r\n        this.api.get(this.operMachinesUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.operMachine = <OperMachine>{};\r\n                    this.operMachineLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeOperMachine() {\r\n        this.api.post(this.operMachinesUrl, {\r\n            model: this.operMachine,\r\n            pivots: {}\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getOperMachines(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteOperMachine(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.operMachinesUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getOperMachines(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n// end generated section\r\n\r\n}\r\n"]}