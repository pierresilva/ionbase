{"version":3,"sources":["./src/app/comp-contacts/comp-contacts-create/comp-contacts-create.component.html","./src/app/comp-contacts/comp-contacts-duplicate/comp-contacts-duplicate.component.html","./src/app/comp-contacts/comp-contacts-edit/comp-contacts-edit.component.html","./src/app/comp-contacts/comp-contacts-form/comp-contacts-form.component.html","./src/app/comp-contacts/comp-contacts-list/comp-contacts-list.component.html","./src/app/comp-contacts/comp-contacts.page.html","./src/app/comp-contacts/comp-contacts-create/comp-contacts-create.component.scss","./src/app/comp-contacts/comp-contacts-create/comp-contacts-create.component.ts","./src/app/comp-contacts/comp-contacts-duplicate/comp-contacts-duplicate.component.scss","./src/app/comp-contacts/comp-contacts-duplicate/comp-contacts-duplicate.component.ts","./src/app/comp-contacts/comp-contacts-edit/comp-contacts-edit.component.scss","./src/app/comp-contacts/comp-contacts-edit/comp-contacts-edit.component.ts","./src/app/comp-contacts/comp-contacts-form/comp-contacts-form.component.scss","./src/app/comp-contacts/comp-contacts-form/comp-contacts-form.component.ts","./src/app/comp-contacts/comp-contacts-list/comp-contacts-list.component.scss","./src/app/comp-contacts/comp-contacts-list/comp-contacts-list.component.ts","./src/app/comp-contacts/comp-contacts-routing.module.ts","./src/app/comp-contacts/comp-contacts.module.ts","./src/app/comp-contacts/comp-contacts.page.scss","./src/app/comp-contacts/comp-contacts.page.ts","./src/app/comp-contacts/comp-contacts.service.ts"],"names":[],"mappings":"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","file":"comp-contacts-comp-contacts-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/comp-contacts'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"compContactsService.storeCompContact()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!compContactsService.compContactsFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'EMPRESAS CONTACTOS' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-comp-contacts-form #compContactForm [model]=\\\"compContactsService.compContact\\\"></app-comp-contacts-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  CompContacts duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/comp-contacts'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"compContactsService.updateCompContact()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!compContactsService.compContactsFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'EMPRESAS CONTACTOS' | titlecase}}: {{ compContactsService.compContact?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-comp-contacts-form #compContactForm [model]=\\\"compContactsService.compContact\\\"></app-comp-contacts-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #compContactsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- company_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'EMPRESA' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"company_id\\\"\\r\\n                          id=\\\"company_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.company\\\"\\r\\n                          [items]=\\\"compContactsService.compContactLists.Company\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setCompanyId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.company_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"compContactsForm.form.controls['company_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end company_id -->\\r\\n\\r\\n\\r\\n    <!-- syst_position_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'CARGO' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"syst_position_id\\\"\\r\\n                          id=\\\"syst_position_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.syst_position\\\"\\r\\n                          [items]=\\\"compContactsService.compContactLists.SystPosition\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CARGOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('CARGOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setSystPositionId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_position_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"compContactsForm.form.controls['syst_position_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end syst_position_id -->\\r\\n\\r\\n\\r\\n            <!-- name -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"name\\\"\\r\\n                            id=\\\"name-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"compContactsForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end name -->\\r\\n\\r\\n\\r\\n            <!-- phone -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TELÉFONO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.phone\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"phone\\\"\\r\\n                            id=\\\"phone-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.phone\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"compContactsForm.form.controls['phone']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end phone -->\\r\\n\\r\\n\\r\\n            <!-- email -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CORREO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.email\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"email\\\"\\r\\n                            id=\\\"email-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"compContactsForm.form.controls['email']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end email -->\\r\\n\\r\\n\\r\\n            <!-- main -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'PRINCIPAL' | titlecase }}</ion-label>\\r\\n                <ion-toggle name=\\\"main\\\"\\r\\n                            id=\\\"main-field\\\"\\r\\n                            slot=\\\"end\\\"\\r\\n                            [(ngModel)]=\\\"model.main\\\"></ion-toggle>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.main\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"compContactsForm.form.controls['main']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end main -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'EMPRESAS CONTACTOS' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"comp-contacts/create\\\"\\r\\n                 primaryText=\\\"Crear {{'EMPRESAS CONTACTOS' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                       [placeholder]=\\\"'Buscar ' + ('EMPRESAS CONTACTOS' | lowercase )\\\"\\r\\n                       (ionCancel)=\\\"this.compContactsService.searchValue = ''; compContactsService.getCompContacts()\\\"\\r\\n                       (keyup.enter)=\\\"compContactsService.getCompContacts()\\\"\\r\\n                       [(ngModel)]=\\\"compContactsService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && compContactsService.compContacts?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let compContact of compContactsService.compContacts; let index = index\\\">\\r\\n            <ion-list>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ compContact?.name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ compContact?.phone }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CORREO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ compContact?.email }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PRINCIPAL' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ compContact?.main  ? 'Si' : 'No' }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/companies/{{ compContact?.company?.id }}/edit\\\">{{ compContact?.company?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CARGOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/syst-positions/{{ compContact?.syst_position?.id }}/edit\\\">{{ compContact?.syst_position?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/comp-contacts/' + compContact?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"compContactsService.deleteCompContact(compContact?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !compContactsService.compContacts?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'EMPRESAS CONTACTOS' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/comp-contacts/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\r\\n                Crear {{'EMPRESAS CONTACTOS' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"compContactsService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"compContactsService.getCompContacts(compContactsService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"compContactsService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{compContactsService.meta.current_page}}\\r\\n                /{{compContactsService.meta.last_page}} {{compContactsService.meta.from}}-{{compContactsService.meta.to}}\\r\\n                /{{compContactsService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"compContactsService.getCompContacts(compContactsService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"compContactsService.meta.current_page == compContactsService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"EMPRESAS CONTACTOS\\\"></app-main-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/comp-contacts/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'EMPRESAS CONTACTOS'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/comp-contacts/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'EMPRESAS CONTACTOS' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtY29udGFjdHMvY29tcC1jb250YWN0cy1jcmVhdGUvY29tcC1jb250YWN0cy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {CompContactsService} from \"../comp-contacts.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {CompContact} from \"../comp-contact\";\r\nimport {CompContactsFormComponent} from \"../comp-contacts-form/comp-contacts-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-comp-contacts-create',\r\n    templateUrl: './comp-contacts-create.component.html',\r\n    styleUrls: ['./comp-contacts-create.component.scss']\r\n})\r\nexport class CompContactsCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('compContactForm') compContactForm: CompContactsFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public compContactsService: CompContactsService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.compContactForm.compContactsForm.valueChanges.subscribe((data) => {\r\n            this.compContactsService.compContactsFormValid.next(this.compContactForm.compContactsForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.compContactsService.createCompContact();\r\n        this.compContactsService.compContact = <CompContact>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtY29udGFjdHMvY29tcC1jb250YWN0cy1kdXBsaWNhdGUvY29tcC1jb250YWN0cy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-comp-contacts-duplicate',\r\n  templateUrl: './comp-contacts-duplicate.component.html',\r\n  styleUrls: ['./comp-contacts-duplicate.component.scss'],\r\n})\r\nexport class CompContactsDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtY29udGFjdHMvY29tcC1jb250YWN0cy1lZGl0L2NvbXAtY29udGFjdHMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {CompContactsService} from \"../comp-contacts.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {CompContact} from \"../comp-contact\";\r\nimport {CompContactsFormComponent} from \"../comp-contacts-form/comp-contacts-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-comp-contacts-edit',\r\n  templateUrl: './comp-contacts-edit.component.html',\r\n  styleUrls: ['./comp-contacts-edit.component.scss']\r\n})\r\nexport class CompContactsEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('compContactForm') compContactForm: CompContactsFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: CompContact = null;\r\n\r\n  constructor(\r\n      public compContactsService: CompContactsService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.compContactsService.editCompContact(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.compContactForm.compContactsForm.valueChanges.subscribe((data) => {\r\n          this.compContactsService.compContactsFormValid.next(this.compContactForm.compContactsForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtY29udGFjdHMvY29tcC1jb250YWN0cy1mb3JtL2NvbXAtY29udGFjdHMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {CompContact} from \"../comp-contact\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {CompContactsService} from \"../comp-contacts.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-comp-contacts-form',\r\n    templateUrl: './comp-contacts-form.component.html',\r\n    styleUrls: ['./comp-contacts-form.component.scss']\r\n})\r\nexport class CompContactsFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: CompContact = <CompContact>{};\r\n\r\n    @ViewChild('compContactsForm') compContactsForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'company_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESA') + ' es obligatorio.'},\r\n        ],\r\n        'syst_position_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CARGO') + ' es obligatorio.'},\r\n        ],\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'phone': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO') + ' es obligatorio.'},\r\n        ],\r\n        'email': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CORREO') + ' es obligatorio.'},\r\n        ],\r\n        'main': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PRINCIPAL') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public compContactsService: CompContactsService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setCompanyId\r\n\r\n    setCompanyId(event: any) {\r\n        this.compContactsService.compContact.company_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setCompanyId\r\n\r\n\r\n    // set setSystPositionId\r\n\r\n    setSystPositionId(event: any) {\r\n        this.compContactsService.compContact.syst_position_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setSystPositionId\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtY29udGFjdHMvY29tcC1jb250YWN0cy1saXN0L2NvbXAtY29udGFjdHMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { CompContactsService} from \"../comp-contacts.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-comp-contacts-list',\r\n    templateUrl: './comp-contacts-list.component.html',\r\n    styleUrls: ['./comp-contacts-list.component.scss'],\r\n})\r\nexport class CompContactsListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public compContactsService: CompContactsService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.compContactsService.getCompContacts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CompContactsPage } from './comp-contacts.page';\r\nimport {CompContactsEditComponent} from \"./comp-contacts-edit/comp-contacts-edit.component\";\r\nimport {CompContactsCreateComponent} from \"./comp-contacts-create/comp-contacts-create.component\";\r\nimport {CompContactsListComponent} from \"./comp-contacts-list/comp-contacts-list.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CompContactsPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        component: CompContactsListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      component: CompContactsCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: CompContactsEditComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class CompContactsPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {CompContactsPageRoutingModule} from './comp-contacts-routing.module';\r\n\r\nimport { CompContactsPage} from './comp-contacts.page';\r\nimport { CompContactsListComponent} from \"./comp-contacts-list/comp-contacts-list.component\";\r\nimport { CompContactsCreateComponent} from \"./comp-contacts-create/comp-contacts-create.component\";\r\nimport { CompContactsDuplicateComponent} from \"./comp-contacts-duplicate/comp-contacts-duplicate.component\";\r\nimport { CompContactsEditComponent} from \"./comp-contacts-edit/comp-contacts-edit.component\";\r\nimport { CompContactsFormComponent} from \"./comp-contacts-form/comp-contacts-form.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        CompContactsPageRoutingModule\r\n    ],\r\n    declarations: [\r\n        CompContactsPage,\r\n        CompContactsListComponent,\r\n        CompContactsCreateComponent,\r\n        CompContactsDuplicateComponent,\r\n        CompContactsEditComponent,\r\n        CompContactsFormComponent,\r\n    ]\r\n})\r\nexport class CompContactsPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtY29udGFjdHMvY29tcC1jb250YWN0cy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-comp-contacts',\r\n  templateUrl: './comp-contacts.page.html',\r\n  styleUrls: ['./comp-contacts.page.scss'],\r\n})\r\nexport class CompContactsPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport { CompContact, CompContactLists } from \"./comp-contact\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CompContactsService {\r\n\r\n    public compContactsUrl = 'comp-contacts';\r\n    public compContactsFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public compContacts: CompContact[] = [];\r\n    public compContact: CompContact = <CompContact>{};\r\n    public compContactLists: CompContactLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n\r\n    public getCompContacts(page: any = this.page, perPage: any = this.perPage) {\r\n\r\n        this.api.get(this.compContactsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.compContacts = res.data;\r\n                    this.compContactLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editCompContact(id: any) {\r\n        this.api.get(this.compContactsUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.compContact = res.data.model;\r\n                    this.compContactLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateCompContact() {\r\n        this.api.put(this.compContactsUrl + '/' + this.compContact.id, {\r\n            model: this.compContact,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getCompContacts(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createCompContact() {\r\n        this.api.get(this.compContactsUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.compContact = <CompContact>{};\r\n                    this.compContactLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeCompContact() {\r\n        this.api.post(this.compContactsUrl, {\r\n            model: this.compContact,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getCompContacts(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteCompContact(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.compContactsUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getCompContacts(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}