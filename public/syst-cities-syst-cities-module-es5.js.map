{"version":3,"sources":["webpack:///src/app/syst-cities/syst-cities-create/syst-cities-create.component.html","webpack:///src/app/syst-cities/syst-cities-duplicate/syst-cities-duplicate.component.html","webpack:///src/app/syst-cities/syst-cities-edit/syst-cities-edit.component.html","webpack:///src/app/syst-cities/syst-cities-form/syst-cities-form.component.html","webpack:///src/app/syst-cities/syst-cities-list/syst-cities-list.component.html","webpack:///src/app/syst-cities/syst-cities.page.html","webpack:///src/app/syst-cities/syst-cities-create/syst-cities-create.component.scss","webpack:///src/app/syst-cities/syst-cities-create/syst-cities-create.component.ts","webpack:///src/app/syst-cities/syst-cities-duplicate/syst-cities-duplicate.component.scss","webpack:///src/app/syst-cities/syst-cities-duplicate/syst-cities-duplicate.component.ts","webpack:///src/app/syst-cities/syst-cities-edit/syst-cities-edit.component.scss","webpack:///src/app/syst-cities/syst-cities-edit/syst-cities-edit.component.ts","webpack:///src/app/syst-cities/syst-cities-form/syst-cities-form.component.scss","webpack:///src/app/syst-cities/syst-cities-form/syst-cities-form.component.ts","webpack:///src/app/syst-cities/syst-cities-list/syst-cities-list.component.scss","webpack:///src/app/syst-cities/syst-cities-list/syst-cities-list.component.ts","webpack:///src/app/syst-cities/syst-cities-routing.module.ts","webpack:///src/app/syst-cities/syst-cities.module.ts","webpack:///src/app/syst-cities/syst-cities.page.scss","webpack:///src/app/syst-cities/syst-cities.page.ts","webpack:///src/app/syst-cities/syst-cities.service.ts"],"names":["SystCitiesCreateComponent","systCitiesService","route","platform","splitPanel","id","formValid","clearPosts","show","next","systCityForm","systCitiesForm","valueChanges","subscribe","data","systCitiesFormValid","valid","console","log","createSystCity","systCity","selector","template","SystCitiesDuplicateComponent","SystCitiesEditComponent","model","snapshot","paramMap","get","editSystCity","SystCitiesFormComponent","toTitlecase","validationMessages","type","message","transform","event","userProfileIds","value","length","i","push","user_profile_ids","syst_region_id","compAddressIds","comp_address_ids","SystCitiesListComponent","api","loading","getSystCities","content","scrollToTop","routes","path","component","SystCitiesPageRoutingModule","imports","forChild","exports","SystCitiesPageModule","declarations","SystCitiesPage","SystCitiesService","alert","toast","router","navigation","systCitiesUrl","systCities","systCityLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"syst-cities-syst-cities-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/syst-cities'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"systCitiesService.storeSystCity()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!systCitiesService.systCitiesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'CIUDADES' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-syst-cities-form #systCityForm [model]=\\\"systCitiesService.systCity\\\"></app-syst-cities-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  SystCities duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/syst-cities'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"systCitiesService.updateSystCity()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!systCitiesService.systCitiesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'CIUDADES' | titlecase}}: {{ systCitiesService.systCity?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-syst-cities-form #systCityForm [model]=\\\"systCitiesService.systCity\\\"></app-syst-cities-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #systCitiesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- user_profile_ids -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'PERFILES DE USUARIOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"user_profile_ids\\\"\\r\\n                          id=\\\"user_profile_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.user_profiles\\\"\\r\\n                          [items]=\\\"systCitiesService.systCityLists.UserProfile\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('PERFILES DE USUARIOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('PERFILES DE USUARIOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setUserProfileIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.user_profile_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systCitiesForm.form.controls['user_profile_ids']?.hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end user_profile_ids -->\\r\\n\\r\\n\\r\\n    <!-- syst_region_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'DEPARTAMENTO' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"syst_region_id\\\"\\r\\n                          id=\\\"syst_region_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.syst_region\\\"\\r\\n                          [items]=\\\"systCitiesService.systCityLists.SystRegion\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('DEPARTAMENTOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('DEPARTAMENTOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setSystRegionId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_region_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systCitiesForm.form.controls['syst_region_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end syst_region_id -->\\r\\n\\r\\n\\r\\n    <!-- comp_address_ids -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'EMPRESAS DIRECCIONES' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"comp_address_ids\\\"\\r\\n                          id=\\\"comp_address_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.comp_addresses\\\"\\r\\n                          [items]=\\\"systCitiesService.systCityLists.CompAddress\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS DIRECCIONES' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS DIRECCIONES' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setCompAddressIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_address_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systCitiesForm.form.controls['comp_address_ids']?.hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end comp_address_ids -->\\r\\n\\r\\n\\r\\n            <!-- name -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"name\\\"\\r\\n                            id=\\\"name-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"systCitiesForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end name -->\\r\\n\\r\\n\\r\\n            <!-- code -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"code\\\"\\r\\n                            id=\\\"code-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"systCitiesForm.form.controls['code']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end code -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'CIUDADES' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"syst-cities/create\\\"\\r\\n                 primaryText=\\\"Crear {{'CIUDADES' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                       [placeholder]=\\\"'Buscar ' + ('CIUDADES' | lowercase )\\\"\\r\\n                       (ionCancel)=\\\"this.systCitiesService.searchValue = ''; systCitiesService.getSystCities()\\\"\\r\\n                       (keyup.enter)=\\\"systCitiesService.getSystCities()\\\"\\r\\n                       [(ngModel)]=\\\"systCitiesService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && systCitiesService.systCities?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let systCity of systCitiesService.systCities; let index = index\\\">\\r\\n            <ion-list>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ systCity?.name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ systCity?.code }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PERFILES DE USUARIOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"systCity?.user_profiles?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let userProfile of systCity?.user_profiles; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/user-profiles/{{ userProfile?.id }}/edit\\\">{{ userProfile?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'DEPARTAMENTOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/syst-regions/{{ systCity?.syst_region?.id }}/edit\\\">{{ systCity?.syst_region?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS DIRECCIONES' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"systCity?.comp_addresses?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let compAddress of systCity?.comp_addresses; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/comp-addresses/{{ compAddress?.id }}/edit\\\">{{ compAddress?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/syst-cities/' + systCity?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"systCitiesService.deleteSystCity(systCity?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !systCitiesService.systCities?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'CIUDADES' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/syst-cities/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\r\\n                Crear {{'CIUDADES' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"systCitiesService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"systCitiesService.getSystCities(systCitiesService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"systCitiesService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{systCitiesService.meta.current_page}}\\r\\n                /{{systCitiesService.meta.last_page}} {{systCitiesService.meta.from}}-{{systCitiesService.meta.to}}\\r\\n                /{{systCitiesService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"systCitiesService.getSystCities(systCitiesService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"systCitiesService.meta.current_page == systCitiesService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"CIUDADES\\\"></app-main-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/syst-cities/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'CIUDADES'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/syst-cities/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'CIUDADES' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY2l0aWVzL3N5c3QtY2l0aWVzLWNyZWF0ZS9zeXN0LWNpdGllcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {SystCitiesService} from \"../syst-cities.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {SystCity} from \"../syst-city\";\r\nimport {SystCitiesFormComponent} from \"../syst-cities-form/syst-cities-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-syst-cities-create',\r\n    templateUrl: './syst-cities-create.component.html',\r\n    styleUrls: ['./syst-cities-create.component.scss']\r\n})\r\nexport class SystCitiesCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('systCityForm') systCityForm: SystCitiesFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public systCitiesService: SystCitiesService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.systCityForm.systCitiesForm.valueChanges.subscribe((data) => {\r\n            this.systCitiesService.systCitiesFormValid.next(this.systCityForm.systCitiesForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.systCitiesService.createSystCity();\r\n        this.systCitiesService.systCity = <SystCity>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY2l0aWVzL3N5c3QtY2l0aWVzLWR1cGxpY2F0ZS9zeXN0LWNpdGllcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-syst-cities-duplicate',\r\n  templateUrl: './syst-cities-duplicate.component.html',\r\n  styleUrls: ['./syst-cities-duplicate.component.scss'],\r\n})\r\nexport class SystCitiesDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY2l0aWVzL3N5c3QtY2l0aWVzLWVkaXQvc3lzdC1jaXRpZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {SystCitiesService} from \"../syst-cities.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {SystCity} from \"../syst-city\";\r\nimport {SystCitiesFormComponent} from \"../syst-cities-form/syst-cities-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-syst-cities-edit',\r\n  templateUrl: './syst-cities-edit.component.html',\r\n  styleUrls: ['./syst-cities-edit.component.scss']\r\n})\r\nexport class SystCitiesEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('systCityForm') systCityForm: SystCitiesFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: SystCity = null;\r\n\r\n  constructor(\r\n      public systCitiesService: SystCitiesService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.systCitiesService.editSystCity(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.systCityForm.systCitiesForm.valueChanges.subscribe((data) => {\r\n          this.systCitiesService.systCitiesFormValid.next(this.systCityForm.systCitiesForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY2l0aWVzL3N5c3QtY2l0aWVzLWZvcm0vc3lzdC1jaXRpZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {SystCity} from \"../syst-city\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {SystCitiesService} from \"../syst-cities.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-syst-cities-form',\r\n    templateUrl: './syst-cities-form.component.html',\r\n    styleUrls: ['./syst-cities-form.component.scss']\r\n})\r\nexport class SystCitiesFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: SystCity = <SystCity>{};\r\n\r\n    @ViewChild('systCitiesForm') systCitiesForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'code': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\r\n        ],\r\n        'syst_region_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DEPARTAMENTO') + ' es obligatorio.'},\r\n        ],\r\n        'user_profile_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERFILES DE USUARIOS') + ' es obligatorio.'},\r\n        ],\r\n        'comp_address_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESAS DIRECCIONES') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public systCitiesService: SystCitiesService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setUserProfileIds\r\n    setUserProfileIds(event: any) {\r\n        let userProfileIds = null;\r\n        if (event.value.length) {\r\n            userProfileIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                userProfileIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.systCitiesService.systCity.user_profile_ids = userProfileIds;\r\n    }\r\n    // end setUserProfileIds\r\n\r\n\r\n    // set setSystRegionId\r\n\r\n    setSystRegionId(event: any) {\r\n        this.systCitiesService.systCity.syst_region_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setSystRegionId\r\n\r\n\r\n    // set setCompAddressIds\r\n    setCompAddressIds(event: any) {\r\n        let compAddressIds = null;\r\n        if (event.value.length) {\r\n            compAddressIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                compAddressIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.systCitiesService.systCity.comp_address_ids = compAddressIds;\r\n    }\r\n    // end setCompAddressIds\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY2l0aWVzL3N5c3QtY2l0aWVzLWxpc3Qvc3lzdC1jaXRpZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { SystCitiesService} from \"../syst-cities.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-syst-cities-list',\r\n    templateUrl: './syst-cities-list.component.html',\r\n    styleUrls: ['./syst-cities-list.component.scss'],\r\n})\r\nexport class SystCitiesListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public systCitiesService: SystCitiesService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.systCitiesService.getSystCities();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SystCitiesPage } from './syst-cities.page';\r\nimport {SystCitiesEditComponent} from \"./syst-cities-edit/syst-cities-edit.component\";\r\nimport {SystCitiesCreateComponent} from \"./syst-cities-create/syst-cities-create.component\";\r\nimport {SystCitiesListComponent} from \"./syst-cities-list/syst-cities-list.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: SystCitiesPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        component: SystCitiesListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      component: SystCitiesCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: SystCitiesEditComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class SystCitiesPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {SystCitiesPageRoutingModule} from './syst-cities-routing.module';\r\n\r\nimport { SystCitiesPage} from './syst-cities.page';\r\nimport { SystCitiesListComponent} from \"./syst-cities-list/syst-cities-list.component\";\r\nimport { SystCitiesCreateComponent} from \"./syst-cities-create/syst-cities-create.component\";\r\nimport { SystCitiesDuplicateComponent} from \"./syst-cities-duplicate/syst-cities-duplicate.component\";\r\nimport { SystCitiesEditComponent} from \"./syst-cities-edit/syst-cities-edit.component\";\r\nimport { SystCitiesFormComponent} from \"./syst-cities-form/syst-cities-form.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        SystCitiesPageRoutingModule\r\n    ],\r\n    declarations: [\r\n        SystCitiesPage,\r\n        SystCitiesListComponent,\r\n        SystCitiesCreateComponent,\r\n        SystCitiesDuplicateComponent,\r\n        SystCitiesEditComponent,\r\n        SystCitiesFormComponent,\r\n    ]\r\n})\r\nexport class SystCitiesPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtY2l0aWVzL3N5c3QtY2l0aWVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-syst-cities',\r\n  templateUrl: './syst-cities.page.html',\r\n  styleUrls: ['./syst-cities.page.scss'],\r\n})\r\nexport class SystCitiesPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport { SystCity, SystCityLists } from \"./syst-city\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SystCitiesService {\r\n\r\n    public systCitiesUrl = 'syst-cities';\r\n    public systCitiesFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public systCities: SystCity[] = [];\r\n    public systCity: SystCity = <SystCity>{};\r\n    public systCityLists: SystCityLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n\r\n    public getSystCities(page: any = this.page, perPage: any = this.perPage) {\r\n\r\n        this.api.get(this.systCitiesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.systCities = res.data;\r\n                    this.systCityLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editSystCity(id: any) {\r\n        this.api.get(this.systCitiesUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.systCity = res.data.model;\r\n                    this.systCityLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateSystCity() {\r\n        this.api.put(this.systCitiesUrl + '/' + this.systCity.id, {\r\n            model: this.systCity,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getSystCities(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createSystCity() {\r\n        this.api.get(this.systCitiesUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.systCity = <SystCity>{};\r\n                    this.systCityLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeSystCity() {\r\n        this.api.post(this.systCitiesUrl, {\r\n            model: this.systCity,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getSystCities(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteSystCity(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.systCitiesUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getSystCities(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n}\r\n"]}