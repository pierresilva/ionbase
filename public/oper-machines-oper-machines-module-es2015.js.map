{"version":3,"sources":["./src/app/oper-machines/oper-machines-create/oper-machines-create.component.html","./src/app/oper-machines/oper-machines-duplicate/oper-machines-duplicate.component.html","./src/app/oper-machines/oper-machines-edit/oper-machines-edit.component.html","./src/app/oper-machines/oper-machines-form/oper-machines-form.component.html","./src/app/oper-machines/oper-machines-list/oper-machines-list.component.html","./src/app/oper-machines/oper-machines.page.html","./src/app/oper-machines/oper-machines-create/oper-machines-create.component.scss","./src/app/oper-machines/oper-machines-create/oper-machines-create.component.ts","./src/app/oper-machines/oper-machines-duplicate/oper-machines-duplicate.component.scss","./src/app/oper-machines/oper-machines-duplicate/oper-machines-duplicate.component.ts","./src/app/oper-machines/oper-machines-edit/oper-machines-edit.component.scss","./src/app/oper-machines/oper-machines-edit/oper-machines-edit.component.ts","./src/app/oper-machines/oper-machines-form/oper-machines-form.component.scss","./src/app/oper-machines/oper-machines-form/oper-machines-form.component.ts","./src/app/oper-machines/oper-machines-list/oper-machines-list.component.scss","./src/app/oper-machines/oper-machines-list/oper-machines-list.component.ts","./src/app/oper-machines/oper-machines-routing.module.ts","./src/app/oper-machines/oper-machines.module.ts","./src/app/oper-machines/oper-machines.page.scss","./src/app/oper-machines/oper-machines.page.ts","./src/app/oper-machines/oper-machines.service.ts"],"names":[],"mappings":"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","file":"oper-machines-oper-machines-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/oper-machines'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"operMachinesService.storeOperMachine()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!operMachinesService.operMachinesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'OPERATIVIDAD MAQUINARIA' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-oper-machines-form #operMachineForm [model]=\\\"operMachinesService.operMachine\\\"></app-oper-machines-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  OperMachines duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/oper-machines'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"operMachinesService.updateOperMachine()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!operMachinesService.operMachinesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'OPERATIVIDAD MAQUINARIA' | titlecase}}: {{ operMachinesService.operMachine?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-oper-machines-form #operMachineForm [model]=\\\"operMachinesService.operMachine\\\"></app-oper-machines-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #operMachinesForm=\\\"ngForm\\\"\\r\\n      novalidate\\r\\n      autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- hous_unit_area_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'AREA' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"hous_unit_area_id\\\"\\r\\n                          id=\\\"hous_unit_area_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.hous_unit_area\\\"\\r\\n                          [items]=\\\"operMachinesService.operMachineLists.HousUnitArea\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('UNIDADES HABITACIONALES AREAS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('UNIDADES HABITACIONALES AREAS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setHousUnitAreaId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.hous_unit_area_id\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['hous_unit_area_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end hous_unit_area_id -->\\r\\n\\r\\n\\r\\n    <!-- oper_contractor_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'CONTRATISTA' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_contractor_id\\\"\\r\\n                          id=\\\"oper_contractor_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_contractor\\\"\\r\\n                          [items]=\\\"operMachinesService.operMachineLists.OperContractor\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CONTRATISTAS OPERATIVOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('CONTRATISTAS OPERATIVOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperContractorId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_contractor_id\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['oper_contractor_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end oper_contractor_id -->\\r\\n\\r\\n\\r\\n    <!-- oper_preventive_maintenance_ids -->\\r\\n    <!--<ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'MTTO PREVENTIVOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_preventive_maintenance_ids\\\"\\r\\n                          id=\\\"oper_preventive_maintenance_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_preventive_maintenances\\\"\\r\\n                          [items]=\\\"operMachinesService.operMachineLists.OperPreventiveMaintenance\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('OPERATIVIDAD MTTO PREVENTIVOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('OPERATIVIDAD MTTO PREVENTIVOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperPreventiveMaintenanceIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_preventive_maintenance_ids\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['oper_preventive_maintenance_ids']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>-->\\r\\n    <!-- end oper_preventive_maintenance_ids -->\\r\\n\\r\\n\\r\\n    <!-- oper_replacement_ids -->\\r\\n    <!--<ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'OPERATIVIDAD REPUESTOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_replacement_ids\\\"\\r\\n                          id=\\\"oper_replacement_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_replacements\\\"\\r\\n                          [items]=\\\"operMachinesService.operMachineLists.OperReplacement\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('OPERATIVIDAD REPUESTOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('OPERATIVIDAD REPUESTOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperReplacementIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_replacement_ids\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['oper_replacement_ids']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>-->\\r\\n    <!-- end oper_replacement_ids -->\\r\\n\\r\\n\\r\\n    <!-- name -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                   type=\\\"text\\\"\\r\\n                   name=\\\"name\\\"\\r\\n                   id=\\\"name-field\\\"\\r\\n                   [required]=\\\"true\\\"\\r\\n                   placeholder=\\\"\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end name -->\\r\\n\\r\\n\\r\\n    <!-- contract_expiration_date -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'FECHA VENCIMIENTO CONTRATO' | titlecase }}</ion-label>\\r\\n        <ion-datetime name=\\\"contract_expiration_date\\\"\\r\\n                      id=\\\"contract_expiration_date-field\\\"\\r\\n                      [doneText]=\\\"'Seleccionar'\\\"\\r\\n                      [cancelText]=\\\"'Cancelar'\\\"\\r\\n                      [(ngModel)]=\\\"model.contract_expiration_date\\\"\\r\\n                      displayFormat=\\\"DD/MM/YYYY\\\"></ion-datetime>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.contract_expiration_date\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['contract_expiration_date']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end contract_expiration_date -->\\r\\n\\r\\n\\r\\n    <!-- contract_monthly_price -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'VALOR MENSUAL' | titlecase }}</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"model.contract_monthly_price\\\"\\r\\n                   type=\\\"number\\\"\\r\\n                   name=\\\"contract_monthly_price\\\"\\r\\n                   id=\\\"contract_monthly_price-field\\\"\\r\\n                   placeholder=\\\"\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.contract_monthly_price\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['contract_monthly_price']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end contract_monthly_price -->\\r\\n\\r\\n\\r\\n    <!-- monthly_periodicity -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'PERIODICIDAD MENSUAL' | titlecase }}</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"model.monthly_periodicity\\\"\\r\\n                   type=\\\"number\\\"\\r\\n                   name=\\\"monthly_periodicity\\\"\\r\\n                   id=\\\"monthly_periodicity-field\\\"\\r\\n                   placeholder=\\\"\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.monthly_periodicity\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['monthly_periodicity']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end monthly_periodicity -->\\r\\n\\r\\n\\r\\n    <!-- inventory_code -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'CÓDIGO INVENTARIO' | titlecase }}</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"model.inventory_code\\\"\\r\\n                   type=\\\"text\\\"\\r\\n                   name=\\\"inventory_code\\\"\\r\\n                   id=\\\"inventory_code-field\\\"\\r\\n                   placeholder=\\\"\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.inventory_code\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"operMachinesForm.form.controls['inventory_code']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end monthly_periodicity -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'OPERATIVIDAD MAQUINARIA' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"oper-machines/create\\\"\\r\\n                 primaryText=\\\"Crear {{'OPERATIVIDAD MAQUINARIA' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                   [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                   [placeholder]=\\\"'Buscar ' + ('OPERATIVIDAD MAQUINARIA' | lowercase )\\\"\\r\\n                   (ionCancel)=\\\"this.operMachinesService.searchValue = ''; operMachinesService.getOperMachines()\\\"\\r\\n                   (keyup.enter)=\\\"operMachinesService.getOperMachines()\\\"\\r\\n                   [(ngModel)]=\\\"operMachinesService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operMachinesService.operMachines?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let operMachine of operMachinesService.operMachines; let index = index\\\">\\r\\n            <ion-list>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'NOMBRE' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">{{ operMachine?.name }}</div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'FECHA VENCIMIENTO CONTRATO' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">{{ operMachine?.contract_expiration_date | dateFormat:'DD/MM/YYYY' }}</div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'VALOR MENSUAL' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">{{ operMachine?.contract_monthly_price }}</div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'PERIODICIDAD MENSUAL' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">{{ operMachine?.monthly_periodicity }}</div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>Código Inventario</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">{{ operMachine?.inventory_code }}</div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'UNIDADES HABITACIONALES AREAS' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">\\r\\n                        <a routerLink=\\\"/hous-unit-areas/{{ operMachine?.hous_unit_area?.id }}/edit\\\">{{ operMachine?.hous_unit_area?.name }}</a>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'CONTRATISTAS OPERATIVOS' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">\\r\\n                        <a routerLink=\\\"/oper-contractors/{{ operMachine?.oper_contractor?.id }}/edit\\\">{{ operMachine?.oper_contractor?.name }}</a>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'OPERATIVIDAD MTTO PREVENTIVOS' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">\\r\\n                        <ng-container *ngIf=\\\"operMachine?.oper_preventive_maintenances?.length\\\">\\r\\n                            <ng-container *ngFor=\\\"let operPreventiveMaintenance of operMachine?.oper_preventive_maintenances; let last = last\\\">\\r\\n                                <a routerLink=\\\"/oper-preventive-maintenances/{{ operPreventiveMaintenance?.id }}/edit\\\">{{ operPreventiveMaintenance?.name }}</a>\\r\\n                                <span *ngIf=\\\"!last\\\">, </span>\\r\\n                            </ng-container>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"item-transparent\\\">\\r\\n                    <ion-label position=\\\"fixed\\\">\\r\\n                        <b>{{ 'OPERATIVIDAD REPUESTOS' | titlecase }}</b>\\r\\n                    </ion-label>\\r\\n                    <div class=\\\"wrap-text\\\">\\r\\n                        <ng-container *ngIf=\\\"operMachine?.oper_replacements?.length\\\">\\r\\n                            <ng-container *ngFor=\\\"let operReplacement of operMachine?.oper_replacements; let last = last\\\">\\r\\n                                <a routerLink=\\\"/oper-replacements/{{ operReplacement?.id }}/edit\\\">{{ operReplacement?.name }}</a>\\r\\n                                <span *ngIf=\\\"!last\\\">, </span>\\r\\n                            </ng-container>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\"\\r\\n                                    size=\\\"small\\\"\\r\\n                                    fill=\\\"clear\\\"\\r\\n                                    [routerLink]=\\\"'/oper-machines/' + operMachine?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\"\\r\\n                                    size=\\\"small\\\"\\r\\n                                    fill=\\\"clear\\\"\\r\\n                                    (click)=\\\"operMachinesService.deleteOperMachine(operMachine?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operMachinesService.operMachines?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\"\\r\\n                      name=\\\"warning-outline\\\"\\r\\n                      slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'OPERATIVIDAD MAQUINARIA' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/oper-machines/create'\\\"\\r\\n                        fill=\\\"outline\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        slot=\\\"end\\\">\\r\\n                Crear {{'OPERATIVIDAD MAQUINARIA' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\"\\r\\n                          slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"operMachinesService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\"\\r\\n                 size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"operMachinesService.getOperMachines(operMachinesService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"operMachinesService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\"\\r\\n                          name=\\\"play-outline\\\"\\r\\n                          style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"true\\\"> Pag: {{operMachinesService.meta.current_page}}\\r\\n                                           /{{operMachinesService.meta.last_page}} {{operMachinesService.meta.from}}\\r\\n                                           -{{operMachinesService.meta.to}}\\r\\n                                           /{{operMachinesService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"operMachinesService.getOperMachines(operMachinesService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"operMachinesService.meta.current_page == operMachinesService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\"\\r\\n                          name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"OPERATIVIDAD MAQUINARIA\\\"></app-main-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/oper-machines/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'OPERATIVIDAD MAQUINARIA'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/oper-machines/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'OPERATIVIDAD MAQUINARIA' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1jcmVhdGUvb3Blci1tYWNoaW5lcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {OperMachinesService} from \"../oper-machines.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {OperMachine} from \"../oper-machine\";\r\nimport {OperMachinesFormComponent} from \"../oper-machines-form/oper-machines-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-oper-machines-create',\r\n    templateUrl: './oper-machines-create.component.html',\r\n    styleUrls: ['./oper-machines-create.component.scss']\r\n})\r\nexport class OperMachinesCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('operMachineForm') operMachineForm: OperMachinesFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public operMachinesService: OperMachinesService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.operMachineForm.operMachinesForm.valueChanges.subscribe((data) => {\r\n            this.operMachinesService.operMachinesFormValid.next(this.operMachineForm.operMachinesForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.operMachinesService.createOperMachine();\r\n        this.operMachinesService.operMachine = <OperMachine>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1kdXBsaWNhdGUvb3Blci1tYWNoaW5lcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-oper-machines-duplicate',\r\n  templateUrl: './oper-machines-duplicate.component.html',\r\n  styleUrls: ['./oper-machines-duplicate.component.scss'],\r\n})\r\nexport class OperMachinesDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1lZGl0L29wZXItbWFjaGluZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {OperMachinesService} from \"../oper-machines.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {OperMachine} from \"../oper-machine\";\r\nimport {OperMachinesFormComponent} from \"../oper-machines-form/oper-machines-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-oper-machines-edit',\r\n  templateUrl: './oper-machines-edit.component.html',\r\n  styleUrls: ['./oper-machines-edit.component.scss']\r\n})\r\nexport class OperMachinesEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('operMachineForm') operMachineForm: OperMachinesFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: OperMachine = null;\r\n\r\n  constructor(\r\n      public operMachinesService: OperMachinesService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.operMachinesService.editOperMachine(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.operMachineForm.operMachinesForm.valueChanges.subscribe((data) => {\r\n          this.operMachinesService.operMachinesFormValid.next(this.operMachineForm.operMachinesForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"/* generated section */\\n/* end generated section */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3Blci1tYWNoaW5lcy9vcGVyLW1hY2hpbmVzLWZvcm0vb3Blci1tYWNoaW5lcy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFBO0FBRUEsMEJBQUEiLCJmaWxlIjoic3JjL2FwcC9vcGVyLW1hY2hpbmVzL29wZXItbWFjaGluZXMtZm9ybS9vcGVyLW1hY2hpbmVzLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnZW5lcmF0ZWQgc2VjdGlvbiAqL1xyXG5cclxuLyogZW5kIGdlbmVyYXRlZCBzZWN0aW9uICovXHJcbiJdfQ== */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {OperMachine} from \"../oper-machine\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {OperMachinesService} from \"../oper-machines.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-oper-machines-form',\r\n    templateUrl: './oper-machines-form.component.html',\r\n    styleUrls: ['./oper-machines-form.component.scss']\r\n})\r\nexport class OperMachinesFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: OperMachine = <OperMachine>{};\r\n\r\n    @ViewChild('operMachinesForm') operMachinesForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'hous_unit_area_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('AREA') + ' es obligatorio.'},\r\n        ],\r\n        'oper_contractor_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CONTRATISTA') + ' es obligatorio.'},\r\n        ],\r\n        'contract_expiration_date': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('FECHA VENCIMIENTO CONTRATO') + ' es obligatorio.'},\r\n        ],\r\n        'contract_monthly_price': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('VALOR MENSUAL') + ' es obligatorio.'},\r\n        ],\r\n        'monthly_periodicity': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERIODICIDAD MENSUAL') + ' es obligatorio.'},\r\n        ],\r\n        'oper_preventive_maintenance_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('OPERATIVIDAD MTTO PREVENTIVOS') + ' es obligatorio.'},\r\n        ],\r\n        'oper_replacement_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('OPERATIVIDAD REPUESTOS') + ' es obligatorio.'},\r\n        ],\r\n        'inventory_code': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO INVENTARIO') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public operMachinesService: OperMachinesService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setHousUnitAreaId\r\n\r\n    setHousUnitAreaId(event: any) {\r\n        this.operMachinesService.operMachine.hous_unit_area_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setHousUnitAreaId\r\n\r\n\r\n    // set setOperContractorId\r\n\r\n    setOperContractorId(event: any) {\r\n        this.operMachinesService.operMachine.oper_contractor_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setOperContractorId\r\n\r\n\r\n    // set setOperPreventiveMaintenanceIds\r\n    setOperPreventiveMaintenanceIds(event: any) {\r\n        let operPreventiveMaintenanceIds = null;\r\n        if (event.value.length) {\r\n            operPreventiveMaintenanceIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                operPreventiveMaintenanceIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.operMachinesService.operMachine.oper_preventive_maintenance_ids = operPreventiveMaintenanceIds;\r\n    }\r\n    // end setOperPreventiveMaintenanceIds\r\n\r\n\r\n    // set setOperReplacementIds\r\n    setOperReplacementIds(event: any) {\r\n        let operReplacementIds = null;\r\n        if (event.value.length) {\r\n            operReplacementIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                operReplacementIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.operMachinesService.operMachine.oper_replacement_ids = operReplacementIds;\r\n    }\r\n    // end setOperReplacementIds\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1saXN0L29wZXItbWFjaGluZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { OperMachinesService} from \"../oper-machines.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-oper-machines-list',\r\n    templateUrl: './oper-machines-list.component.html',\r\n    styleUrls: ['./oper-machines-list.component.scss'],\r\n})\r\nexport class OperMachinesListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public operMachinesService: OperMachinesService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.operMachinesService.getOperMachines();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OperMachinesPage } from './oper-machines.page';\r\nimport {OperMachinesEditComponent} from \"./oper-machines-edit/oper-machines-edit.component\";\r\nimport {OperMachinesCreateComponent} from \"./oper-machines-create/oper-machines-create.component\";\r\nimport {OperMachinesListComponent} from \"./oper-machines-list/oper-machines-list.component\";\r\n\r\nconst routes: Routes = [\r\n// generated section\r\n    {\r\n        path: '',\r\n        data: {\r\n            title: 'OPERATIVIDAD MAQUINARIA',\r\n            roles: ['admin'],\r\n            // permissions: []\r\n        },\r\n        component: OperMachinesPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        data: {\r\n            title: 'OPERATIVIDAD MAQUINARIA',\r\n            roles: ['admin'],\r\n            // permissions: []\r\n        },\r\n        component: OperMachinesListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      data: {\r\n          title: 'OPERATIVIDAD MAQUINARIA',\r\n          roles: ['admin'],\r\n          // permissions: []\r\n      },\r\n      component: OperMachinesCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        data: {\r\n            title: 'OPERATIVIDAD MAQUINARIA',\r\n            roles: ['admin'],\r\n            // permissions: []\r\n        },\r\n        component: OperMachinesEditComponent\r\n    },\r\n];\r\n// end generated section\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class OperMachinesPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {OperMachinesPageRoutingModule} from './oper-machines-routing.module';\r\n\r\nimport { OperMachinesPage} from './oper-machines.page';\r\nimport { OperMachinesListComponent} from \"./oper-machines-list/oper-machines-list.component\";\r\nimport { OperMachinesCreateComponent} from \"./oper-machines-create/oper-machines-create.component\";\r\nimport { OperMachinesDuplicateComponent} from \"./oper-machines-duplicate/oper-machines-duplicate.component\";\r\nimport { OperMachinesEditComponent} from \"./oper-machines-edit/oper-machines-edit.component\";\r\nimport { OperMachinesFormComponent} from \"./oper-machines-form/oper-machines-form.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n    // imports generated section\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        OperMachinesPageRoutingModule\r\n    // end imports generated section\r\n    ],\r\n    declarations: [\r\n    // declarations generated section\r\n        OperMachinesPage,\r\n        OperMachinesListComponent,\r\n        OperMachinesCreateComponent,\r\n        OperMachinesDuplicateComponent,\r\n        OperMachinesEditComponent,\r\n        OperMachinesFormComponent,\r\n    // end declarations generated section\r\n    ]\r\n})\r\nexport class OperMachinesPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-oper-machines',\r\n  templateUrl: './oper-machines.page.html',\r\n  styleUrls: ['./oper-machines.page.scss'],\r\n})\r\nexport class OperMachinesPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport {OperMachine, OperMachineLists} from \"./oper-machine\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OperMachinesService {\r\n\r\n    public operMachinesUrl = 'oper-machines';\r\n    public operMachinesFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public operMachines: OperMachine[] = [];\r\n    public operMachine: OperMachine = <OperMachine>{};\r\n    public operMachineLists: OperMachineLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n\r\n// generated section\r\n    public getOperMachines(page: any = this.page, perPage: any = this.perPage) {\r\n\r\n        this.api.get(\r\n            this.operMachinesUrl +\r\n            '?page=' + page +\r\n            '&perPage=' + perPage +\r\n            '&q[name:cont]=' + this.searchValue +\r\n            '&q[inventory_code:cont]=' + this.searchValue\r\n        )\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.operMachines = res.data;\r\n                    this.operMachineLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editOperMachine(id: any) {\r\n        this.api.get(this.operMachinesUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.operMachine = res.data.model;\r\n                    this.operMachineLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateOperMachine() {\r\n        this.api.put(this.operMachinesUrl + '/' + this.operMachine.id, {\r\n            model: this.operMachine,\r\n            pivots: {}\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getOperMachines(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createOperMachine() {\r\n        this.api.get(this.operMachinesUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.operMachine = <OperMachine>{};\r\n                    this.operMachineLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeOperMachine() {\r\n        this.api.post(this.operMachinesUrl, {\r\n            model: this.operMachine,\r\n            pivots: {}\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getOperMachines(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteOperMachine(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.operMachinesUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getOperMachines(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n// end generated section\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}