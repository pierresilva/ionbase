{"version":3,"sources":["webpack:///src/app/roles/roles-create/roles-create.component.html","webpack:///src/app/roles/roles-duplicate/roles-duplicate.component.html","webpack:///src/app/roles/roles-edit/roles-edit.component.html","webpack:///src/app/roles/roles-form/roles-form.component.html","webpack:///src/app/roles/roles-list/roles-list.component.html","webpack:///src/app/roles/roles.page.html","webpack:///src/app/roles/roles-create/roles-create.component.scss","webpack:///src/app/roles/roles-create/roles-create.component.ts","webpack:///src/app/roles/roles-duplicate/roles-duplicate.component.scss","webpack:///src/app/roles/roles-duplicate/roles-duplicate.component.ts","webpack:///src/app/roles/roles-edit/roles-edit.component.scss","webpack:///src/app/roles/roles-edit/roles-edit.component.ts","webpack:///src/app/roles/roles-form/roles-form.component.scss","webpack:///src/app/roles/roles-form/roles-form.component.ts","webpack:///src/app/roles/roles-list/roles-list.component.scss","webpack:///src/app/roles/roles-list/roles-list.component.ts","webpack:///src/app/roles/roles-routing.module.ts","webpack:///src/app/roles/roles.module.ts","webpack:///src/app/roles/roles.page.scss","webpack:///src/app/roles/roles.page.ts","webpack:///src/app/roles/roles.service.ts"],"names":["RolesCreateComponent","rolesService","route","platform","id","formValid","clearPosts","roleForm","rolesForm","valueChanges","subscribe","data","rolesFormValid","next","valid","console","log","createRole","role","selector","template","RolesDuplicateComponent","RolesEditComponent","model","snapshot","paramMap","get","editRole","RolesFormComponent","toTitlecase","validationMessages","type","message","transform","event","userIds","value","length","i","push","user_ids","permissionIds","permission_ids","RolesListComponent","api","loading","getRoles","content","scrollToTop","routes","path","component","RolesPageRoutingModule","imports","forChild","exports","RolesPageModule","declarations","RolesPage","RolesService","alert","toast","router","navigation","rolesUrl","roles","roleLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","user","users","permission","permissions","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"roles-roles-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/roles'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"rolesService.storeRole()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!rolesService.rolesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'ROLES' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-roles-form #roleForm [model]=\\\"rolesService.role\\\"></app-roles-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Roles duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/roles'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"rolesService.updateRole()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!rolesService.rolesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'ROLES' | titlecase}}: {{ rolesService.role?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-roles-form #roleForm [model]=\\\"rolesService.role\\\"></app-roles-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #rolesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- user_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'USUARIOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"user_ids\\\"\\n                          id=\\\"user_ids-field\\\"\\n                          [(ngModel)]=\\\"model.users\\\"\\n                          [items]=\\\"rolesService.roleLists.User\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('USUARIOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('USUARIOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setUserIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.user_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"rolesForm.form.controls['user_ids']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end user_ids -->\\n\\n\\n    <!-- permission_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'PERMISOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"permission_ids\\\"\\n                          id=\\\"permission_ids-field\\\"\\n                          [(ngModel)]=\\\"model.permissions\\\"\\n                          [items]=\\\"rolesService.roleLists.Permission\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('PERMISOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('PERMISOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setPermissionIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.permission_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"rolesForm.form.controls['permission_ids']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end permission_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"rolesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- code -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"code\\\"\\n                            id=\\\"code-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"rolesForm.form.controls['code']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end code -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'ROLES' | titlecase}}\\\"\\n                 primaryLink=\\\"roles/create\\\"\\n                 primaryText=\\\"Crear {{'ROLES' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('ROLES' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.rolesService.searchValue = ''; rolesService.getRoles()\\\"\\n                       (keyup.enter)=\\\"rolesService.getRoles()\\\"\\n                       [(ngModel)]=\\\"rolesService.searchValue\\\"></ion-searchbar>\\n\\n    <ion-card>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && rolesService.roles.length\\\">\\n            <ion-item *ngFor=\\\"let role of rolesService.roles; let index = index\\\">\\n                <ion-label>\\n                    <h3>{{ 'NOMBRE' | titlecase }}: {{ role.name }}</h3>\\n                    <h3>{{ 'CÓDIGO' | titlecase }}: {{ role.code }}</h3>\\n                    <h3>{{ 'USUARIOS' | titlecase }}:\\n                    <ng-container *ngIf=\\\"role.users.length\\\">\\n                        <ng-container *ngFor=\\\"let user of role.users; let last = last\\\">\\n                        <a routerLink=\\\"/users/{{ user.id }}/edit\\\">{{ user.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                        </ng-container>\\n                    </ng-container>\\n                    </h3>\\n                    <h3>{{ 'PERMISOS' | titlecase }}:\\n                    <ng-container *ngIf=\\\"role.permissions.length\\\">\\n                        <ng-container *ngFor=\\\"let permission of role.permissions; let last = last\\\">\\n                        <a routerLink=\\\"/permissions/{{ permission.id }}/edit\\\">{{ permission.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                        </ng-container>\\n                    </ng-container>\\n                    </h3>\\n                </ion-label>\\n\\n\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" [routerLink]=\\\"'/roles/' + role.id + '/edit'\\\">\\n                    <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                </ion-button>\\n                <!--<ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" (click)=\\\"null\\\">\\n                    <ion-icon name=\\\"eye-outline\\\"></ion-icon>\\n                </ion-button>-->\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"danger\\\" (click)=\\\"rolesService.deleteRole(role.id)\\\">\\n                    <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && !rolesService.roles.length\\\">\\n            <ion-item>\\n                <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label><h2>No se encontraron {{'ROLES' | titlecase}}</h2></ion-label>\\n                <ion-button [routerLink]=\\\"'/roles/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                    Crear {{'ROLES' | titlecase}}\\n                    <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n    </ion-card>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"rolesService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"rolesService.getRoles(rolesService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"rolesService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{rolesService.meta.current_page}}\\n                /{{rolesService.meta.last_page}} {{rolesService.meta.from}}-{{rolesService.meta.to}}\\n                /{{rolesService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"rolesService.getRoles(rolesService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"rolesService.meta.current_page == rolesService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"ROLES\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/roles/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'ROLES'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/roles/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'ROLES' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGVzLWNyZWF0ZS9yb2xlcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {RolesService} from \"../roles.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Role} from \"../role\";\nimport {RolesFormComponent} from \"../roles-form/roles-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n    selector: 'app-roles-create',\n    templateUrl: './roles-create.component.html',\n    styleUrls: ['./roles-create.component.scss']\n})\nexport class RolesCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('roleForm') roleForm: RolesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public rolesService: RolesService,\n        public route: ActivatedRoute,\n        public platform: Platform\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.roleForm.rolesForm.valueChanges.subscribe((data) => {\n            this.rolesService.rolesFormValid.next(this.roleForm.rolesForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.rolesService.createRole();\n        this.rolesService.role = <Role>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGVzLWR1cGxpY2F0ZS9yb2xlcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-roles-duplicate',\n  templateUrl: './roles-duplicate.component.html',\n  styleUrls: ['./roles-duplicate.component.scss'],\n})\nexport class RolesDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGVzLWVkaXQvcm9sZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {RolesService} from \"../roles.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Role} from \"../role\";\nimport {RolesFormComponent} from \"../roles-form/roles-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-roles-edit',\n  templateUrl: './roles-edit.component.html',\n  styleUrls: ['./roles-edit.component.scss']\n})\nexport class RolesEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('roleForm') roleForm: RolesFormComponent;\n\n    public id: any = null;\n    public model: Role = null;\n\n  constructor(\n      public rolesService: RolesService,\n      public route: ActivatedRoute,\n      public platform: Platform\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.rolesService.editRole(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.roleForm.rolesForm.valueChanges.subscribe((data) => {\n          this.rolesService.rolesFormValid.next(this.roleForm.rolesForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGVzLWZvcm0vcm9sZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Role} from \"../role\";\nimport {FormGroup} from \"@angular/forms\";\nimport {RolesService} from \"../roles.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-roles-form',\n    templateUrl: './roles-form.component.html',\n    styleUrls: ['./roles-form.component.scss']\n})\nexport class RolesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: Role = <Role>{};\n\n    @ViewChild('rolesForm') rolesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'code': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\n        ],\n        'user_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('USUARIOS') + ' es obligatorio.'},\n        ],\n        'permission_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERMISOS') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public rolesService: RolesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setUserIds\n    setUserIds(event: any) {\n        let userIds = null;\n        if (event.value.length) {\n            userIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                userIds.push(event.value[i].id);\n            }\n        }\n        this.rolesService.role.user_ids = userIds;\n    }\n    // end setUserIds\n\n\n    // set setPermissionIds\n    setPermissionIds(event: any) {\n        let permissionIds = null;\n        if (event.value.length) {\n            permissionIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                permissionIds.push(event.value[i].id);\n            }\n        }\n        this.rolesService.role.permission_ids = permissionIds;\n    }\n    // end setPermissionIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGVzLWxpc3Qvcm9sZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { RolesService} from \"../roles.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-roles-list',\n    templateUrl: './roles-list.component.html',\n    styleUrls: ['./roles-list.component.scss'],\n})\nexport class RolesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public rolesService: RolesService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.rolesService.getRoles();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RolesPage } from './roles.page';\nimport {RolesEditComponent} from \"./roles-edit/roles-edit.component\";\nimport {RolesCreateComponent} from \"./roles-create/roles-create.component\";\nimport {RolesListComponent} from \"./roles-list/roles-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RolesPage\n    },\n    {\n        path: 'list',\n        component: RolesListComponent\n    },\n    {\n      path: 'create',\n      component: RolesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: RolesEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class RolesPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {RolesPageRoutingModule} from './roles-routing.module';\n\nimport { RolesPage} from './roles.page';\nimport { RolesListComponent} from \"./roles-list/roles-list.component\";\nimport { RolesCreateComponent} from \"./roles-create/roles-create.component\";\nimport { RolesDuplicateComponent} from \"./roles-duplicate/roles-duplicate.component\";\nimport { RolesEditComponent} from \"./roles-edit/roles-edit.component\";\nimport { RolesFormComponent} from \"./roles-form/roles-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        RolesPageRoutingModule\n    ],\n    declarations: [\n        RolesPage,\n        RolesListComponent,\n        RolesCreateComponent,\n        RolesDuplicateComponent,\n        RolesEditComponent,\n        RolesFormComponent,\n    ]\n})\nexport class RolesPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.page.html',\n  styleUrls: ['./roles.page.scss'],\n})\nexport class RolesPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { Role, RoleLists } from \"./role\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RolesService {\n\n    public rolesUrl = 'roles';\n    public rolesFormValid = new BehaviorSubject<boolean>(false);\n\n    public roles: Role[] = [];\n    public role: Role = <Role>{};\n    public roleLists: RoleLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getRoles(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.rolesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.roles = res.data;\n                    this.roleLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editRole(id: any) {\n        this.api.get(this.rolesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.role = res.data.model;\n                    this.roleLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateRole() {\n        this.api.put(this.rolesUrl + '/' + this.role.id, {\n            model: this.role,\n            pivots: {\n                user: this.role.users,\n                permission: this.role.permissions,\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getRoles(1);\n            }\n        );\n    }\n\n    public createRole() {\n        this.api.get(this.rolesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.role = <Role>{};\n                    this.roleLists = res.lists\n                }\n            );\n    }\n\n    public storeRole() {\n        this.api.post(this.rolesUrl, {\n            model: this.role,\n            pivots: {\n                user: this.role.users,\n                permission: this.role.permissions,\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getRoles(1);\n            }\n        );\n    }\n\n    public async deleteRole(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.rolesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getRoles(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"]}