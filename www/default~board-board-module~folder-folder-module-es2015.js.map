{"version":3,"sources":["./src/app/board/boar-messages-create/boar-messages-create.component.html","./src/app/board/boar-messages-edit/boar-messages-edit.component.html","./src/app/board/boar-messages-form/boar-messages-form.component.html","./src/app/board/boar-messages-list-view/boar-messages-list-view.component.html","./src/app/board/boar-messages-show/boar-messages-show.component.html","./src/app/board/board-messages-list/board-messages-list.component.html","./src/app/board/board.component.html","./src/app/board/boar-messages-create/boar-messages-create.component.scss","./src/app/board/boar-messages-create/boar-messages-create.component.ts","./src/app/board/boar-messages-edit/boar-messages-edit.component.scss","./src/app/board/boar-messages-edit/boar-messages-edit.component.ts","./src/app/board/boar-messages-form/boar-messages-form.component.scss","./src/app/board/boar-messages-form/boar-messages-form.component.ts","./src/app/board/boar-messages-list-view/boar-messages-list-view.component.scss","./src/app/board/boar-messages-list-view/boar-messages-list-view.component.ts","./src/app/board/boar-messages-show/boar-messages-show.component.scss","./src/app/board/boar-messages-show/boar-messages-show.component.ts","./src/app/board/boar-messages.service.ts","./src/app/board/board-messages-list/board-messages-list.component.scss","./src/app/board/board-messages-list/board-messages-list.component.ts","./src/app/board/board-routing.module.ts","./src/app/board/board.component.scss","./src/app/board/board.component.ts","./src/app/board/board.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,6gCAA88B,uCAAuC,wPAAwP,E;;;;;;;;;;;;ACA5vC;AAAe,+gCAAg9B,uCAAuC,IAAI,yCAAyC,wPAAwP,E;;;;;;;;;;;;ACA3yC;AAAe,sOAAuK,wBAAwB,iiBAAiiB,sBAAsB,yKAAyK,wBAAwB,2lBAA2lB,sBAAsB,yKAAyK,KAAK,sBAAsB,saAAsa,sBAAsB,uKAAuK,wBAAwB,mUAAmU,wBAAwB,0EAA0E,0BAA0B,iVAAiV,sBAAsB,kLAAkL,0CAA0C,sgBAAsgB,sBAAsB,iMAAiM,qDAAqD,8hBAA8hB,sBAAsB,6GAA6G,E;;;;;;;;;;;;ACA3yJ;AAAe,oRAAqN,kDAAkD,uIAAuI,kBAAkB,6HAA6H,6CAA6C,4FAA4F,E;;;;;;;;;;;;ACArrB;AAAe,2FAA4B,uCAAuC,kKAAkK,uCAAuC,wJAAwJ,uEAAuE,sMAAsM,E;;;;;;;;;;;;ACAhsB;AAAe,2FAA4B,4BAA4B,0FAA0F,4BAA4B,wWAAwW,+XAA+X,6JAA6J,wBAAwB,iEAAiE,qBAAqB,mJAAmJ,wBAAwB,iEAAiE,qBAAqB,smDAAsmD,E;;;;;;;;;;;;ACAthG;AAAe,qTAAsP,aAAa,eAAe,qBAAqB,yBAAyB,+QAA+Q,2CAA2C,+RAA+R,aAAa,eAAe,qBAAqB,yBAAyB,6QAA6Q,0CAA0C,kKAAkK,E;;;;;;;;;;;;ACA38C;AAAe,6GAA8C,2LAA2L,E;;;;;;;;;;;;;;;;;;;;;ACA7L;AACZ;AACP;AACqC;AAChB;IAUhD,2BAA2B,SAA3B,2BAA2B;IAOpC,YACW,mBAAwC,EACxC,KAAqB,EACrB,QAAkB,EAClB,UAA6B;QAH7B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAmB;QAPxC,OAAE,GAAQ,IAAI,CAAC;QACR,cAAS,GAAG,KAAK,CAAC;IAQzB,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IAED,gBAAgB;QACZ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,eAAe;QACX,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACnE,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB;QACZ,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,CAAC;QAC7C,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAgB,EAAE,CAAC;IAC3D,CAAC;CAEJ;;YA7CO,0EAAmB;YAHnB,8DAAc;YACd,uDAAQ;YACR,sFAAiB;;;+BAapB,uDAAS,SAAC,kBAAkB;;AAFpB,2BAA2B;IALvC,+DAAS,CAAC;QACP,QAAQ,EAAE,0BAA0B;QACpC,8QAAoD;;KAEvD,CAAC;GACW,2BAA2B,CAmCvC;AAnCuC;;;;;;;;;;;;;ACdxC;AAAe,6GAA8C,uLAAuL,E;;;;;;;;;;;;;;;;;;;;;ACAzL;AAKZ;AACP;AACqC;AAChB;IAOhD,yBAAyB,SAAzB,yBAAyB;IAOlC,YACW,mBAAwC,EACxC,KAAqB,EACrB,QAAkB,EAClB,UAA6B;QAH7B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAmB;QAPjC,OAAE,GAAQ,IAAI,CAAC;QACf,UAAK,GAAgB,IAAI,CAAC;IAQjC,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,gBAAgB;QACZ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAED,eAAe;QACX,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACnE,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACP,CAAC;CAEJ;;YArCO,0EAAmB;YAHnB,8DAAc;YACd,uDAAQ;YACR,sFAAiB;;;+BAUpB,uDAAS,SAAC,kBAAkB;;AAFpB,yBAAyB;IALrC,+DAAS,CAAC;QACP,QAAQ,EAAE,wBAAwB;QAClC,wQAAkD;;KAErD,CAAC;GACW,yBAAyB,CA8BrC;AA9BqC;;;;;;;;;;;;;ACftC;AAAe,6GAA8C,uLAAuL,E;;;;;;;;;;;;;;;;;;;ACAnK;AAGnC;AACe;IAOhD,yBAAyB,SAAzB,yBAAyB;IA2BlC,YACW,mBAAwC,EACvC,WAA0B;QAD3B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACvC,gBAAW,GAAX,WAAW,CAAe;QA3BtB,UAAK,GAA6B,EAAE,CAAC;QAI9C,uBAAkB,GAAG;YACxB,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,kBAAkB,EAAC;aACvG;YACD,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,kBAAkB,EAAC;aACvG;YACD,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,kBAAkB,EAAC;aACvG;YACD,QAAQ,EAAE;gBACN,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,kBAAkB,EAAC;aACvG;YACD,iBAAiB,EAAE,EAElB;YACA,uBAAuB,EAAE,EAExB;SACL,CAAC;QAME,IAAI,CAAC,KAAK,GAAgB,EAAE,CAAC;IACjC,CAAC;IAED,QAAQ;IACR,CAAC;IAED,eAAe;IACf,CAAC;CAIJ;;YAjDO,0EAAmB;YADnB,6DAAa;;;oBAUhB,mDAAK,SAAC,OAAO;+BAEb,uDAAS,SAAC,kBAAkB;;AAJpB,yBAAyB;IALrC,+DAAS,CAAC;QACP,QAAQ,EAAE,wBAAwB;QAClC,wQAAkD;;KAErD,CAAC;GACW,yBAAyB,CA0CrC;AA1CqC;;;;;;;;;;;;;ACXtC;AAAe,6GAA8C,mMAAmM,E;;;;;;;;;;;;;;;;;;;ACAhN;AACa;AACgB;IAOhE,6BAA6B,SAA7B,6BAA6B;IAEtC,YACW,mBAAwC,EACxC,UAA6B;QAD7B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,eAAU,GAAV,UAAU,CAAmB;IAExC,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC;IAED,gBAAgB;QACZ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEpC,CAAC;CAEJ;;YAzBO,0EAAmB;YACnB,sFAAiB;;AAOZ,6BAA6B;IALzC,+DAAS,CAAC;QACP,QAAQ,EAAE,6BAA6B;QACvC,uRAAuD;;KAE1D,CAAC;GACW,6BAA6B,CAiBzC;AAjByC;;;;;;;;;;;;;ACT1C;AAAe,6GAA8C,uLAAuL,E;;;;;;;;;;;;;;;;;;;;;ACApM;AAEa;AACd;AACP;AACqC;IAOhE,yBAAyB,SAAzB,yBAAyB;IAKlC,YACW,mBAAwC,EACxC,KAAqB,EACrB,QAAkB,EAClB,UAA6B;QAH7B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAmB;QAPjC,OAAE,GAAQ,IAAI,CAAC;QACf,UAAK,GAAgB,IAAI,CAAC;IAQjC,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,gBAAgB;QACZ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;CAEJ;;YAhCO,0EAAmB;YACnB,8DAAc;YACd,uDAAQ;YACR,sFAAiB;;AAOZ,yBAAyB;IALrC,+DAAS,CAAC;QACP,QAAQ,EAAE,wBAAwB;QAClC,wQAAkD;;KAErD,CAAC;GACW,yBAAyB,CAsBrC;AAtBqC;;;;;;;;;;;;;;;;;;;;;;;;ACZK;AACN;AAGsB;AACI;AACA;AACxB;AACkC;IAK5D,mBAAmB,SAAnB,mBAAmB;IAiB9B,YACW,GAAe,EACf,KAAmB,EACnB,KAAmB,EACnB,MAAc,EACb,UAA6B;QAJ9B,QAAG,GAAH,GAAG,CAAY;QACf,UAAK,GAAL,KAAK,CAAc;QACnB,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAQ;QACb,eAAU,GAAV,UAAU,CAAmB;QArBhC,oBAAe,GAAG,eAAe,CAAC;QAClC,0BAAqB,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;QAE5D,iBAAY,GAAkB,EAAE,CAAC;QACjC,gBAAW,GAA6B,EAAE,CAAC;QAC3C,sBAAiB,GAAqB,EAAE,CAAC;QAEzC,gBAAW,GAAG,EAAE,CAAC;QACjB,YAAO,GAAG,EAAE,CAAC;QAEb,SAAI,GAAS,IAAI,CAAC;QAElB,SAAI,GAAG,CAAC,CAAC;QAET,iBAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAQ7D,CAAC;IAEI,eAAe,CAAC,OAAY,IAAI,CAAC,IAAI,EAAE,UAAe,IAAI,CAAC,OAAO;QAErE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,QAAQ,GAAG,IAAI,GAAG,WAAW,GAAG,OAAO,GAAG,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC;aAC7G,SAAS,CACN,CAAC,GAAQ,EAAE,EAAE;YACT,aAAa;YACb,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC;YAC7B,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,KAAK,CAAC;YACnC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACrB,6DAA6D;QACjE,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE;YACT,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CACJ,CAAC;IACV,CAAC;IAEM,eAAe,CAAC,EAAO;QAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,GAAG,GAAG,EAAE,GAAG,OAAO,CAAC;aAClD,SAAS,CACN,CAAC,GAAQ,EAAE,EAAE;YACT,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,KAAK,CAAC;QACvC,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE;YACT,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CACJ,CAAC;IACV,CAAC;IAEM,iBAAiB;QACpB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE;YAC3D,KAAK,EAAE,IAAI,CAAC,WAAW;YACvB,MAAM,EAAE,EACP;SACJ,CAAC,CAAC,SAAS,CACR,CAAC,GAAQ,EAAE,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,CACJ,CAAC;IACN,CAAC;IAEM,iBAAiB;QACpB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;aACzC,SAAS,CACN,CAAC,GAAQ,EAAE,EAAE;YACT,IAAI,CAAC,WAAW,GAAgB,EAAE,CAAC;YACnC,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,KAAK;QACtC,CAAC,CACJ,CAAC;IACV,CAAC;IAEM,gBAAgB;QACnB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YAChC,KAAK,EAAE,IAAI,CAAC,WAAW;YACvB,MAAM,EAAE,EACP;SACJ,CAAC,CAAC,SAAS,CACR,CAAC,GAAQ,EAAE,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,CACJ,CAAC;IACN,CAAC;IAEY,kBAAkB,CAAC,EAAO;;YACnC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY,CACzC,yBAAyB,CAC5B,CAAC;YACF,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC;qBAC/C,SAAS,CACN,CAAC,GAAQ,EAAE,EAAE;oBACT,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;oBACxD,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;gBAC5B,CAAC,CACJ,CAAC;aACT;iBAAM;gBACH,OAAO;aACV;QACL,CAAC;KAAA;CACJ;;YAtHO,uEAAU;YACV,2EAAY;YACZ,2EAAY;YACZ,sDAAM;YACN,qFAAiB;;AAKZ,mBAAmB;IAH/B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,mBAAmB,CA6G/B;AA7G+B;;;;;;;;;;;;;ACbhC;AAAe,6GAA8C,uLAAuL,E;;;;;;;;;;;;;;;;;;;;;;ACAzL;AACG;AACQ;AACO;AAChB;AACnB;IAO7B,0BAA0B,SAA1B,0BAA0B;IAInC,YACW,mBAAwC,EACxC,GAAe,EACf,OAAuB,EACvB,UAA6B;QAH7B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,QAAG,GAAH,GAAG,CAAY;QACf,YAAO,GAAP,OAAO,CAAgB;QACvB,eAAU,GAAV,UAAU,CAAmB;IAExC,CAAC;IAED,QAAQ;QACJ,8CAA8C;IAClD,CAAC;IAED,gBAAgB;QACZ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;CAEJ;;YAjCO,0EAAmB;YAHnB,uEAAU;YACV,+EAAc;YACd,sFAAiB;;;sBAWpB,uDAAS,SAAC,yDAAU,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC;;AAF7B,0BAA0B;IALtC,+DAAS,CAAC;QACP,QAAQ,EAAE,yBAAyB;QACnC,2QAAmD;;KAEtD,CAAC;GACW,0BAA0B,CAyBtC;AAzBsC;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACc;AACJ;AAC8C;AACG;AACN;AACA;AAE5F,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC5B;IACD;QACI,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,6GAA0B;KACxC;IACD;QACI,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,gHAA2B;KACzC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,0GAAyB;KACvC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,0GAAyB;KACvC;CACJ,CAAC;IAMW,kBAAkB,SAAlB,kBAAkB;CAC9B;AADY,kBAAkB;IAJ9B,8DAAQ,CAAC;QACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,kBAAkB,CAC9B;AAD8B;;;;;;;;;;;;;ACnC/B;AAAe,6GAA8C,2IAA2I,E;;;;;;;;;;;;;;;;;;ACAxJ;AAC0B;IAO7D,cAAc,SAAd,cAAc;IAEvB,YACW,UAA6B;QAA7B,eAAU,GAAV,UAAU,CAAmB;IAExC,CAAC;IAED,QAAQ;IACR,CAAC;IAED,gBAAgB;QACZ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;CAEJ;;YArBO,sFAAiB;;AAOZ,cAAc;IAL1B,+DAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,2NAAqC;;KAExC,CAAC;GACW,cAAc,CAc1B;AAd0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRY;AACM;AAEa;AACf;AACA;AACW;AACL;AAC8C;AACH;AACM;AACN;AACc;AACd;IAyB/E,WAAW,SAAX,WAAW;CACvB;AADY,WAAW;IAtBvB,8DAAQ,CAAC;QACN,YAAY,EAAE;YACV,+DAAc;YACd,6GAA0B;YAC1B,0GAAyB;YACzB,iHAA2B;YAC3B,2GAAyB;YACzB,yHAA6B;YAC7B,2GAAyB;SAC5B;QACD,OAAO,EAAE;YACL,yHAA6B;SAChC;QACD,OAAO,EAAE;YACL,4DAAY;YACZ,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kEAAY;YACZ,wEAAkB;SACrB;KACJ,CAAC;GACW,WAAW,CACvB;AADuB","file":"default~board-board-module~folder-folder-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/comp-addresses'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n                [text]=\\\"''\\\"\\n                [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"boarMessagesService.storeBoarMessage()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!boarMessagesService.boarMessagesFormValid.value\\\">\\n                <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'Entrada de la cartelera' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-boar-messages-form #boarMessagesForm [model]=\\\"boarMessagesService.boarMessage\\\"></app-boar-messages-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/comp-addresses'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n                [text]=\\\"''\\\"\\n                [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"boarMessagesService.updateBoarMessage()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!boarMessagesService.boarMessagesFormValid.value\\\">\\n                <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'Entrada de la cartelera' | titlecase}}: {{ boarMessagesService.boarMessage?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-boar-messages-form #boarMessagesForm [model]=\\\"boarMessagesService.boarMessage\\\"></app-boar-messages-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #boarMessagesForm=\\\"ngForm\\\"\\n      novalidate\\n      autocomplete=\\\"off\\\">\\n    <!-- name -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n        <ion-input [(ngModel)]=\\\"model.name\\\"\\n                   type=\\\"text\\\"\\n                   name=\\\"name\\\"\\n                   id=\\\"name-field\\\"\\n                   [required]=\\\"true\\\"\\n                   placeholder=\\\"\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"boarMessagesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end name -->\\n    <!-- body -->\\n    <!--<ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'cuerpo' | titlecase }}</ion-label>\\n        <ion-textarea [(ngModel)]=\\\"model.body\\\"\\n                      type=\\\"text\\\"\\n                      name=\\\"body\\\"\\n                      id=\\\"body-field\\\"\\n                      [rows]=\\\"10\\\"\\n                      [required]=\\\"true\\\"\\n                      placeholder=\\\"\\\"></ion-textarea>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.body\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"boarMessagesForm.form.controls['body']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>-->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label position=\\\"stacked\\\" style=\\\"font-size: 1rem;\\\">{{ 'ACTA' | titlecase }}</ion-label>\\n        <input [ngxSummernote]\\n               name=\\\"act\\\"\\n               id=\\\"act-field\\\"\\n               [(ngModel)]=\\\"model.body\\\">\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.body\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"boarMessagesForm.form.controls['body']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end body -->\\n    <!-- status -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'ESTADO' | titlecase }}</ion-label>\\n        <ion-select [(ngModel)]=\\\"model.status\\\"\\n                    [required]=\\\"true\\\"\\n                    name=\\\"status\\\"\\n                    id=\\\"status-field\\\"\\n                    okText=\\\"Seleccionar\\\"\\n                    cancelText=\\\"Cancelar\\\">\\n            <ion-select-option value=\\\"active\\\">{{ 'Activo' | titlecase }}</ion-select-option>\\n            <ion-select-option value=\\\"inactive\\\">{{ 'Inactivo' | titlecase }}</ion-select-option>\\n        </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.status\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"boarMessagesForm.form.controls['status']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end status -->\\n    <!-- notify_to_users -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'notificar a los usuarios' | titlecase }}</ion-label>\\n        <ion-toggle name=\\\"notify_to_users\\\"\\n                    id=\\\"notify_to_users-field\\\"\\n                    slot=\\\"end\\\"\\n                    [(ngModel)]=\\\"model.notify_to_users\\\"></ion-toggle>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.notify_to_users\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"boarMessagesForm.form.controls['repass']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end notify_to_users -->\\n    <!-- notify_to_house_units -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'notificar a unidades habitacionales' | titlecase }}</ion-label>\\n        <ion-toggle name=\\\"notify_to_house_units\\\"\\n                    id=\\\"notify_to_house_units-field\\\"\\n                    slot=\\\"end\\\"\\n                    [(ngModel)]=\\\"model.notify_to_house_units\\\"></ion-toggle>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.notify_to_house_units\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"boarMessagesForm.form.controls['repass']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end notify_to_house_units -->\\n</form>\\n\";","export default \"<ng-container *ngFor=\\\"let boarMessage of boarMessagesService.boarMessages\\\">\\n\\n    <ion-card>\\n        <div class=\\\"cssreset\\\">\\n            <ion-card-header>\\n                <ion-card-subtitle>Publicado el {{boarMessage.created_at | dateFormat:'DD/MM/YYYY'}}</ion-card-subtitle>\\n                <a [routerLink]=\\\"'/board/' + boarMessage.id + '/show'\\\">\\n                    <ion-card-title>{{boarMessage.name}}</ion-card-title>\\n                </a>\\n            </ion-card-header>\\n\\n            <ion-card-content>\\n                {{boarMessage.body | stripHtml | truncate:150}}\\n            </ion-card-content>\\n        </div>\\n\\n    </ion-card>\\n\\n</ng-container>\\n\\n\";","export default \"<app-main-header title=\\\"{{boarMessagesService.boarMessage?.name}}\\\"></app-main-header>\\n<ion-content id=\\\"pages-content\\\">\\n    <ion-header collapse=\\\"condense\\\">\\n        <ion-toolbar>\\n            <ion-title size=\\\"large\\\">{{boarMessagesService.boarMessage?.name}}</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-grid>\\n        <ion-row>\\n            <ion-col>\\n                <span>Publicado el {{boarMessagesService.boarMessage?.created_at | dateFormat:'DD/MM/YYYY'}}</span>\\n                <br><br>\\n                <div [innerHTML]=\\\"boarMessagesService.boarMessage?.body\\\"></div>\\n            </ion-col>\\n        </ion-row>\\n\\n    </ion-grid>\\n</ion-content>\\n\";","export default \"<app-main-header title=\\\"{{'Entradas de la Cartelera'}}\\\"\\n                 primaryLink=\\\"board/create\\\"\\n                 primaryText=\\\"Crear {{'Entradas de la Cartelera'}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n<ion-content id=\\\"pages-content\\\">\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                   [cancelButtonText]=\\\"'Cancelar'\\\"\\n                   [placeholder]=\\\"'Buscar Entradas de la Cartelera'\\\"\\n                   (ionCancel)=\\\"this.boarMessagesService.searchValue = ''; boarMessagesService.getBoarMessages()\\\"\\n                   (keyup.enter)=\\\"boarMessagesService.getBoarMessages()\\\"\\n                   [(ngModel)]=\\\"boarMessagesService.searchValue\\\"></ion-searchbar>\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && boarMessagesService.boarMessages?.length\\\">\\n        <ion-card *ngFor=\\\"let boarMessage of boarMessagesService.boarMessages; let index = index\\\">\\n            <ion-list>\\n                <ion-item class=\\\"item-transparent\\\">\\n                    <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                    <div class=\\\"wrap-text\\\">{{ boarMessage?.name }}</div>\\n                </ion-item>\\n                <ion-item class=\\\"item-transparent\\\">\\n                    <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\n                    <div class=\\\"wrap-text\\\">{{ boarMessage?.code }}</div>\\n                </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/board/' + boarMessage?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"boarMessagesService.deleteBoardMessage(boarMessage?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !boarMessagesService.boarMessages?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron entradas de la cartelera</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/board/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear entradas de la cartelera\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n</ion-content>\\n\";","export default \"<app-main-header title=\\\"CARTELERA\\\"></app-main-header>\\n<ion-content>\\n    <ion-row>\\n\\n        <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n            <ion-card routerLink=\\\"/board/list\\\">\\n                <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                    <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                </div>\\n                <ion-card-header>\\n                    <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                        Listar {{ 'ENTRADAS DE LA CARTELERA'  | titlecase }}\\n                    </ion-card-subtitle>\\n                </ion-card-header>\\n\\n            </ion-card>\\n        </ion-col>\\n\\n        <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n            <ion-card routerLink=\\\"/board/create\\\">\\n                <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                    <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                </div>\\n                <ion-card-header>\\n                    <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                        Crear {{ 'ENTRADAS DE LA CARTELERA' | titlecase }}\\n                    </ion-card-subtitle>\\n                </ion-card-header>\\n\\n            </ion-card>\\n        </ion-col>\\n\\n    </ion-row>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXItbWVzc2FnZXMtY3JlYXRlL2JvYXItbWVzc2FnZXMtY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Platform} from \"@ionic/angular\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\nimport {BoarMessagesService} from \"../boar-messages.service\";\nimport {BoarMessagesFormComponent} from \"../boar-messages-form/boar-messages-form.component\";\nimport {CompAddress} from \"../../comp-addresses/comp-address\";\nimport {BoarMessage} from \"../boar-message\";\n\n@Component({\n    selector: 'app-boar-messages-create',\n    templateUrl: './boar-messages-create.component.html',\n    styleUrls: ['./boar-messages-create.component.scss'],\n})\nexport class BoarMessagesCreateComponent implements OnInit {\n\n    @ViewChild('boarMessagesForm') boarMessagesForm: BoarMessagesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public boarMessagesService: BoarMessagesService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService\n    ) {\n    }\n\n    ngOnInit() {\n        this.clearBoarMessage();\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.boarMessagesForm.boarMessagesForm.valueChanges.subscribe((data) => {\n            this.boarMessagesService.boarMessagesFormValid.next(this.boarMessagesForm.boarMessagesForm.valid);\n        });\n    }\n\n    clearBoarMessage() {\n        console.log('clear');\n        this.boarMessagesService.createBoarMessage();\n        this.boarMessagesService.boarMessage = <BoarMessage>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXItbWVzc2FnZXMtZWRpdC9ib2FyLW1lc3NhZ2VzLWVkaXQuY29tcG9uZW50LnNjc3MifQ== */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {CompAddress} from \"../../comp-addresses/comp-address\";\nimport {BoarMessagesFormComponent} from \"../boar-messages-form/boar-messages-form.component\";\nimport {BoarMessage} from \"../boar-message\";\nimport {CompAddressesService} from \"../../comp-addresses/comp-addresses.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Platform} from \"@ionic/angular\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\nimport {BoarMessagesService} from \"../boar-messages.service\";\n\n@Component({\n    selector: 'app-boar-messages-edit',\n    templateUrl: './boar-messages-edit.component.html',\n    styleUrls: ['./boar-messages-edit.component.scss'],\n})\nexport class BoarMessagesEditComponent implements OnInit {\n\n    @ViewChild('boarMessagesForm') boarMessagesForm: BoarMessagesFormComponent;\n\n    public id: any = null;\n    public model: BoarMessage = null;\n\n    constructor(\n        public boarMessagesService: BoarMessagesService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.id = this.route.snapshot.paramMap.get('id');\n        this.boarMessagesService.editBoarMessage(this.id);\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.boarMessagesForm.boarMessagesForm.valueChanges.subscribe((data) => {\n            this.boarMessagesService.boarMessagesFormValid.next(this.boarMessagesForm.boarMessagesForm.valid);\n        });\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXItbWVzc2FnZXMtZm9ybS9ib2FyLW1lc3NhZ2VzLWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {FormGroup} from \"@angular/forms\";\nimport {BoarMessage} from \"../boar-message\";\nimport {TitleCasePipe} from \"@angular/common\";\nimport {BoarMessagesService} from \"../boar-messages.service\";\n\n@Component({\n    selector: 'app-boar-messages-form',\n    templateUrl: './boar-messages-form.component.html',\n    styleUrls: ['./boar-messages-form.component.scss'],\n})\nexport class BoarMessagesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: BoarMessage = <BoarMessage>{};\n\n    @ViewChild('boarMessagesForm') boarMessagesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'code': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\n        ],\n        'body': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CUERPO') + ' es obligatorio.'},\n        ],\n        'status': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ESTADO') + ' es obligatorio.'},\n        ],\n        'notify_to_users': [\n\n        ],\n         'notify_to_house_units': [\n\n         ]\n    };\n\n    constructor(\n        public boarMessagesService: BoarMessagesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n        this.model = <BoarMessage>{};\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXItbWVzc2FnZXMtbGlzdC12aWV3L2JvYXItbWVzc2FnZXMtbGlzdC12aWV3LmNvbXBvbmVudC5zY3NzIn0= */\";","import {Component, OnInit} from '@angular/core';\nimport {BoarMessagesService} from \"../boar-messages.service\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-boar-messages-list-view',\n    templateUrl: './boar-messages-list-view.component.html',\n    styleUrls: ['./boar-messages-list-view.component.scss'],\n})\nexport class BoarMessagesListViewComponent implements OnInit {\n\n    constructor(\n        public boarMessagesService: BoarMessagesService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.boarMessagesService.getBoarMessages();\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(true);\n\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXItbWVzc2FnZXMtc2hvdy9ib2FyLW1lc3NhZ2VzLXNob3cuY29tcG9uZW50LnNjc3MifQ== */\";","import {Component, OnInit} from '@angular/core';\nimport {BoarMessage} from \"../boar-message\";\nimport {BoarMessagesService} from \"../boar-messages.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Platform} from \"@ionic/angular\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-boar-messages-show',\n    templateUrl: './boar-messages-show.component.html',\n    styleUrls: ['./boar-messages-show.component.scss'],\n})\nexport class BoarMessagesShowComponent implements OnInit {\n\n    public id: any = null;\n    public model: BoarMessage = null;\n\n    constructor(\n        public boarMessagesService: BoarMessagesService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.id = this.route.snapshot.paramMap.get('id');\n        this.boarMessagesService.editBoarMessage(this.id);\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(true);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {BoarMessage, BoarMessageLists} from \"./boar-message\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {Router} from \"@angular/router\";\nimport {NavigationService} from \"../@shared/services/navigation.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoarMessagesService {\n    public boarMessagesUrl = 'boar-messages';\n    public boarMessagesFormValid = new BehaviorSubject<boolean>(false);\n\n    public boarMessages: BoarMessage[] = [];\n    public boarMessage: BoarMessage = <BoarMessage>{};\n    public boarMessagesLists: BoarMessageLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n  constructor(\n      public api: ApiService,\n      public alert: AlertService,\n      public toast: ToastService,\n      public router: Router,\n      private navigation: NavigationService,\n  ) { }\n\n    public getBoarMessages(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.boarMessagesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    this.boarMessages = res.data;\n                    this.boarMessagesLists = res.lists;\n                    this.meta = res.meta;\n                    // document.getElementById('pages-content').scrollToTop(300);\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editBoarMessage(id: any) {\n        this.api.get(this.boarMessagesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.boarMessage = res.data.model;\n                    this.boarMessagesLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateBoarMessage() {\n        this.api.put(this.boarMessagesUrl + '/' + this.boarMessage.id, {\n            model: this.boarMessage,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getBoarMessages(1);\n            }\n        );\n    }\n\n    public createBoarMessage() {\n        this.api.get(this.boarMessagesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.boarMessage = <BoarMessage>{};\n                    this.boarMessagesLists = res.lists\n                }\n            );\n    }\n\n    public storeBoarMessage() {\n        this.api.post(this.boarMessagesUrl, {\n            model: this.boarMessage,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getBoarMessages(1);\n            }\n        );\n    }\n\n    public async deleteBoardMessage(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.boarMessagesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getBoarMessages(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXJkLW1lc3NhZ2VzLWxpc3QvYm9hcmQtbWVzc2FnZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\nimport {BoarMessagesService} from \"../boar-messages.service\";\nimport {IonContent} from \"@ionic/angular\";\n\n@Component({\n    selector: 'app-board-messages-list',\n    templateUrl: './board-messages-list.component.html',\n    styleUrls: ['./board-messages-list.component.scss'],\n})\nexport class BoardMessagesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    constructor(\n        public boarMessagesService: BoarMessagesService,\n        public api: ApiService,\n        public loading: LoadingService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        // this.boarMessagesService.getBoarMessages();\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(true);\n        this.boarMessagesService.getBoarMessages();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {BoardComponent} from \"./board.component\";\nimport {BoardMessagesListComponent} from \"./board-messages-list/board-messages-list.component\";\nimport {BoarMessagesCreateComponent} from \"./boar-messages-create/boar-messages-create.component\";\nimport {BoarMessagesEditComponent} from \"./boar-messages-edit/boar-messages-edit.component\";\nimport {BoarMessagesShowComponent} from \"./boar-messages-show/boar-messages-show.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: BoardComponent,\n    },\n    {\n        path: 'list',\n        component: BoardMessagesListComponent,\n    },\n    {\n        path: 'create',\n        component: BoarMessagesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: BoarMessagesEditComponent\n    },\n    {\n        path: ':id/show',\n        component: BoarMessagesShowComponent\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BoardRoutingModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXJkLmNvbXBvbmVudC5zY3NzIn0= */\";","import {Component, OnInit} from '@angular/core';\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-board',\n    templateUrl: './board.component.html',\n    styleUrls: ['./board.component.scss'],\n})\nexport class BoardComponent implements OnInit {\n\n    constructor(\n        public splitPanel: SplitPanelService\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(true);\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {BoardRoutingModule} from './board-routing.module';\nimport {FormsModule} from \"@angular/forms\";\nimport {IonicModule} from \"@ionic/angular\";\nimport {SharedModule} from \"../@shared/shared.module\";\nimport {BoardComponent} from \"./board.component\";\nimport {BoardMessagesListComponent} from \"./board-messages-list/board-messages-list.component\";\nimport {BoarMessagesFormComponent} from \"./boar-messages-form/boar-messages-form.component\";\nimport {BoarMessagesCreateComponent} from \"./boar-messages-create/boar-messages-create.component\";\nimport {BoarMessagesEditComponent} from \"./boar-messages-edit/boar-messages-edit.component\";\nimport {BoarMessagesListViewComponent} from \"./boar-messages-list-view/boar-messages-list-view.component\";\nimport {BoarMessagesShowComponent} from \"./boar-messages-show/boar-messages-show.component\";\n\n\n@NgModule({\n    declarations: [\n        BoardComponent,\n        BoardMessagesListComponent,\n        BoarMessagesFormComponent,\n        BoarMessagesCreateComponent,\n        BoarMessagesEditComponent,\n        BoarMessagesListViewComponent,\n        BoarMessagesShowComponent\n    ],\n    exports: [\n        BoarMessagesListViewComponent\n    ],\n    imports: [\n        CommonModule,\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        BoardRoutingModule\n    ]\n})\nexport class BoardModule {\n}\n"],"sourceRoot":"webpack:///"}