{"version":3,"sources":["./src/app/settings/settings-create/settings-create.component.html","./src/app/settings/settings-duplicate/settings-duplicate.component.html","./src/app/settings/settings-edit/settings-edit.component.html","./src/app/settings/settings-form/settings-form.component.html","./src/app/settings/settings-list/settings-list.component.html","./src/app/settings/settings-modal/settings-modal.component.html","./src/app/settings/settings.page.html","./src/app/settings/settings-create/settings-create.component.scss","./src/app/settings/settings-create/settings-create.component.ts","./src/app/settings/settings-duplicate/settings-duplicate.component.scss","./src/app/settings/settings-duplicate/settings-duplicate.component.ts","./src/app/settings/settings-edit/settings-edit.component.scss","./src/app/settings/settings-edit/settings-edit.component.ts","./src/app/settings/settings-form/settings-form.component.scss","./src/app/settings/settings-form/settings-form.component.ts","./src/app/settings/settings-list/settings-list.component.scss","./src/app/settings/settings-list/settings-list.component.ts","./src/app/settings/settings-modal/settings-modal.component.scss","./src/app/settings/settings-modal/settings-modal.component.ts","./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.module.ts","./src/app/settings/settings.page.scss","./src/app/settings/settings.page.ts","./src/app/settings/settings.service.ts"],"names":[],"mappings":"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","file":"settings-settings-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/settings'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"settingsService.storeSetting()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!settingsService.settingsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'AJUSTES' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-settings-form #settingForm [model]=\\\"settingsService.setting\\\"></app-settings-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Settings duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/settings'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"settingsService.updateSetting()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!settingsService.settingsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'AJUSTES' | titlecase}}: {{ settingsService.setting?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-settings-form #settingForm [model]=\\\"settingsService.setting\\\"></app-settings-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #settingsForm=\\\"ngForm\\\"\\n      novalidate\\n      autocomplete=\\\"off\\\">\\n\\n\\n    <!-- setting_group_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'GRUPO' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"setting_group_id\\\"\\n                          id=\\\"setting_group_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.setting_group\\\"\\n                          [items]=\\\"settingsService.settingLists.SettingGroup\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('GRUPOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('GRUPOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setSettingGroupId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.setting_group_id\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"settingsForm.form.controls['setting_group_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end setting_group_id -->\\n\\n\\n    <!-- name -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n        <ion-input [(ngModel)]=\\\"model.name\\\"\\n                   type=\\\"text\\\"\\n                   name=\\\"name\\\"\\n                   id=\\\"name-field\\\"\\n                   [required]=\\\"true\\\"\\n                   placeholder=\\\"\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"settingsForm.form.controls['name']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end name -->\\n\\n\\n    <!-- code -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\n        <ion-input [(ngModel)]=\\\"model.code\\\"\\n                   type=\\\"text\\\"\\n                   name=\\\"code\\\"\\n                   id=\\\"code-field\\\"\\n                   [readonly]=\\\"true\\\"\\n                   placeholder=\\\"\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"settingsForm.form.controls['code']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end code -->\\n\\n    <!-- rich_text -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'Texto enriquecido' | titlecase }}</ion-label>\\n        <ion-toggle name=\\\"main\\\"\\n                    id=\\\"main-field\\\"\\n                    slot=\\\"end\\\"\\n                    [(ngModel)]=\\\"model.rich_text\\\"></ion-toggle>\\n    </ion-item>\\n    <!-- end main -->\\n\\n\\n    <!-- value -->\\n    <ion-item class=\\\"item-transparent\\\" *ngIf=\\\"model.rich_text\\\">\\n        <ion-label position=\\\"stacked\\\"\\n                   style=\\\"font-size: 1rem;\\\">{{ 'VALOR' | titlecase }}</ion-label>\\n        <input [ngxSummernote]\\n               [required]=\\\"true\\\"\\n               name=\\\"value\\\"\\n               id=\\\"value-field\\\"\\n               [(ngModel)]=\\\"model.value\\\">\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.value\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"settingsForm.form.controls['value']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end value -->\\n\\n    <!-- value -->\\n    <ion-item class=\\\"item-transparent\\\" *ngIf=\\\"!model.rich_text\\\">\\n        <ion-label position=\\\"stacked\\\"\\n                   style=\\\"font-size: 1rem;\\\">{{ 'VALOR' | titlecase }}</ion-label>\\n        <ion-textarea [(ngModel)]=\\\"model.value\\\"\\n                      name=\\\"value\\\"\\n                      [required]=\\\"true\\\"\\n                      id=\\\"value-field\\\"\\n                      rows=\\\"6\\\"\\n                      placeholder=\\\"\\\"></ion-textarea>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.value\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"settingsForm.form.controls['value']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end value -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'AJUSTES' | titlecase}}\\\"\\n                 primaryLink=\\\"settings/create\\\"\\n                 primaryText=\\\"Crear {{'AJUSTES' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('AJUSTES' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.settingsService.searchValue = ''; settingsService.getSettings()\\\"\\n                       (keyup.enter)=\\\"settingsService.getSettings()\\\"\\n                       [(ngModel)]=\\\"settingsService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && settingsService.settings?.length\\\">\\n        <ion-card *ngFor=\\\"let setting of settingsService.settings; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ setting?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ setting?.code }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'VALOR' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ setting?.value | stripHtml }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'AJUSTES GRUPOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/setting-groups/{{ setting?.setting_group?.id }}/edit\\\">{{ setting?.setting_group?.name }}</a></div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/settings/' + setting?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"settingsService.deleteSetting(setting?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !settingsService.settings?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'AJUSTES' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/settings/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'AJUSTES' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"settingsService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"settingsService.getSettings(settingsService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"settingsService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{settingsService.meta.current_page}}\\n                /{{settingsService.meta.last_page}} {{settingsService.meta.from}}-{{settingsService.meta.to}}\\n                /{{settingsService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"settingsService.getSettings(settingsService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"settingsService.meta.current_page == settingsService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-button (click)=\\\"closeModal()\\\">\\n                <ion-icon slot=\\\"icon-only\\\"\\n                          [name]=\\\"'arrow-back-outline'\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"success\\\"\\n                        (click)=\\\"settingsService.saveSetting(); closeModal()\\\"\\n                        [disabled]=\\\"!settingsFormComponent?.settingsForm?.valid\\\">\\n                <ion-icon slot=\\\"icon-only\\\"\\n                          [name]=\\\"'save-outline'\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{action}} Parametro</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n    <app-settings-form #settingsFormComponent></app-settings-form>\\n\\n</ion-content>\\n\";","export default \"<app-main-header title=\\\"AJUSTES\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/settings/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'AJUSTES'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/settings/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'AJUSTES' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLWNyZWF0ZS9zZXR0aW5ncy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {SettingsService} from \"../settings.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Setting} from \"../setting\";\nimport {SettingsFormComponent} from \"../settings-form/settings-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-settings-create',\n    templateUrl: './settings-create.component.html',\n    styleUrls: ['./settings-create.component.scss']\n})\nexport class SettingsCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('settingForm') settingForm: SettingsFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public settingsService: SettingsService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ionViewWillEnter() {\n       this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.settingForm.settingsForm.valueChanges.subscribe((data) => {\n            this.settingsService.settingsFormValid.next(this.settingForm.settingsForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.settingsService.createSetting();\n        this.settingsService.setting = <Setting>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLWR1cGxpY2F0ZS9zZXR0aW5ncy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-duplicate',\n  templateUrl: './settings-duplicate.component.html',\n  styleUrls: ['./settings-duplicate.component.scss'],\n})\nexport class SettingsDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLWVkaXQvc2V0dGluZ3MtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {SettingsService} from \"../settings.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Setting} from \"../setting\";\nimport {SettingsFormComponent} from \"../settings-form/settings-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-settings-edit',\n  templateUrl: './settings-edit.component.html',\n  styleUrls: ['./settings-edit.component.scss']\n})\nexport class SettingsEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('settingForm') settingForm: SettingsFormComponent;\n\n    public id: any = null;\n    public model: Setting = null;\n\n  constructor(\n      public settingsService: SettingsService,\n      public route: ActivatedRoute,\n      public platform: Platform,\n      public splitPanel: SplitPanelService,\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.settingsService.editSetting(this.id);\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n  ngAfterViewInit() {\n      this.settingForm.settingsForm.valueChanges.subscribe((data) => {\n          this.settingsService.settingsFormValid.next(this.settingForm.settingsForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLWZvcm0vc2V0dGluZ3MtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Setting} from \"../setting\";\nimport {FormGroup} from \"@angular/forms\";\nimport {SettingsService} from \"../settings.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-settings-form',\n    templateUrl: './settings-form.component.html',\n    styleUrls: ['./settings-form.component.scss']\n})\nexport class SettingsFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: Setting = <Setting>{};\n\n    @ViewChild('settingsForm') settingsForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'code': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\n        ],\n        'value': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('VALOR') + ' es obligatorio.'},\n        ],\n        'rich_text': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TEXTO ENRIQUECIDO') + ' es obligatorio.'},\n        ],\n        'setting_group_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('GRUPO') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public settingsService: SettingsService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setSettingGroupId\n\n    setSettingGroupId(event: any) {\n        this.settingsService.setting.setting_group_id = event.value ? event.value.id : null;\n    }\n    // end setSettingGroupId\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLWxpc3Qvc2V0dGluZ3MtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { SettingsService} from \"../settings.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-settings-list',\n    templateUrl: './settings-list.component.html',\n    styleUrls: ['./settings-list.component.scss'],\n})\nexport class SettingsListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public settingsService: SettingsService,\n        public api: ApiService,\n        public loading: LoadingService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.settingsService.getSettings();\n    }\n\n    ionViewWillEnter() {\n     this.splitPanel.show.next(true);\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLW1vZGFsL3NldHRpbmdzLW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport {ModalController, NavParams} from \"@ionic/angular\";\nimport {SettingsService} from \"../settings.service\";\n\n@Component({\n  selector: 'app-settings-modal',\n  templateUrl: './settings-modal.component.html',\n  styleUrls: ['./settings-modal.component.scss'],\n})\nexport class SettingsModalComponent implements OnInit {\n\n  action: string;\n\n  constructor(\n      private modalController: ModalController,\n      private navParams: NavParams,\n      public settingsService: SettingsService\n  ) { }\n\n  ngOnInit() {\n    this.action = this.navParams.data.action;\n  }\n\n  async closeModal() {\n    const onClosedData: string = \"Wrapped Up!\";\n    await this.modalController.dismiss(onClosedData);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\nimport {SettingsEditComponent} from \"./settings-edit/settings-edit.component\";\nimport {SettingsCreateComponent} from \"./settings-create/settings-create.component\";\nimport {SettingsListComponent} from \"./settings-list/settings-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SettingsPage\n    },\n    {\n        path: 'list',\n        component: SettingsListComponent\n    },\n    {\n      path: 'create',\n      component: SettingsCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: SettingsEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class SettingsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {SettingsPageRoutingModule} from './settings-routing.module';\n\nimport { SettingsPage} from './settings.page';\nimport { SettingsListComponent} from \"./settings-list/settings-list.component\";\nimport { SettingsCreateComponent} from \"./settings-create/settings-create.component\";\nimport { SettingsDuplicateComponent} from \"./settings-duplicate/settings-duplicate.component\";\nimport { SettingsEditComponent} from \"./settings-edit/settings-edit.component\";\nimport { SettingsFormComponent} from \"./settings-form/settings-form.component\";\nimport {SettingsModalComponent} from \"./settings-modal/settings-modal.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        SettingsPageRoutingModule\n    ],\n    declarations: [\n        SettingsPage,\n        SettingsListComponent,\n        SettingsCreateComponent,\n        SettingsDuplicateComponent,\n        SettingsEditComponent,\n        SettingsFormComponent,\n        SettingsModalComponent,\n    ]\n})\nexport class SettingsPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n\n  constructor(\n    public splitPanel: SplitPanelService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { Setting, SettingLists } from \"./setting\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingsService {\n\n    public settingsUrl = 'settings';\n    public settingsFormValid = new BehaviorSubject<boolean>(false);\n\n    public settings: Setting[] = [];\n    public setting: Setting = <Setting>{};\n    public settingLists: SettingLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getSettings(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.settingsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.settings = res.data;\n                    this.settingLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editSetting(id: any) {\n        this.api.get(this.settingsUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.setting = res.data.model;\n                    this.settingLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateSetting() {\n        this.api.put(this.settingsUrl + '/' + this.setting.id, {\n            model: this.setting,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getSettings(1);\n            }\n        );\n    }\n\n    public createSetting() {\n        this.api.get(this.settingsUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.setting = <Setting>{};\n                    this.settingLists = res.lists\n                }\n            );\n    }\n\n    public storeSetting() {\n        this.api.post(this.settingsUrl, {\n            model: this.setting,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getSettings(1);\n            }\n        );\n    }\n\n    public async deleteSetting(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.settingsUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getSettings(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n\n    saveSetting() {}\n\n}\n"],"sourceRoot":"webpack:///"}