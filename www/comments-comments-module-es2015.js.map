{"version":3,"sources":["./src/app/comments/comments-create/comments-create.component.html","./src/app/comments/comments-duplicate/comments-duplicate.component.html","./src/app/comments/comments-edit/comments-edit.component.html","./src/app/comments/comments-form/comments-form.component.html","./src/app/comments/comments-list/comments-list.component.html","./src/app/comments/comments.page.html","./src/app/comments/comments-create/comments-create.component.scss","./src/app/comments/comments-create/comments-create.component.ts","./src/app/comments/comments-duplicate/comments-duplicate.component.scss","./src/app/comments/comments-duplicate/comments-duplicate.component.ts","./src/app/comments/comments-edit/comments-edit.component.scss","./src/app/comments/comments-edit/comments-edit.component.ts","./src/app/comments/comments-form/comments-form.component.scss","./src/app/comments/comments-form/comments-form.component.ts","./src/app/comments/comments-list/comments-list.component.scss","./src/app/comments/comments-list/comments-list.component.ts","./src/app/comments/comments-routing.module.ts","./src/app/comments/comments.module.ts","./src/app/comments/comments.page.scss","./src/app/comments/comments.page.ts","./src/app/comments/comments.service.ts"],"names":[],"mappings":"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","file":"comments-comments-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/comments'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"commentsService.storeComment()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"outline\\\"\\n                        [disabled]=\\\"!commentsService.commentsFormValid.value\\\"> Guardar\\n                <ion-icon slot=\\\"icon-only\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'COMENTARIOS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-comments-form #commentForm [model]=\\\"commentsService.comment\\\"></app-comments-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Comments duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/comments'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"commentsService.updateComment()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"outline\\\"\\n                        [disabled]=\\\"!commentsService.commentsFormValid.value\\\"> Guardar\\n                <ion-icon slot=\\\"icon-only\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'COMENTARIOS' | titlecase}}: {{ commentsService.comment?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-comments-form #commentForm [model]=\\\"commentsService.comment\\\"></app-comments-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #commentsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- post_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'ENTRADA' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"post_id\\\"\\n                          id=\\\"post_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.post\\\"\\n                          [items]=\\\"commentsService.commentLists.Post\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('ENTRADAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('ENTRADAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setPostId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.post_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"commentsForm.form.controls['post_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end post_id -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"commentsForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- body -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CUERPO' | titlecase }}</ion-label>\\n                <ion-textarea [(ngModel)]=\\\"model.body\\\"\\n                              name=\\\"body\\\"\\n                              id=\\\"body-field\\\"\\n                              [required]=\\\"true\\\"\\n                              rows=\\\"6\\\"\\n                              placeholder=\\\"\\\"></ion-textarea>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.body\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"commentsForm.form.controls['body']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end body -->\\n\\n\\n</form>\\n\\n<pre>\\n{{ model | json }}\\n</pre>\\n\";","export default \"<app-main-header title=\\\"{{'COMENTARIOS' | titlecase}}\\\"\\n                 primaryLink=\\\"comments/create\\\"\\n                 primaryText=\\\"Crear {{'COMENTARIOS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('COMENTARIOS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.commentsService.searchValue = ''; commentsService.getComments()\\\"\\n                       (keyup.enter)=\\\"commentsService.getComments()\\\"\\n                       [(ngModel)]=\\\"commentsService.searchValue\\\"></ion-searchbar>\\n\\n    <ion-card>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && commentsService.comments.length\\\">\\n            <ion-item *ngFor=\\\"let comment of commentsService.comments; let index = index\\\">\\n                <ion-label>\\n                    <h3>{{ 'NOMBRE' | titlecase }}: {{ comment.name }}</h3>\\n                    <h3>{{ 'CUERPO' | titlecase }}: {{ comment.body }}</h3>\\n                    <h3>{{ 'ENTRADAS' | titlecase }}: <a routerLink=\\\"/posts/{{ comment.post.id }}/edit\\\">{{ comment.post.name }}</a></h3>\\n                </ion-label>\\n\\n\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" [routerLink]=\\\"'/comments/' + comment.id + '/edit'\\\">\\n                    <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                </ion-button>\\n                <!--<ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" (click)=\\\"null\\\">\\n                    <ion-icon name=\\\"eye-outline\\\"></ion-icon>\\n                </ion-button>-->\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"danger\\\" (click)=\\\"commentsService.deleteComment(comment.id)\\\">\\n                    <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && !commentsService.comments.length\\\">\\n            <ion-item>\\n                <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label><h2>No se encontraron {{'COMENTARIOS' | titlecase}}</h2></ion-label>\\n                <ion-button [routerLink]=\\\"'/comments/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                    Crear {{'COMENTARIOS' | titlecase}}\\n                    <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n    </ion-card>\\n\\n</ion-content>\\n\\n<ion-footer>\\n    <ion-row *ngIf=\\\"commentsService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"commentsService.getComments(commentsService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"commentsService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{commentsService.meta.current_page}}\\n                /{{commentsService.meta.last_page}} {{commentsService.meta.from}}-{{commentsService.meta.to}}\\n                /{{commentsService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"commentsService.getComments(commentsService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"commentsService.meta.current_page == commentsService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"COMENTARIOS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnRzL2NvbW1lbnRzLWNyZWF0ZS9jb21tZW50cy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {CommentsService} from \"../comments.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Comment} from \"../comment\";\nimport {CommentsFormComponent} from \"../comments-form/comments-form.component\";\n\n@Component({\n    selector: 'app-comments-create',\n    templateUrl: './comments-create.component.html',\n    styleUrls: ['./comments-create.component.scss']\n})\nexport class CommentsCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('commentForm') commentForm: CommentsFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public commentsService: CommentsService,\n        public route: ActivatedRoute\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.commentForm.commentsForm.valueChanges.subscribe((data) => {\n            this.commentsService.commentsFormValid.next(this.commentForm.commentsForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.commentsService.createComment();\n        this.commentsService.comment = <Comment>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnRzL2NvbW1lbnRzLWR1cGxpY2F0ZS9jb21tZW50cy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comments-duplicate',\n  templateUrl: './comments-duplicate.component.html',\n  styleUrls: ['./comments-duplicate.component.scss'],\n})\nexport class CommentsDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnRzL2NvbW1lbnRzLWVkaXQvY29tbWVudHMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {CommentsService} from \"../comments.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Comment} from \"../comment\";\nimport {CommentsFormComponent} from \"../comments-form/comments-form.component\";\n\n@Component({\n  selector: 'app-comments-edit',\n  templateUrl: './comments-edit.component.html',\n  styleUrls: ['./comments-edit.component.scss']\n})\nexport class CommentsEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('commentForm') commentForm: CommentsFormComponent;\n\n    public id: any = null;\n    public model: Comment = null;\n\n  constructor(\n      public commentsService: CommentsService,\n      public route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.commentsService.editComment(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.commentForm.commentsForm.valueChanges.subscribe((data) => {\n          this.commentsService.commentsFormValid.next(this.commentForm.commentsForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnRzL2NvbW1lbnRzLWZvcm0vY29tbWVudHMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Comment} from \"../comment\";\nimport {FormGroup} from \"@angular/forms\";\nimport {CommentsService} from \"../comments.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-comments-form',\n    templateUrl: './comments-form.component.html',\n    styleUrls: ['./comments-form.component.scss']\n})\nexport class CommentsFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: Comment = <Comment>{};\n\n    @ViewChild('commentsForm') commentsForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'body': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CUERPO') + ' es obligatorio.'},\n        ],\n        'post_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ENTRADA') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public commentsService: CommentsService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setPostId\n\n    setPostId(event: any) {\n        this.commentsService.comment.post_id = event.value ? event.value.id : null;\n    }\n    // end setPostId\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnRzL2NvbW1lbnRzLWxpc3QvY29tbWVudHMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { CommentsService} from \"../comments.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-comments-list',\n    templateUrl: './comments-list.component.html',\n    styleUrls: ['./comments-list.component.scss'],\n})\nexport class CommentsListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public commentsService: CommentsService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.commentsService.getComments();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CommentsPage } from './comments.page';\nimport {CommentsEditComponent} from \"./comments-edit/comments-edit.component\";\nimport {CommentsCreateComponent} from \"./comments-create/comments-create.component\";\nimport {CommentsListComponent} from \"./comments-list/comments-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CommentsListComponent\n    },\n    {\n      path: 'create',\n      component: CommentsCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: CommentsEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class CommentsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {CommentsPageRoutingModule} from './comments-routing.module';\n\nimport { CommentsPage} from './comments.page';\nimport { CommentsListComponent} from \"./comments-list/comments-list.component\";\nimport { CommentsCreateComponent} from \"./comments-create/comments-create.component\";\nimport { CommentsDuplicateComponent} from \"./comments-duplicate/comments-duplicate.component\";\nimport { CommentsEditComponent} from \"./comments-edit/comments-edit.component\";\nimport { CommentsFormComponent} from \"./comments-form/comments-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        CommentsPageRoutingModule\n    ],\n    declarations: [\n        CommentsPage,\n        CommentsListComponent,\n        CommentsCreateComponent,\n        CommentsDuplicateComponent,\n        CommentsEditComponent,\n        CommentsFormComponent,\n    ]\n})\nexport class CommentsPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnRzL2NvbW1lbnRzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.page.html',\n  styleUrls: ['./comments.page.scss'],\n})\nexport class CommentsPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { Comment, CommentLists } from \"./comment\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentsService {\n\n    public commentsUrl = 'comments';\n    public commentsFormValid = new BehaviorSubject<boolean>(false);\n\n    public comments: Comment[] = [];\n    public comment: Comment = <Comment>{};\n    public commentLists: CommentLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getComments(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.commentsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.comments = res.data;\n                    this.commentLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editComment(id: any) {\n        this.api.get(this.commentsUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.comment = res.data.model;\n                    this.commentLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateComment() {\n        this.api.put(this.commentsUrl + '/' + this.comment.id, {\n            model: this.comment,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getComments(1);\n            }\n        );\n    }\n\n    public createComment() {\n        this.api.get(this.commentsUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.comment = <Comment>{};\n                    this.commentLists = res.lists\n                }\n            );\n    }\n\n    public storeComment() {\n        this.api.post(this.commentsUrl, {\n            model: this.comment,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getComments(1);\n            }\n        );\n    }\n\n    public async deleteComment(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.commentsUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getComments(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}