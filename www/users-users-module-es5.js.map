{"version":3,"sources":["webpack:///src/app/users/users-create/users-create.component.html","webpack:///src/app/users/users-duplicate/users-duplicate.component.html","webpack:///src/app/users/users-edit/users-edit.component.html","webpack:///src/app/users/users-form/users-form.component.html","webpack:///src/app/users/users-list/users-list.component.html","webpack:///src/app/users/users.page.html","webpack:///src/app/users/users-create/users-create.component.scss","webpack:///src/app/users/users-create/users-create.component.ts","webpack:///src/app/users/users-duplicate/users-duplicate.component.scss","webpack:///src/app/users/users-duplicate/users-duplicate.component.ts","webpack:///src/app/users/users-edit/users-edit.component.scss","webpack:///src/app/users/users-edit/users-edit.component.ts","webpack:///src/app/users/users-form/users-form.component.scss","webpack:///src/app/users/users-form/users-form.component.ts","webpack:///src/app/users/users-list/users-list.component.scss","webpack:///src/app/users/users-list/users-list.component.ts","webpack:///src/app/users/users-routing.module.ts","webpack:///src/app/users/users.module.ts","webpack:///src/app/users/users.page.scss","webpack:///src/app/users/users.page.ts","webpack:///src/app/users/users.service.ts"],"names":["UsersCreateComponent","usersService","route","id","formValid","clearPosts","userForm","usersForm","valueChanges","subscribe","data","usersFormValid","next","valid","console","log","createUser","user","selector","template","UsersDuplicateComponent","UsersEditComponent","model","snapshot","paramMap","get","editUser","UsersFormComponent","toTitlecase","validationMessages","type","message","transform","event","postIds","value","length","i","push","post_ids","UsersListComponent","api","loading","getUsers","content","scrollToTop","routes","path","component","UsersPageRoutingModule","imports","forChild","exports","UsersPageModule","declarations","UsersPage","UsersService","alert","toast","router","navigation","usersUrl","users","userLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"users-users-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/users'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"usersService.storeUser()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"outline\\\"\\n                        [disabled]=\\\"!usersService.usersFormValid.value\\\"> Guardar\\n                <ion-icon slot=\\\"icon-only\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'USUARIOS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-users-form #userForm [model]=\\\"usersService.user\\\"></app-users-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Users duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/users'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"usersService.updateUser()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"outline\\\"\\n                        [disabled]=\\\"!usersService.usersFormValid.value\\\"> Guardar\\n                <ion-icon slot=\\\"icon-only\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'USUARIOS' | titlecase}}: {{ usersService.user?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-users-form #userForm [model]=\\\"usersService.user\\\"></app-users-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #usersForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- post_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'ENTRADAS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"post_ids\\\"\\n                          id=\\\"post_ids-field\\\"\\n                          [(ngModel)]=\\\"model.posts\\\"\\n                          [items]=\\\"usersService.userLists.Post\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('ENTRADAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('ENTRADAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setPostIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.post_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"usersForm.form.controls['post_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end post_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NAME' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"usersForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- email -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'EMAIL' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.email\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"email\\\"\\n                            id=\\\"email-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"usersForm.form.controls['email']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end email -->\\n\\n\\n</form>\\n\\n<pre>\\n{{ model | json }}\\n</pre>\\n\";","export default \"<app-main-header title=\\\"{{'USUARIOS' | titlecase}}\\\"\\n                 primaryLink=\\\"users/create\\\"\\n                 primaryText=\\\"Crear {{'USUARIOS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('USUARIOS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.usersService.searchValue = ''; usersService.getUsers()\\\"\\n                       (keyup.enter)=\\\"usersService.getUsers()\\\"\\n                       [(ngModel)]=\\\"usersService.searchValue\\\"></ion-searchbar>\\n\\n    <ion-card>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && usersService.users.length\\\">\\n            <ion-item *ngFor=\\\"let user of usersService.users; let index = index\\\">\\n                <ion-label>\\n                    <h3>{{ 'NAME' | titlecase }}: {{ user.name }}</h3>\\n                    <h3>{{ 'EMAIL' | titlecase }}: {{ user.email }}</h3>\\n                    <h3>{{ 'ENTRADAS' | titlecase }}:\\n                    <ng-container *ngIf=\\\"user.posts.length\\\">\\n                        <ng-container *ngFor=\\\"let post of user.posts; let last = last\\\">\\n                        <a routerLink=\\\"/posts/{{ post.id }}/edit\\\">{{ post.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                        </ng-container>\\n                    </ng-container>\\n                    </h3>\\n                </ion-label>\\n\\n\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" [routerLink]=\\\"'/users/' + user.id + '/edit'\\\">\\n                    <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                </ion-button>\\n                <!--<ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" (click)=\\\"null\\\">\\n                    <ion-icon name=\\\"eye-outline\\\"></ion-icon>\\n                </ion-button>-->\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"danger\\\" (click)=\\\"usersService.deleteUser(user.id)\\\">\\n                    <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && !usersService.users.length\\\">\\n            <ion-item>\\n                <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label><h2>No se encontraron {{'USUARIOS' | titlecase}}</h2></ion-label>\\n                <ion-button [routerLink]=\\\"'/users/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                    Crear {{'USUARIOS' | titlecase}}\\n                    <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n    </ion-card>\\n\\n</ion-content>\\n\\n<ion-footer>\\n    <ion-row *ngIf=\\\"usersService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"usersService.getUsers(usersService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"usersService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{usersService.meta.current_page}}\\n                /{{usersService.meta.last_page}} {{usersService.meta.from}}-{{usersService.meta.to}}\\n                /{{usersService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"usersService.getUsers(usersService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"usersService.meta.current_page == usersService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"USUARIOS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLWNyZWF0ZS91c2Vycy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {UsersService} from \"../users.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {User} from \"../user\";\nimport {UsersFormComponent} from \"../users-form/users-form.component\";\n\n@Component({\n    selector: 'app-users-create',\n    templateUrl: './users-create.component.html',\n    styleUrls: ['./users-create.component.scss']\n})\nexport class UsersCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('userForm') userForm: UsersFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public usersService: UsersService,\n        public route: ActivatedRoute\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.userForm.usersForm.valueChanges.subscribe((data) => {\n            this.usersService.usersFormValid.next(this.userForm.usersForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.usersService.createUser();\n        this.usersService.user = <User>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLWR1cGxpY2F0ZS91c2Vycy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users-duplicate',\n  templateUrl: './users-duplicate.component.html',\n  styleUrls: ['./users-duplicate.component.scss'],\n})\nexport class UsersDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLWVkaXQvdXNlcnMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {UsersService} from \"../users.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {User} from \"../user\";\nimport {UsersFormComponent} from \"../users-form/users-form.component\";\n\n@Component({\n  selector: 'app-users-edit',\n  templateUrl: './users-edit.component.html',\n  styleUrls: ['./users-edit.component.scss']\n})\nexport class UsersEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('userForm') userForm: UsersFormComponent;\n\n    public id: any = null;\n    public model: User = null;\n\n  constructor(\n      public usersService: UsersService,\n      public route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.usersService.editUser(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.userForm.usersForm.valueChanges.subscribe((data) => {\n          this.usersService.usersFormValid.next(this.userForm.usersForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLWZvcm0vdXNlcnMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {User} from \"../user\";\nimport {FormGroup} from \"@angular/forms\";\nimport {UsersService} from \"../users.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-users-form',\n    templateUrl: './users-form.component.html',\n    styleUrls: ['./users-form.component.scss']\n})\nexport class UsersFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: User = <User>{};\n\n    @ViewChild('usersForm') usersForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NAME') + ' es obligatorio.'},\n        ],\n        'email': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMAIL') + ' es obligatorio.'},\n        ],\n        'post_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ENTRADAS') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public usersService: UsersService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setPostIds\n    setPostIds(event: any) {\n        let postIds = null;\n        if (event.value.length) {\n            postIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                postIds.push(event.value[i].id);\n            }\n        }\n        this.usersService.user.post_ids = postIds;\n    }\n    // end setPostIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLWxpc3QvdXNlcnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { UsersService} from \"../users.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-users-list',\n    templateUrl: './users-list.component.html',\n    styleUrls: ['./users-list.component.scss'],\n})\nexport class UsersListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public usersService: UsersService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.usersService.getUsers();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UsersPage } from './users.page';\nimport {UsersEditComponent} from \"./users-edit/users-edit.component\";\nimport {UsersCreateComponent} from \"./users-create/users-create.component\";\nimport {UsersListComponent} from \"./users-list/users-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UsersListComponent\n    },\n    {\n      path: 'create',\n      component: UsersCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: UsersEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class UsersPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {UsersPageRoutingModule} from './users-routing.module';\n\nimport { UsersPage} from './users.page';\nimport { UsersListComponent} from \"./users-list/users-list.component\";\nimport { UsersCreateComponent} from \"./users-create/users-create.component\";\nimport { UsersDuplicateComponent} from \"./users-duplicate/users-duplicate.component\";\nimport { UsersEditComponent} from \"./users-edit/users-edit.component\";\nimport { UsersFormComponent} from \"./users-form/users-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        UsersPageRoutingModule\n    ],\n    declarations: [\n        UsersPage,\n        UsersListComponent,\n        UsersCreateComponent,\n        UsersDuplicateComponent,\n        UsersEditComponent,\n        UsersFormComponent,\n    ]\n})\nexport class UsersPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.page.html',\n  styleUrls: ['./users.page.scss'],\n})\nexport class UsersPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { User, UserLists } from \"./user\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UsersService {\n\n    public usersUrl = 'users';\n    public usersFormValid = new BehaviorSubject<boolean>(false);\n\n    public users: User[] = [];\n    public user: User = <User>{};\n    public userLists: UserLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getUsers(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.usersUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.users = res.data;\n                    this.userLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editUser(id: any) {\n        this.api.get(this.usersUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.user = res.data.model;\n                    this.userLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateUser() {\n        this.api.put(this.usersUrl + '/' + this.user.id, {\n            model: this.user,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getUsers(1);\n            }\n        );\n    }\n\n    public createUser() {\n        this.api.get(this.usersUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.user = <User>{};\n                    this.userLists = res.lists\n                }\n            );\n    }\n\n    public storeUser() {\n        this.api.post(this.usersUrl, {\n            model: this.user,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getUsers(1);\n            }\n        );\n    }\n\n    public async deleteUser(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.usersUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getUsers(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"]}