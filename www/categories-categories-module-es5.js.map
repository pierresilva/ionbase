{"version":3,"sources":["webpack:///src/app/categories/categories-create/categories-create.component.html","webpack:///src/app/categories/categories-duplicate/categories-duplicate.component.html","webpack:///src/app/categories/categories-edit/categories-edit.component.html","webpack:///src/app/categories/categories-form/categories-form.component.html","webpack:///src/app/categories/categories-list/categories-list.component.html","webpack:///src/app/categories/categories.page.html","webpack:///src/app/categories/categories-create/categories-create.component.scss","webpack:///src/app/categories/categories-create/categories-create.component.ts","webpack:///src/app/categories/categories-duplicate/categories-duplicate.component.scss","webpack:///src/app/categories/categories-duplicate/categories-duplicate.component.ts","webpack:///src/app/categories/categories-edit/categories-edit.component.scss","webpack:///src/app/categories/categories-edit/categories-edit.component.ts","webpack:///src/app/categories/categories-form/categories-form.component.scss","webpack:///src/app/categories/categories-form/categories-form.component.ts","webpack:///src/app/categories/categories-list/categories-list.component.scss","webpack:///src/app/categories/categories-list/categories-list.component.ts","webpack:///src/app/categories/categories-routing.module.ts","webpack:///src/app/categories/categories.module.ts","webpack:///src/app/categories/categories.page.scss","webpack:///src/app/categories/categories.page.ts","webpack:///src/app/categories/categories.service.ts"],"names":["CategoriesCreateComponent","categoriesService","route","platform","id","formValid","clearPosts","categoryForm","categoriesForm","valueChanges","subscribe","data","categoriesFormValid","next","valid","console","log","createCategory","category","selector","template","CategoriesDuplicateComponent","CategoriesEditComponent","model","snapshot","paramMap","get","editCategory","CategoriesFormComponent","toTitlecase","validationMessages","type","message","transform","event","postIds","value","length","i","push","post_ids","CategoriesListComponent","api","loading","getCategories","content","scrollToTop","routes","path","component","CategoriesPageRoutingModule","imports","forChild","exports","CategoriesPageModule","declarations","CategoriesPage","CategoriesService","alert","toast","router","navigation","categoriesUrl","categories","categoryLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"categories-categories-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/categories'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"categoriesService.storeCategory()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!categoriesService.categoriesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'CATEGORÍAS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-categories-form #categoryForm [model]=\\\"categoriesService.category\\\"></app-categories-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Categories duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/categories'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"categoriesService.updateCategory()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!categoriesService.categoriesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'CATEGORÍAS' | titlecase}}: {{ categoriesService.category?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-categories-form #categoryForm [model]=\\\"categoriesService.category\\\"></app-categories-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #categoriesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- post_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'ENTRADAS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"post_ids\\\"\\n                          id=\\\"post_ids-field\\\"\\n                          [(ngModel)]=\\\"model.posts\\\"\\n                          [items]=\\\"categoriesService.categoryLists.Post\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('ENTRADAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('ENTRADAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setPostIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.post_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"categoriesForm.form.controls['post_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end post_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"categoriesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'CATEGORÍAS' | titlecase}}\\\"\\n                 primaryLink=\\\"categories/create\\\"\\n                 primaryText=\\\"Crear {{'CATEGORÍAS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('CATEGORÍAS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.categoriesService.searchValue = ''; categoriesService.getCategories()\\\"\\n                       (keyup.enter)=\\\"categoriesService.getCategories()\\\"\\n                       [(ngModel)]=\\\"categoriesService.searchValue\\\"></ion-searchbar>\\n\\n    <ion-card>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && categoriesService.categories.length\\\">\\n            <ion-item *ngFor=\\\"let category of categoriesService.categories; let index = index\\\">\\n                <ion-label>\\n                    <h3>{{ 'NOMBRE' | titlecase }}: {{ category.name }}</h3>\\n                    <h3>{{ 'ENTRADAS' | titlecase }}:\\n                    <ng-container *ngIf=\\\"category.posts.length\\\">\\n                        <ng-container *ngFor=\\\"let post of category.posts; let last = last\\\">\\n                        <a routerLink=\\\"/posts/{{ post.id }}/edit\\\">{{ post.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                        </ng-container>\\n                    </ng-container>\\n                    </h3>\\n                </ion-label>\\n\\n\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" [routerLink]=\\\"'/categories/' + category.id + '/edit'\\\">\\n                    <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                </ion-button>\\n                <!--<ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" (click)=\\\"null\\\">\\n                    <ion-icon name=\\\"eye-outline\\\"></ion-icon>\\n                </ion-button>-->\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"danger\\\" (click)=\\\"categoriesService.deleteCategory(category.id)\\\">\\n                    <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && !categoriesService.categories.length\\\">\\n            <ion-item>\\n                <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label><h2>No se encontraron {{'CATEGORÍAS' | titlecase}}</h2></ion-label>\\n                <ion-button [routerLink]=\\\"'/categories/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                    Crear {{'CATEGORÍAS' | titlecase}}\\n                    <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n    </ion-card>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"categoriesService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"categoriesService.getCategories(categoriesService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"categoriesService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{categoriesService.meta.current_page}}\\n                /{{categoriesService.meta.last_page}} {{categoriesService.meta.from}}-{{categoriesService.meta.to}}\\n                /{{categoriesService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"categoriesService.getCategories(categoriesService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"categoriesService.meta.current_page == categoriesService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"CATEGORÍAS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/categories/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'CATEGORÍAS'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/categories/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'CATEGORÍAS' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy1jcmVhdGUvY2F0ZWdvcmllcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {CategoriesService} from \"../categories.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Category} from \"../category\";\nimport {CategoriesFormComponent} from \"../categories-form/categories-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n    selector: 'app-categories-create',\n    templateUrl: './categories-create.component.html',\n    styleUrls: ['./categories-create.component.scss']\n})\nexport class CategoriesCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('categoryForm') categoryForm: CategoriesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public categoriesService: CategoriesService,\n        public route: ActivatedRoute,\n        public platform: Platform\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.categoryForm.categoriesForm.valueChanges.subscribe((data) => {\n            this.categoriesService.categoriesFormValid.next(this.categoryForm.categoriesForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.categoriesService.createCategory();\n        this.categoriesService.category = <Category>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy1kdXBsaWNhdGUvY2F0ZWdvcmllcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories-duplicate',\n  templateUrl: './categories-duplicate.component.html',\n  styleUrls: ['./categories-duplicate.component.scss'],\n})\nexport class CategoriesDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy1lZGl0L2NhdGVnb3JpZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {CategoriesService} from \"../categories.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Category} from \"../category\";\nimport {CategoriesFormComponent} from \"../categories-form/categories-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-categories-edit',\n  templateUrl: './categories-edit.component.html',\n  styleUrls: ['./categories-edit.component.scss']\n})\nexport class CategoriesEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('categoryForm') categoryForm: CategoriesFormComponent;\n\n    public id: any = null;\n    public model: Category = null;\n\n  constructor(\n      public categoriesService: CategoriesService,\n      public route: ActivatedRoute,\n      public platform: Platform\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.categoriesService.editCategory(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.categoryForm.categoriesForm.valueChanges.subscribe((data) => {\n          this.categoriesService.categoriesFormValid.next(this.categoryForm.categoriesForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy1mb3JtL2NhdGVnb3JpZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Category} from \"../category\";\nimport {FormGroup} from \"@angular/forms\";\nimport {CategoriesService} from \"../categories.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-categories-form',\n    templateUrl: './categories-form.component.html',\n    styleUrls: ['./categories-form.component.scss']\n})\nexport class CategoriesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: Category = <Category>{};\n\n    @ViewChild('categoriesForm') categoriesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'post_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ENTRADAS') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public categoriesService: CategoriesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setPostIds\n    setPostIds(event: any) {\n        let postIds = null;\n        if (event.value.length) {\n            postIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                postIds.push(event.value[i].id);\n            }\n        }\n        this.categoriesService.category.post_ids = postIds;\n    }\n    // end setPostIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy1saXN0L2NhdGVnb3JpZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { CategoriesService} from \"../categories.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-categories-list',\n    templateUrl: './categories-list.component.html',\n    styleUrls: ['./categories-list.component.scss'],\n})\nexport class CategoriesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public categoriesService: CategoriesService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.categoriesService.getCategories();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CategoriesPage } from './categories.page';\nimport {CategoriesEditComponent} from \"./categories-edit/categories-edit.component\";\nimport {CategoriesCreateComponent} from \"./categories-create/categories-create.component\";\nimport {CategoriesListComponent} from \"./categories-list/categories-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CategoriesPage\n    },\n    {\n        path: 'list',\n        component: CategoriesListComponent\n    },\n    {\n      path: 'create',\n      component: CategoriesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: CategoriesEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class CategoriesPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {CategoriesPageRoutingModule} from './categories-routing.module';\n\nimport { CategoriesPage} from './categories.page';\nimport { CategoriesListComponent} from \"./categories-list/categories-list.component\";\nimport { CategoriesCreateComponent} from \"./categories-create/categories-create.component\";\nimport { CategoriesDuplicateComponent} from \"./categories-duplicate/categories-duplicate.component\";\nimport { CategoriesEditComponent} from \"./categories-edit/categories-edit.component\";\nimport { CategoriesFormComponent} from \"./categories-form/categories-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        CategoriesPageRoutingModule\n    ],\n    declarations: [\n        CategoriesPage,\n        CategoriesListComponent,\n        CategoriesCreateComponent,\n        CategoriesDuplicateComponent,\n        CategoriesEditComponent,\n        CategoriesFormComponent,\n    ]\n})\nexport class CategoriesPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.page.html',\n  styleUrls: ['./categories.page.scss'],\n})\nexport class CategoriesPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { Category, CategoryLists } from \"./category\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CategoriesService {\n\n    public categoriesUrl = 'categories';\n    public categoriesFormValid = new BehaviorSubject<boolean>(false);\n\n    public categories: Category[] = [];\n    public category: Category = <Category>{};\n    public categoryLists: CategoryLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getCategories(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.categoriesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.categories = res.data;\n                    this.categoryLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editCategory(id: any) {\n        this.api.get(this.categoriesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.category = res.data.model;\n                    this.categoryLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateCategory() {\n        this.api.put(this.categoriesUrl + '/' + this.category.id, {\n            model: this.category,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getCategories(1);\n            }\n        );\n    }\n\n    public createCategory() {\n        this.api.get(this.categoriesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.category = <Category>{};\n                    this.categoryLists = res.lists\n                }\n            );\n    }\n\n    public storeCategory() {\n        this.api.post(this.categoriesUrl, {\n            model: this.category,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getCategories(1);\n            }\n        );\n    }\n\n    public async deleteCategory(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.categoriesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getCategories(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"]}