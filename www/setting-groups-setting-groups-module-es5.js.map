{"version":3,"sources":["webpack:///src/app/setting-groups/setting-groups-create/setting-groups-create.component.html","webpack:///src/app/setting-groups/setting-groups-duplicate/setting-groups-duplicate.component.html","webpack:///src/app/setting-groups/setting-groups-edit/setting-groups-edit.component.html","webpack:///src/app/setting-groups/setting-groups-form/setting-groups-form.component.html","webpack:///src/app/setting-groups/setting-groups-list/setting-groups-list.component.html","webpack:///src/app/setting-groups/setting-groups-modal/setting-groups-modal.component.html","webpack:///src/app/setting-groups/setting-groups.page.html","webpack:///src/app/setting-groups/setting-groups-create/setting-groups-create.component.scss","webpack:///src/app/setting-groups/setting-groups-create/setting-groups-create.component.ts","webpack:///src/app/setting-groups/setting-groups-duplicate/setting-groups-duplicate.component.scss","webpack:///src/app/setting-groups/setting-groups-duplicate/setting-groups-duplicate.component.ts","webpack:///src/app/setting-groups/setting-groups-edit/setting-groups-edit.component.scss","webpack:///src/app/setting-groups/setting-groups-edit/setting-groups-edit.component.ts","webpack:///src/app/setting-groups/setting-groups-form/setting-groups-form.component.scss","webpack:///src/app/setting-groups/setting-groups-form/setting-groups-form.component.ts","webpack:///src/app/setting-groups/setting-groups-list/setting-groups-list.component.scss","webpack:///src/app/setting-groups/setting-groups-list/setting-groups-list.component.ts","webpack:///src/app/setting-groups/setting-groups-modal/setting-groups-modal.component.scss","webpack:///src/app/setting-groups/setting-groups-modal/setting-groups-modal.component.ts","webpack:///src/app/setting-groups/setting-groups-routing.module.ts","webpack:///src/app/setting-groups/setting-groups.module.ts","webpack:///src/app/setting-groups/setting-groups.page.scss","webpack:///src/app/setting-groups/setting-groups.page.ts","webpack:///src/app/setting-groups/setting-groups.service.ts"],"names":["SettingGroupsCreateComponent","settingGroupsService","route","platform","splitPanel","id","formValid","clearPosts","show","next","settingGroupForm","settingGroupsForm","valueChanges","subscribe","data","settingGroupsFormValid","valid","console","log","createSettingGroup","settingGroup","selector","template","SettingGroupsDuplicateComponent","SettingGroupsEditComponent","model","snapshot","paramMap","get","editSettingGroup","SettingGroupsFormComponent","toTitlecase","validationMessages","type","message","transform","event","settingIds","value","length","i","push","setting_ids","SettingGroupsListComponent","api","loading","getSettingGroups","content","scrollToTop","SettingGroupsModalComponent","modalController","navParams","table","action","onClosedData","dismiss","routes","path","component","SettingGroupsPageRoutingModule","imports","forChild","exports","SettingGroupsPageModule","declarations","SettingGroupsPage","SettingGroupsService","alert","toast","router","navigation","settingGroupsUrl","settingGroups","settingGroupLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"setting-groups-setting-groups-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/setting-groups'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"settingGroupsService.storeSettingGroup()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!settingGroupsService.settingGroupsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'AJUSTES GRUPOS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-setting-groups-form #settingGroupForm [model]=\\\"settingGroupsService.settingGroup\\\"></app-setting-groups-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  SettingGroups duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/setting-groups'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"settingGroupsService.updateSettingGroup()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!settingGroupsService.settingGroupsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'AJUSTES GRUPOS' | titlecase}}: {{ settingGroupsService.settingGroup?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-setting-groups-form #settingGroupForm [model]=\\\"settingGroupsService.settingGroup\\\"></app-setting-groups-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #settingGroupsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- setting_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'AJUSTES' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"setting_ids\\\"\\n                          id=\\\"setting_ids-field\\\"\\n                          [(ngModel)]=\\\"model.settings\\\"\\n                          [items]=\\\"settingGroupsService.settingGroupLists.Setting\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('AJUSTES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('AJUSTES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setSettingIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.setting_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"settingGroupsForm.form.controls['setting_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end setting_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"settingGroupsForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- code -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"code\\\"\\n                            id=\\\"code-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"settingGroupsForm.form.controls['code']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end code -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'AJUSTES GRUPOS' | titlecase}}\\\"\\n                 primaryLink=\\\"setting-groups/create\\\"\\n                 primaryText=\\\"Crear {{'AJUSTES GRUPOS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('AJUSTES GRUPOS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.settingGroupsService.searchValue = ''; settingGroupsService.getSettingGroups()\\\"\\n                       (keyup.enter)=\\\"settingGroupsService.getSettingGroups()\\\"\\n                       [(ngModel)]=\\\"settingGroupsService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && settingGroupsService.settingGroups?.length\\\">\\n        <ion-card *ngFor=\\\"let settingGroup of settingGroupsService.settingGroups; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ settingGroup?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ settingGroup?.code }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'AJUSTES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"settingGroup?.settings?.length\\\">\\n                                <ng-container *ngFor=\\\"let setting of settingGroup?.settings; let last = last\\\">\\n                                    <a routerLink=\\\"/settings/{{ setting?.id }}/edit\\\">{{ setting?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/setting-groups/' + settingGroup?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"settingGroupsService.deleteSettingGroup(settingGroup?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !settingGroupsService.settingGroups?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'AJUSTES GRUPOS' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/setting-groups/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'AJUSTES GRUPOS' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"settingGroupsService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"settingGroupsService.getSettingGroups(settingGroupsService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"settingGroupsService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{settingGroupsService.meta.current_page}}\\n                /{{settingGroupsService.meta.last_page}} {{settingGroupsService.meta.from}}-{{settingGroupsService.meta.to}}\\n                /{{settingGroupsService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"settingGroupsService.getSettingGroups(settingGroupsService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"settingGroupsService.meta.current_page == settingGroupsService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<!-- my-modal.page.html -->\\n<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-button (click)=\\\"closeModal()\\\">\\n                <ion-icon slot=\\\"icon-only\\\"\\n                          [name]=\\\"'arrow-back-outline'\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"success\\\"\\n                        (click)=\\\"settingGroupsService.saveSettingGroup(); closeModal()\\\"\\n                        [disabled]=\\\"!settingGroupsFormComponent?.settingGroupsForm?.valid\\\">\\n                <ion-icon slot=\\\"icon-only\\\"\\n                          [name]=\\\"'save-outline'\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{action}} Grupo de parametros</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n    <app-setting-groups-form #settingGroupsFormComponent></app-setting-groups-form>\\n\\n</ion-content>\\n\";","export default \"<app-main-header title=\\\"AJUSTES GRUPOS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/setting-groups/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'AJUSTES GRUPOS'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/setting-groups/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'AJUSTES GRUPOS' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmctZ3JvdXBzL3NldHRpbmctZ3JvdXBzLWNyZWF0ZS9zZXR0aW5nLWdyb3Vwcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {SettingGroupsService} from \"../setting-groups.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {SettingGroup} from \"../setting-group\";\nimport {SettingGroupsFormComponent} from \"../setting-groups-form/setting-groups-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-setting-groups-create',\n    templateUrl: './setting-groups-create.component.html',\n    styleUrls: ['./setting-groups-create.component.scss']\n})\nexport class SettingGroupsCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('settingGroupForm') settingGroupForm: SettingGroupsFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public settingGroupsService: SettingGroupsService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ionViewWillEnter() {\n       this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.settingGroupForm.settingGroupsForm.valueChanges.subscribe((data) => {\n            this.settingGroupsService.settingGroupsFormValid.next(this.settingGroupForm.settingGroupsForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.settingGroupsService.createSettingGroup();\n        this.settingGroupsService.settingGroup = <SettingGroup>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmctZ3JvdXBzL3NldHRpbmctZ3JvdXBzLWR1cGxpY2F0ZS9zZXR0aW5nLWdyb3Vwcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-setting-groups-duplicate',\n  templateUrl: './setting-groups-duplicate.component.html',\n  styleUrls: ['./setting-groups-duplicate.component.scss'],\n})\nexport class SettingGroupsDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmctZ3JvdXBzL3NldHRpbmctZ3JvdXBzLWVkaXQvc2V0dGluZy1ncm91cHMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {SettingGroupsService} from \"../setting-groups.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {SettingGroup} from \"../setting-group\";\nimport {SettingGroupsFormComponent} from \"../setting-groups-form/setting-groups-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-setting-groups-edit',\n  templateUrl: './setting-groups-edit.component.html',\n  styleUrls: ['./setting-groups-edit.component.scss']\n})\nexport class SettingGroupsEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('settingGroupForm') settingGroupForm: SettingGroupsFormComponent;\n\n    public id: any = null;\n    public model: SettingGroup = null;\n\n  constructor(\n      public settingGroupsService: SettingGroupsService,\n      public route: ActivatedRoute,\n      public platform: Platform,\n      public splitPanel: SplitPanelService,\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.settingGroupsService.editSettingGroup(this.id);\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n  ngAfterViewInit() {\n      this.settingGroupForm.settingGroupsForm.valueChanges.subscribe((data) => {\n          this.settingGroupsService.settingGroupsFormValid.next(this.settingGroupForm.settingGroupsForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmctZ3JvdXBzL3NldHRpbmctZ3JvdXBzLWZvcm0vc2V0dGluZy1ncm91cHMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {SettingGroup} from \"../setting-group\";\nimport {FormGroup} from \"@angular/forms\";\nimport {SettingGroupsService} from \"../setting-groups.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-setting-groups-form',\n    templateUrl: './setting-groups-form.component.html',\n    styleUrls: ['./setting-groups-form.component.scss']\n})\nexport class SettingGroupsFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: SettingGroup = <SettingGroup>{};\n\n    @ViewChild('settingGroupsForm') settingGroupsForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'code': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\n        ],\n        'setting_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('AJUSTES') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public settingGroupsService: SettingGroupsService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setSettingIds\n    setSettingIds(event: any) {\n        let settingIds = null;\n        if (event.value.length) {\n            settingIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                settingIds.push(event.value[i].id);\n            }\n        }\n        this.settingGroupsService.settingGroup.setting_ids = settingIds;\n    }\n    // end setSettingIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmctZ3JvdXBzL3NldHRpbmctZ3JvdXBzLWxpc3Qvc2V0dGluZy1ncm91cHMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { SettingGroupsService} from \"../setting-groups.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-setting-groups-list',\n    templateUrl: './setting-groups-list.component.html',\n    styleUrls: ['./setting-groups-list.component.scss'],\n})\nexport class SettingGroupsListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public settingGroupsService: SettingGroupsService,\n        public api: ApiService,\n        public loading: LoadingService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.settingGroupsService.getSettingGroups();\n    }\n\n    ionViewWillEnter() {\n     this.splitPanel.show.next(true);\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmctZ3JvdXBzL3NldHRpbmctZ3JvdXBzLW1vZGFsL3NldHRpbmctZ3JvdXBzLW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {ModalController, NavParams} from \"@ionic/angular\";\nimport {SettingGroupsFormComponent} from \"../setting-groups-form/setting-groups-form.component\";\nimport {SettingGroupsService} from \"../setting-groups.service\";\n\n@Component({\n  selector: 'app-setting-groups-modal',\n  templateUrl: './setting-groups-modal.component.html',\n  styleUrls: ['./setting-groups-modal.component.scss'],\n})\nexport class SettingGroupsModalComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('settingGroupsFormComponent') settingGroupsFormComponent: SettingGroupsFormComponent;\n\n  action: string;\n\n  constructor(\n      private modalController: ModalController,\n      private navParams: NavParams,\n      public settingGroupsService: SettingGroupsService\n  ) { }\n\n  ngOnInit() {\n    console.table(this.navParams);\n    this.action = this.navParams.data.action;\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  async closeModal() {\n    const onClosedData: string = \"Wrapped Up!\";\n    await this.modalController.dismiss(onClosedData);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingGroupsPage } from './setting-groups.page';\nimport {SettingGroupsEditComponent} from \"./setting-groups-edit/setting-groups-edit.component\";\nimport {SettingGroupsCreateComponent} from \"./setting-groups-create/setting-groups-create.component\";\nimport {SettingGroupsListComponent} from \"./setting-groups-list/setting-groups-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SettingGroupsPage\n    },\n    {\n        path: 'list',\n        component: SettingGroupsListComponent\n    },\n    {\n      path: 'create',\n      component: SettingGroupsCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: SettingGroupsEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class SettingGroupsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {SettingGroupsPageRoutingModule} from './setting-groups-routing.module';\n\nimport { SettingGroupsPage} from './setting-groups.page';\nimport { SettingGroupsListComponent} from \"./setting-groups-list/setting-groups-list.component\";\nimport { SettingGroupsCreateComponent} from \"./setting-groups-create/setting-groups-create.component\";\nimport { SettingGroupsDuplicateComponent} from \"./setting-groups-duplicate/setting-groups-duplicate.component\";\nimport { SettingGroupsEditComponent} from \"./setting-groups-edit/setting-groups-edit.component\";\nimport { SettingGroupsFormComponent} from \"./setting-groups-form/setting-groups-form.component\";\nimport {SettingGroupsModalComponent} from \"./setting-groups-modal/setting-groups-modal.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        SettingGroupsPageRoutingModule\n    ],\n    declarations: [\n        SettingGroupsPage,\n        SettingGroupsListComponent,\n        SettingGroupsCreateComponent,\n        SettingGroupsDuplicateComponent,\n        SettingGroupsEditComponent,\n        SettingGroupsFormComponent,\n        SettingGroupsModalComponent,\n    ]\n})\nexport class SettingGroupsPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmctZ3JvdXBzL3NldHRpbmctZ3JvdXBzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-setting-groups',\n  templateUrl: './setting-groups.page.html',\n  styleUrls: ['./setting-groups.page.scss'],\n})\nexport class SettingGroupsPage implements OnInit {\n\n  constructor(\n    public splitPanel: SplitPanelService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { SettingGroup, SettingGroupLists } from \"./setting-group\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SettingGroupsService {\n\n    public settingGroupsUrl = 'setting-groups';\n    public settingGroupsFormValid = new BehaviorSubject<boolean>(false);\n\n    public settingGroups: SettingGroup[] = [];\n    public settingGroup: SettingGroup = <SettingGroup>{};\n    public settingGroupLists: SettingGroupLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getSettingGroups(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.settingGroupsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.settingGroups = res.data;\n                    this.settingGroupLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editSettingGroup(id: any) {\n        this.api.get(this.settingGroupsUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.settingGroup = res.data.model;\n                    this.settingGroupLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateSettingGroup() {\n        this.api.put(this.settingGroupsUrl + '/' + this.settingGroup.id, {\n            model: this.settingGroup,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getSettingGroups(1);\n            }\n        );\n    }\n\n    public createSettingGroup() {\n        this.api.get(this.settingGroupsUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.settingGroup = <SettingGroup>{};\n                    this.settingGroupLists = res.lists\n                }\n            );\n    }\n\n    public storeSettingGroup() {\n        this.api.post(this.settingGroupsUrl, {\n            model: this.settingGroup,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getSettingGroups(1);\n            }\n        );\n    }\n\n    public async deleteSettingGroup(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.settingGroupsUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getSettingGroups(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n    saveSettingGroup() {\n\n    }\n\n}\n"]}