{"version":3,"sources":["webpack:///src/app/oper-machines/oper-machines-create/oper-machines-create.component.html","webpack:///src/app/oper-machines/oper-machines-duplicate/oper-machines-duplicate.component.html","webpack:///src/app/oper-machines/oper-machines-edit/oper-machines-edit.component.html","webpack:///src/app/oper-machines/oper-machines-form/oper-machines-form.component.html","webpack:///src/app/oper-machines/oper-machines-list/oper-machines-list.component.html","webpack:///src/app/oper-machines/oper-machines.page.html","webpack:///src/app/oper-machines/oper-machines-create/oper-machines-create.component.scss","webpack:///src/app/oper-machines/oper-machines-create/oper-machines-create.component.ts","webpack:///src/app/oper-machines/oper-machines-duplicate/oper-machines-duplicate.component.scss","webpack:///src/app/oper-machines/oper-machines-duplicate/oper-machines-duplicate.component.ts","webpack:///src/app/oper-machines/oper-machines-edit/oper-machines-edit.component.scss","webpack:///src/app/oper-machines/oper-machines-edit/oper-machines-edit.component.ts","webpack:///src/app/oper-machines/oper-machines-form/oper-machines-form.component.scss","webpack:///src/app/oper-machines/oper-machines-form/oper-machines-form.component.ts","webpack:///src/app/oper-machines/oper-machines-list/oper-machines-list.component.scss","webpack:///src/app/oper-machines/oper-machines-list/oper-machines-list.component.ts","webpack:///src/app/oper-machines/oper-machines-routing.module.ts","webpack:///src/app/oper-machines/oper-machines.module.ts","webpack:///src/app/oper-machines/oper-machines.page.scss","webpack:///src/app/oper-machines/oper-machines.page.ts","webpack:///src/app/oper-machines/oper-machines.service.ts"],"names":["OperMachinesCreateComponent","operMachinesService","route","platform","splitPanel","id","formValid","clearPosts","show","next","operMachineForm","operMachinesForm","valueChanges","subscribe","data","operMachinesFormValid","valid","console","log","createOperMachine","operMachine","selector","template","OperMachinesDuplicateComponent","OperMachinesEditComponent","model","snapshot","paramMap","get","editOperMachine","OperMachinesFormComponent","toTitlecase","validationMessages","type","message","transform","event","hous_unit_area_id","value","oper_contractor_id","operPreventiveMaintenanceIds","length","i","push","oper_preventive_maintenance_ids","operReplacementIds","oper_replacement_ids","OperMachinesListComponent","api","loading","getOperMachines","content","scrollToTop","routes","path","title","roles","component","OperMachinesPageRoutingModule","imports","forChild","exports","OperMachinesPageModule","declarations","OperMachinesPage","OperMachinesService","alert","toast","router","navigation","operMachinesUrl","operMachines","operMachineLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"oper-machines-oper-machines-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-machines'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operMachinesService.storeOperMachine()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operMachinesService.operMachinesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'OPERATIVIDAD MAQUINARIA' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-oper-machines-form #operMachineForm [model]=\\\"operMachinesService.operMachine\\\"></app-oper-machines-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  OperMachines duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-machines'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operMachinesService.updateOperMachine()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operMachinesService.operMachinesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'OPERATIVIDAD MAQUINARIA' | titlecase}}: {{ operMachinesService.operMachine?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-oper-machines-form #operMachineForm [model]=\\\"operMachinesService.operMachine\\\"></app-oper-machines-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #operMachinesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- hous_unit_area_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'UNIDADESHABITACIONALESAREA' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"hous_unit_area_id\\\"\\n                          id=\\\"hous_unit_area_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.hous_unit_area\\\"\\n                          [items]=\\\"operMachinesService.operMachineLists.HousUnitArea\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('UNIDADES HABITACIONALES AREAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('UNIDADES HABITACIONALES AREAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setHousUnitAreaId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.hous_unit_area_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['hous_unit_area_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end hous_unit_area_id -->\\n\\n\\n    <!-- oper_contractor_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'CONTRATISTASOPERATIVO' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_contractor_id\\\"\\n                          id=\\\"oper_contractor_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.oper_contractor\\\"\\n                          [items]=\\\"operMachinesService.operMachineLists.OperContractor\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CONTRATISTAS OPERATIVOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('CONTRATISTAS OPERATIVOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperContractorId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_contractor_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['oper_contractor_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_contractor_id -->\\n\\n\\n    <!-- oper_preventive_maintenance_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'OPERATIVIDAD MTTO PREVENTIVOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_preventive_maintenance_ids\\\"\\n                          id=\\\"oper_preventive_maintenance_ids-field\\\"\\n                          [(ngModel)]=\\\"model.oper_preventive_maintenances\\\"\\n                          [items]=\\\"operMachinesService.operMachineLists.OperPreventiveMaintenance\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('OPERATIVIDAD MTTO PREVENTIVOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('OPERATIVIDAD MTTO PREVENTIVOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperPreventiveMaintenanceIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_preventive_maintenance_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['oper_preventive_maintenance_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_preventive_maintenance_ids -->\\n\\n\\n    <!-- oper_replacement_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'OPERATIVIDAD REPUESTOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_replacement_ids\\\"\\n                          id=\\\"oper_replacement_ids-field\\\"\\n                          [(ngModel)]=\\\"model.oper_replacements\\\"\\n                          [items]=\\\"operMachinesService.operMachineLists.OperReplacement\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('OPERATIVIDAD REPUESTOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('OPERATIVIDAD REPUESTOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperReplacementIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_replacement_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['oper_replacement_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_replacement_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- contract_expiration_date -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'FECHA VENCIMIENTO CONTRATO' | titlecase }}</ion-label>\\n                <ion-datetime name=\\\"contract_expiration_date\\\"\\n                              id=\\\"contract_expiration_date-field\\\"\\n                              [doneText]=\\\"'Seleccionar'\\\"\\n                              [cancelText]=\\\"'Cancelar'\\\"\\n                              [(ngModel)]=\\\"model.contract_expiration_date\\\"\\n                              displayFormat=\\\"DD/MM/YYYY\\\"></ion-datetime>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.contract_expiration_date\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['contract_expiration_date']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end contract_expiration_date -->\\n\\n\\n            <!-- contract_monthly_price -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'VALOR MENSUAL' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.contract_monthly_price\\\"\\n                            type=\\\"number\\\"\\n                            name=\\\"contract_monthly_price\\\"\\n                            id=\\\"contract_monthly_price-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.contract_monthly_price\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['contract_monthly_price']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end contract_monthly_price -->\\n\\n\\n            <!-- monthly_periodicity -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'PERIODICIDAD MENSUAL' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.monthly_periodicity\\\"\\n                            type=\\\"number\\\"\\n                            name=\\\"monthly_periodicity\\\"\\n                            id=\\\"monthly_periodicity-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.monthly_periodicity\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['monthly_periodicity']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end monthly_periodicity -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'OPERATIVIDAD MAQUINARIA' | titlecase}}\\\"\\n                 primaryLink=\\\"oper-machines/create\\\"\\n                 primaryText=\\\"Crear {{'OPERATIVIDAD MAQUINARIA' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('OPERATIVIDAD MAQUINARIA' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.operMachinesService.searchValue = ''; operMachinesService.getOperMachines()\\\"\\n                       (keyup.enter)=\\\"operMachinesService.getOperMachines()\\\"\\n                       [(ngModel)]=\\\"operMachinesService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operMachinesService.operMachines?.length\\\">\\n        <ion-card *ngFor=\\\"let operMachine of operMachinesService.operMachines; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operMachine?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'FECHA VENCIMIENTO CONTRATO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operMachine?.contract_expiration_date | dateFormat:'DD/MM/YYYY' }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'VALOR MENSUAL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operMachine?.contract_monthly_price }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PERIODICIDAD MENSUAL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operMachine?.monthly_periodicity }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'UNIDADES HABITACIONALES AREAS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/hous-unit-areas/{{ operMachine?.hous_unit_area?.id }}/edit\\\">{{ operMachine?.hous_unit_area?.name }}</a></div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CONTRATISTAS OPERATIVOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/oper-contractors/{{ operMachine?.oper_contractor?.id }}/edit\\\">{{ operMachine?.oper_contractor?.name }}</a></div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'OPERATIVIDAD MTTO PREVENTIVOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"operMachine?.oper_preventive_maintenances?.length\\\">\\n                                <ng-container *ngFor=\\\"let operPreventiveMaintenance of operMachine?.oper_preventive_maintenances; let last = last\\\">\\n                                    <a routerLink=\\\"/oper-preventive-maintenances/{{ operPreventiveMaintenance?.id }}/edit\\\">{{ operPreventiveMaintenance?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'OPERATIVIDAD REPUESTOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"operMachine?.oper_replacements?.length\\\">\\n                                <ng-container *ngFor=\\\"let operReplacement of operMachine?.oper_replacements; let last = last\\\">\\n                                    <a routerLink=\\\"/oper-replacements/{{ operReplacement?.id }}/edit\\\">{{ operReplacement?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/oper-machines/' + operMachine?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"operMachinesService.deleteOperMachine(operMachine?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operMachinesService.operMachines?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'OPERATIVIDAD MAQUINARIA' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/oper-machines/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'OPERATIVIDAD MAQUINARIA' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"operMachinesService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"operMachinesService.getOperMachines(operMachinesService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"operMachinesService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{operMachinesService.meta.current_page}}\\n                /{{operMachinesService.meta.last_page}} {{operMachinesService.meta.from}}-{{operMachinesService.meta.to}}\\n                /{{operMachinesService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"operMachinesService.getOperMachines(operMachinesService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"operMachinesService.meta.current_page == operMachinesService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"OPERATIVIDAD MAQUINARIA\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-machines/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'OPERATIVIDAD MAQUINARIA'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-machines/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'OPERATIVIDAD MAQUINARIA' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1jcmVhdGUvb3Blci1tYWNoaW5lcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {OperMachinesService} from \"../oper-machines.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperMachine} from \"../oper-machine\";\nimport {OperMachinesFormComponent} from \"../oper-machines-form/oper-machines-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-oper-machines-create',\n    templateUrl: './oper-machines-create.component.html',\n    styleUrls: ['./oper-machines-create.component.scss']\n})\nexport class OperMachinesCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operMachineForm') operMachineForm: OperMachinesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public operMachinesService: OperMachinesService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ionViewWillEnter() {\n       this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.operMachineForm.operMachinesForm.valueChanges.subscribe((data) => {\n            this.operMachinesService.operMachinesFormValid.next(this.operMachineForm.operMachinesForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.operMachinesService.createOperMachine();\n        this.operMachinesService.operMachine = <OperMachine>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1kdXBsaWNhdGUvb3Blci1tYWNoaW5lcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-oper-machines-duplicate',\n  templateUrl: './oper-machines-duplicate.component.html',\n  styleUrls: ['./oper-machines-duplicate.component.scss'],\n})\nexport class OperMachinesDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1lZGl0L29wZXItbWFjaGluZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {OperMachinesService} from \"../oper-machines.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperMachine} from \"../oper-machine\";\nimport {OperMachinesFormComponent} from \"../oper-machines-form/oper-machines-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-oper-machines-edit',\n  templateUrl: './oper-machines-edit.component.html',\n  styleUrls: ['./oper-machines-edit.component.scss']\n})\nexport class OperMachinesEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operMachineForm') operMachineForm: OperMachinesFormComponent;\n\n    public id: any = null;\n    public model: OperMachine = null;\n\n  constructor(\n      public operMachinesService: OperMachinesService,\n      public route: ActivatedRoute,\n      public platform: Platform,\n      public splitPanel: SplitPanelService,\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.operMachinesService.editOperMachine(this.id);\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n  ngAfterViewInit() {\n      this.operMachineForm.operMachinesForm.valueChanges.subscribe((data) => {\n          this.operMachinesService.operMachinesFormValid.next(this.operMachineForm.operMachinesForm.valid);\n      });\n  }\n\n}\n","export default \"/* generated section */\\n/* end generated section */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3Blci1tYWNoaW5lcy9vcGVyLW1hY2hpbmVzLWZvcm0vb3Blci1tYWNoaW5lcy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFBO0FBRUEsMEJBQUEiLCJmaWxlIjoic3JjL2FwcC9vcGVyLW1hY2hpbmVzL29wZXItbWFjaGluZXMtZm9ybS9vcGVyLW1hY2hpbmVzLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnZW5lcmF0ZWQgc2VjdGlvbiAqL1xuXG4vKiBlbmQgZ2VuZXJhdGVkIHNlY3Rpb24gKi9cbiJdfQ== */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {OperMachine} from \"../oper-machine\";\nimport {FormGroup} from \"@angular/forms\";\nimport {OperMachinesService} from \"../oper-machines.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-oper-machines-form',\n    templateUrl: './oper-machines-form.component.html',\n    styleUrls: ['./oper-machines-form.component.scss']\n})\nexport class OperMachinesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: OperMachine = <OperMachine>{};\n\n    @ViewChild('operMachinesForm') operMachinesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'hous_unit_area_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('AREA') + ' es obligatorio.'},\n        ],\n        'oper_contractor_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CONTRATISTA') + ' es obligatorio.'},\n        ],\n        'contract_expiration_date': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('FECHA VENCIMIENTO CONTRATO') + ' es obligatorio.'},\n        ],\n        'contract_monthly_price': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('VALOR MENSUAL') + ' es obligatorio.'},\n        ],\n        'monthly_periodicity': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERIODICIDAD MENSUAL') + ' es obligatorio.'},\n        ],\n        'oper_preventive_maintenance_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('OPERATIVIDAD MTTO PREVENTIVOS') + ' es obligatorio.'},\n        ],\n        'oper_replacement_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('OPERATIVIDAD REPUESTOS') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public operMachinesService: OperMachinesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setHousUnitAreaId\n\n    setHousUnitAreaId(event: any) {\n        this.operMachinesService.operMachine.hous_unit_area_id = event.value ? event.value.id : null;\n    }\n    // end setHousUnitAreaId\n\n\n    // set setOperContractorId\n\n    setOperContractorId(event: any) {\n        this.operMachinesService.operMachine.oper_contractor_id = event.value ? event.value.id : null;\n    }\n    // end setOperContractorId\n\n\n    // set setOperPreventiveMaintenanceIds\n    setOperPreventiveMaintenanceIds(event: any) {\n        let operPreventiveMaintenanceIds = null;\n        if (event.value.length) {\n            operPreventiveMaintenanceIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                operPreventiveMaintenanceIds.push(event.value[i].id);\n            }\n        }\n        this.operMachinesService.operMachine.oper_preventive_maintenance_ids = operPreventiveMaintenanceIds;\n    }\n    // end setOperPreventiveMaintenanceIds\n\n\n    // set setOperReplacementIds\n    setOperReplacementIds(event: any) {\n        let operReplacementIds = null;\n        if (event.value.length) {\n            operReplacementIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                operReplacementIds.push(event.value[i].id);\n            }\n        }\n        this.operMachinesService.operMachine.oper_replacement_ids = operReplacementIds;\n    }\n    // end setOperReplacementIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1saXN0L29wZXItbWFjaGluZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { OperMachinesService} from \"../oper-machines.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-oper-machines-list',\n    templateUrl: './oper-machines-list.component.html',\n    styleUrls: ['./oper-machines-list.component.scss'],\n})\nexport class OperMachinesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public operMachinesService: OperMachinesService,\n        public api: ApiService,\n        public loading: LoadingService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.operMachinesService.getOperMachines();\n    }\n\n    ionViewWillEnter() {\n     this.splitPanel.show.next(true);\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperMachinesPage } from './oper-machines.page';\nimport {OperMachinesEditComponent} from \"./oper-machines-edit/oper-machines-edit.component\";\nimport {OperMachinesCreateComponent} from \"./oper-machines-create/oper-machines-create.component\";\nimport {OperMachinesListComponent} from \"./oper-machines-list/oper-machines-list.component\";\n\nconst routes: Routes = [\n// generated section\n    {\n        path: '',\n        data: {\n            title: 'OPERATIVIDAD MAQUINARIA',\n            roles: ['admin'],\n            // permissions: []\n        },\n        component: OperMachinesPage\n    },\n    {\n        path: 'list',\n        data: {\n            title: 'OPERATIVIDAD MAQUINARIA',\n            roles: ['admin'],\n            // permissions: []\n        },\n        component: OperMachinesListComponent\n    },\n    {\n      path: 'create',\n      data: {\n          title: 'OPERATIVIDAD MAQUINARIA',\n          roles: ['admin'],\n          // permissions: []\n      },\n      component: OperMachinesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        data: {\n            title: 'OPERATIVIDAD MAQUINARIA',\n            roles: ['admin'],\n            // permissions: []\n        },\n        component: OperMachinesEditComponent\n    },\n];\n// end generated section\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class OperMachinesPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {OperMachinesPageRoutingModule} from './oper-machines-routing.module';\n\nimport { OperMachinesPage} from './oper-machines.page';\nimport { OperMachinesListComponent} from \"./oper-machines-list/oper-machines-list.component\";\nimport { OperMachinesCreateComponent} from \"./oper-machines-create/oper-machines-create.component\";\nimport { OperMachinesDuplicateComponent} from \"./oper-machines-duplicate/oper-machines-duplicate.component\";\nimport { OperMachinesEditComponent} from \"./oper-machines-edit/oper-machines-edit.component\";\nimport { OperMachinesFormComponent} from \"./oper-machines-form/oper-machines-form.component\";\n\n@NgModule({\n    imports: [\n    // imports generated section\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        OperMachinesPageRoutingModule\n    // end imports generated section\n    ],\n    declarations: [\n    // declarations generated section\n        OperMachinesPage,\n        OperMachinesListComponent,\n        OperMachinesCreateComponent,\n        OperMachinesDuplicateComponent,\n        OperMachinesEditComponent,\n        OperMachinesFormComponent,\n    // end declarations generated section\n    ]\n})\nexport class OperMachinesPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-oper-machines',\n  templateUrl: './oper-machines.page.html',\n  styleUrls: ['./oper-machines.page.scss'],\n})\nexport class OperMachinesPage implements OnInit {\n\n  constructor(\n    public splitPanel: SplitPanelService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { OperMachine, OperMachineLists } from \"./oper-machine\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OperMachinesService {\n\n    public operMachinesUrl = 'oper-machines';\n    public operMachinesFormValid = new BehaviorSubject<boolean>(false);\n\n    public operMachines: OperMachine[] = [];\n    public operMachine: OperMachine = <OperMachine>{};\n    public operMachineLists: OperMachineLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n// generated section\n    public getOperMachines(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.operMachinesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.operMachines = res.data;\n                    this.operMachineLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editOperMachine(id: any) {\n        this.api.get(this.operMachinesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.operMachine = res.data.model;\n                    this.operMachineLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateOperMachine() {\n        this.api.put(this.operMachinesUrl + '/' + this.operMachine.id, {\n            model: this.operMachine,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperMachines(1);\n            }\n        );\n    }\n\n    public createOperMachine() {\n        this.api.get(this.operMachinesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.operMachine = <OperMachine>{};\n                    this.operMachineLists = res.lists\n                }\n            );\n    }\n\n    public storeOperMachine() {\n        this.api.post(this.operMachinesUrl, {\n            model: this.operMachine,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperMachines(1);\n            }\n        );\n    }\n\n    public async deleteOperMachine(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.operMachinesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getOperMachines(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n// end generated section\n\n}\n"]}