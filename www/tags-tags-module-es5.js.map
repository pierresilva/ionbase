{"version":3,"sources":["webpack:///src/app/tags/tags-create/tags-create.component.html","webpack:///src/app/tags/tags-duplicate/tags-duplicate.component.html","webpack:///src/app/tags/tags-edit/tags-edit.component.html","webpack:///src/app/tags/tags-form/tags-form.component.html","webpack:///src/app/tags/tags-list/tags-list.component.html","webpack:///src/app/tags/tags.page.html","webpack:///src/app/tags/tags-create/tags-create.component.scss","webpack:///src/app/tags/tags-create/tags-create.component.ts","webpack:///src/app/tags/tags-duplicate/tags-duplicate.component.scss","webpack:///src/app/tags/tags-duplicate/tags-duplicate.component.ts","webpack:///src/app/tags/tags-edit/tags-edit.component.scss","webpack:///src/app/tags/tags-edit/tags-edit.component.ts","webpack:///src/app/tags/tags-form/tags-form.component.scss","webpack:///src/app/tags/tags-form/tags-form.component.ts","webpack:///src/app/tags/tags-list/tags-list.component.scss","webpack:///src/app/tags/tags-list/tags-list.component.ts","webpack:///src/app/tags/tags-routing.module.ts","webpack:///src/app/tags/tags.module.ts","webpack:///src/app/tags/tags.page.scss","webpack:///src/app/tags/tags.page.ts","webpack:///src/app/tags/tags.service.ts"],"names":["TagsCreateComponent","tagsService","route","id","formValid","clearPosts","tagForm","tagsForm","valueChanges","subscribe","data","tagsFormValid","next","valid","console","log","createTag","tag","selector","template","TagsDuplicateComponent","TagsEditComponent","model","snapshot","paramMap","get","editTag","TagsFormComponent","toTitlecase","validationMessages","type","message","transform","event","postIds","value","length","i","push","post_ids","TagsListComponent","api","loading","getTags","content","scrollToTop","routes","path","component","TagsPageRoutingModule","imports","forChild","exports","TagsPageModule","declarations","TagsPage","TagsService","alert","toast","router","navigation","tagsUrl","tags","tagLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","post","posts","present","back","confirmation","confirm","providedIn"],"mappings":"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","file":"tags-tags-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/tags'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"tagsService.storeTag()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"outline\\\"\\n                        [disabled]=\\\"!tagsService.tagsFormValid.value\\\"> Guardar\\n                <ion-icon slot=\\\"icon-only\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'ETIQUETAS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-tags-form #tagForm [model]=\\\"tagsService.tag\\\"></app-tags-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Tags duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/tags'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"tagsService.updateTag()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"outline\\\"\\n                        [disabled]=\\\"!tagsService.tagsFormValid.value\\\"> Guardar\\n                <ion-icon slot=\\\"icon-only\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'ETIQUETAS' | titlecase}}: {{ tagsService.tag?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-tags-form #tagForm [model]=\\\"tagsService.tag\\\"></app-tags-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #tagsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- post_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'ENTRADAS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"post_ids\\\"\\n                          id=\\\"post_ids-field\\\"\\n                          [(ngModel)]=\\\"model.posts\\\"\\n                          [items]=\\\"tagsService.tagLists.Post\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('ENTRADAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('ENTRADAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setPostIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.post_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"tagsForm.form.controls['post_ids']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end post_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"tagsForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n</form>\\n\\n<pre>\\n{{ model | json }}\\n</pre>\\n\";","export default \"<app-main-header title=\\\"{{'ETIQUETAS' | titlecase}}\\\"\\n                 primaryLink=\\\"tags/create\\\"\\n                 primaryText=\\\"Crear {{'ETIQUETAS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('ETIQUETAS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.tagsService.searchValue = ''; tagsService.getTags()\\\"\\n                       (keyup.enter)=\\\"tagsService.getTags()\\\"\\n                       [(ngModel)]=\\\"tagsService.searchValue\\\"></ion-searchbar>\\n\\n    <ion-card>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && tagsService.tags.length\\\">\\n            <ion-item *ngFor=\\\"let tag of tagsService.tags; let index = index\\\">\\n                <ion-label>\\n                    <h3>{{ 'NOMBRE' | titlecase }}: {{ tag.name }}</h3>\\n                    <h3>{{ 'ENTRADAS' | titlecase }}:\\n                    <ng-container *ngIf=\\\"tag.posts.length\\\">\\n                        <ng-container *ngFor=\\\"let post of tag.posts; let last = last\\\">\\n                        <a routerLink=\\\"/posts/{{ post.id }}/edit\\\">{{ post.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                        </ng-container>\\n                    </ng-container>\\n                    </h3>\\n                </ion-label>\\n\\n\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" [routerLink]=\\\"'/tags/' + tag.id + '/edit'\\\">\\n                    <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                </ion-button>\\n                <!--<ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" (click)=\\\"null\\\">\\n                    <ion-icon name=\\\"eye-outline\\\"></ion-icon>\\n                </ion-button>-->\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"danger\\\" (click)=\\\"tagsService.deleteTag(tag.id)\\\">\\n                    <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && !tagsService.tags.length\\\">\\n            <ion-item>\\n                <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label><h2>No se encontraron {{'ETIQUETAS' | titlecase}}</h2></ion-label>\\n                <ion-button [routerLink]=\\\"'/tags/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                    Crear {{'ETIQUETAS' | titlecase}}\\n                    <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n    </ion-card>\\n\\n</ion-content>\\n\\n<ion-footer>\\n    <ion-row *ngIf=\\\"tagsService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"tagsService.getTags(tagsService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"tagsService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{tagsService.meta.current_page}}\\n                /{{tagsService.meta.last_page}} {{tagsService.meta.from}}-{{tagsService.meta.to}}\\n                /{{tagsService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"tagsService.getTags(tagsService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"tagsService.meta.current_page == tagsService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"ETIQUETAS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhZ3MvdGFncy1jcmVhdGUvdGFncy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {TagsService} from \"../tags.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Tag} from \"../tag\";\nimport {TagsFormComponent} from \"../tags-form/tags-form.component\";\n\n@Component({\n    selector: 'app-tags-create',\n    templateUrl: './tags-create.component.html',\n    styleUrls: ['./tags-create.component.scss']\n})\nexport class TagsCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('tagForm') tagForm: TagsFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public tagsService: TagsService,\n        public route: ActivatedRoute\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.tagForm.tagsForm.valueChanges.subscribe((data) => {\n            this.tagsService.tagsFormValid.next(this.tagForm.tagsForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.tagsService.createTag();\n        this.tagsService.tag = <Tag>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhZ3MvdGFncy1kdXBsaWNhdGUvdGFncy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tags-duplicate',\n  templateUrl: './tags-duplicate.component.html',\n  styleUrls: ['./tags-duplicate.component.scss'],\n})\nexport class TagsDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhZ3MvdGFncy1lZGl0L3RhZ3MtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {TagsService} from \"../tags.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Tag} from \"../tag\";\nimport {TagsFormComponent} from \"../tags-form/tags-form.component\";\n\n@Component({\n  selector: 'app-tags-edit',\n  templateUrl: './tags-edit.component.html',\n  styleUrls: ['./tags-edit.component.scss']\n})\nexport class TagsEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('tagForm') tagForm: TagsFormComponent;\n\n    public id: any = null;\n    public model: Tag = null;\n\n  constructor(\n      public tagsService: TagsService,\n      public route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.tagsService.editTag(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.tagForm.tagsForm.valueChanges.subscribe((data) => {\n          this.tagsService.tagsFormValid.next(this.tagForm.tagsForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhZ3MvdGFncy1mb3JtL3RhZ3MtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Tag} from \"../tag\";\nimport {FormGroup} from \"@angular/forms\";\nimport {TagsService} from \"../tags.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-tags-form',\n    templateUrl: './tags-form.component.html',\n    styleUrls: ['./tags-form.component.scss']\n})\nexport class TagsFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: Tag = <Tag>{};\n\n    @ViewChild('tagsForm') tagsForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'post_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ENTRADAS') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public tagsService: TagsService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setPostIds\n    setPostIds(event: any) {\n        let postIds = null;\n        if (event.value.length) {\n            postIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                postIds.push(event.value[i].id);\n            }\n        }\n        this.tagsService.tag.post_ids = postIds;\n    }\n    // end setPostIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhZ3MvdGFncy1saXN0L3RhZ3MtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { TagsService} from \"../tags.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-tags-list',\n    templateUrl: './tags-list.component.html',\n    styleUrls: ['./tags-list.component.scss'],\n})\nexport class TagsListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public tagsService: TagsService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.tagsService.getTags();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TagsPage } from './tags.page';\nimport {TagsEditComponent} from \"./tags-edit/tags-edit.component\";\nimport {TagsCreateComponent} from \"./tags-create/tags-create.component\";\nimport {TagsListComponent} from \"./tags-list/tags-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: TagsListComponent\n    },\n    {\n      path: 'create',\n      component: TagsCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: TagsEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class TagsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {TagsPageRoutingModule} from './tags-routing.module';\n\nimport { TagsPage} from './tags.page';\nimport { TagsListComponent} from \"./tags-list/tags-list.component\";\nimport { TagsCreateComponent} from \"./tags-create/tags-create.component\";\nimport { TagsDuplicateComponent} from \"./tags-duplicate/tags-duplicate.component\";\nimport { TagsEditComponent} from \"./tags-edit/tags-edit.component\";\nimport { TagsFormComponent} from \"./tags-form/tags-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        TagsPageRoutingModule\n    ],\n    declarations: [\n        TagsPage,\n        TagsListComponent,\n        TagsCreateComponent,\n        TagsDuplicateComponent,\n        TagsEditComponent,\n        TagsFormComponent,\n    ]\n})\nexport class TagsPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhZ3MvdGFncy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tags',\n  templateUrl: './tags.page.html',\n  styleUrls: ['./tags.page.scss'],\n})\nexport class TagsPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { Tag, TagLists } from \"./tag\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TagsService {\n\n    public tagsUrl = 'tags';\n    public tagsFormValid = new BehaviorSubject<boolean>(false);\n\n    public tags: Tag[] = [];\n    public tag: Tag = <Tag>{};\n    public tagLists: TagLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getTags(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.tagsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.tags = res.data;\n                    this.tagLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editTag(id: any) {\n        this.api.get(this.tagsUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.tag = res.data.model;\n                    this.tagLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateTag() {\n        this.api.put(this.tagsUrl + '/' + this.tag.id, {\n            model: this.tag,\n            pivots: {\n                post: this.tag.posts,\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getTags(1);\n            }\n        );\n    }\n\n    public createTag() {\n        this.api.get(this.tagsUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.tag = <Tag>{};\n                    this.tagLists = res.lists\n                }\n            );\n    }\n\n    public storeTag() {\n        this.api.post(this.tagsUrl, {\n            model: this.tag,\n            pivots: {\n                post: this.tag.posts,\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getTags(1);\n            }\n        );\n    }\n\n    public async deleteTag(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.tagsUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getTags(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"]}