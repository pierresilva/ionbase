{"version":3,"sources":["webpack:///src/app/images/images-create/images-create.component.html","webpack:///src/app/images/images-duplicate/images-duplicate.component.html","webpack:///src/app/images/images-edit/images-edit.component.html","webpack:///src/app/images/images-form/images-form.component.html","webpack:///src/app/images/images-list/images-list.component.html","webpack:///src/app/images/images.page.html","webpack:///src/app/images/images-create/images-create.component.scss","webpack:///src/app/images/images-create/images-create.component.ts","webpack:///src/app/images/images-duplicate/images-duplicate.component.scss","webpack:///src/app/images/images-duplicate/images-duplicate.component.ts","webpack:///src/app/images/images-edit/images-edit.component.scss","webpack:///src/app/images/images-edit/images-edit.component.ts","webpack:///src/app/images/images-form/images-form.component.scss","webpack:///src/app/images/images-form/images-form.component.ts","webpack:///src/app/images/images-list/images-list.component.scss","webpack:///src/app/images/images-list/images-list.component.ts","webpack:///src/app/images/images-routing.module.ts","webpack:///src/app/images/images.module.ts","webpack:///src/app/images/images.page.scss","webpack:///src/app/images/images.page.ts","webpack:///src/app/images/images.service.ts"],"names":["ImagesCreateComponent","imagesService","route","id","formValid","clearPosts","imageForm","imagesForm","valueChanges","subscribe","data","imagesFormValid","next","valid","console","log","createImage","image","selector","template","ImagesDuplicateComponent","ImagesEditComponent","model","snapshot","paramMap","get","editImage","ImagesFormComponent","toTitlecase","validationMessages","type","message","transform","event","postIds","value","length","i","push","post_ids","ImagesListComponent","api","loading","getImages","content","scrollToTop","routes","path","component","ImagesPageRoutingModule","imports","forChild","exports","ImagesPageModule","declarations","ImagesPage","ImagesService","alert","toast","router","navigation","imagesUrl","images","imageLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","post","posts","present","back","confirmation","confirm","providedIn"],"mappings":"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","file":"images-images-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/images'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"imagesService.storeImage()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"outline\\\"\\n                        [disabled]=\\\"!imagesService.imagesFormValid.value\\\"> Guardar\\n                <ion-icon slot=\\\"icon-only\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'IMÁGENES' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-images-form #imageForm [model]=\\\"imagesService.image\\\"></app-images-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Images duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/images'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"imagesService.updateImage()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"outline\\\"\\n                        [disabled]=\\\"!imagesService.imagesFormValid.value\\\"> Guardar\\n                <ion-icon slot=\\\"icon-only\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'IMÁGENES' | titlecase}}: {{ imagesService.image?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-images-form #imageForm [model]=\\\"imagesService.image\\\"></app-images-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #imagesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- post_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'ENTRADAS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"post_ids\\\"\\n                          id=\\\"post_ids-field\\\"\\n                          [(ngModel)]=\\\"model.posts\\\"\\n                          [items]=\\\"imagesService.imageLists.Post\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('ENTRADAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('ENTRADAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setPostIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.post_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"imagesForm.form.controls['post_ids']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end post_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"imagesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- url -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'URL' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.url\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"url\\\"\\n                            id=\\\"url-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.url\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"imagesForm.form.controls['url']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end url -->\\n\\n\\n</form>\\n\\n<pre>\\n{{ model | json }}\\n</pre>\\n\";","export default \"<app-main-header title=\\\"{{'IMÁGENES' | titlecase}}\\\"\\n                 primaryLink=\\\"images/create\\\"\\n                 primaryText=\\\"Crear {{'IMÁGENES' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('IMÁGENES' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.imagesService.searchValue = ''; imagesService.getImages()\\\"\\n                       (keyup.enter)=\\\"imagesService.getImages()\\\"\\n                       [(ngModel)]=\\\"imagesService.searchValue\\\"></ion-searchbar>\\n\\n    <ion-card>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && imagesService.images.length\\\">\\n            <ion-item *ngFor=\\\"let image of imagesService.images; let index = index\\\">\\n                <ion-label>\\n                    <h3>{{ 'NOMBRE' | titlecase }}: {{ image.name }}</h3>\\n                    <h3>{{ 'URL' | titlecase }}: {{ image.url }}</h3>\\n                    <h3>{{ 'ENTRADAS' | titlecase }}:\\n                    <ng-container *ngIf=\\\"image.posts.length\\\">\\n                        <ng-container *ngFor=\\\"let post of image.posts; let last = last\\\">\\n                        <a routerLink=\\\"/posts/{{ post.id }}/edit\\\">{{ post.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                        </ng-container>\\n                    </ng-container>\\n                    </h3>\\n                </ion-label>\\n\\n\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" [routerLink]=\\\"'/images/' + image.id + '/edit'\\\">\\n                    <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                </ion-button>\\n                <!--<ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" (click)=\\\"null\\\">\\n                    <ion-icon name=\\\"eye-outline\\\"></ion-icon>\\n                </ion-button>-->\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"danger\\\" (click)=\\\"imagesService.deleteImage(image.id)\\\">\\n                    <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && !imagesService.images.length\\\">\\n            <ion-item>\\n                <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label><h2>No se encontraron {{'IMÁGENES' | titlecase}}</h2></ion-label>\\n                <ion-button [routerLink]=\\\"'/images/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                    Crear {{'IMÁGENES' | titlecase}}\\n                    <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n    </ion-card>\\n\\n</ion-content>\\n\\n<ion-footer>\\n    <ion-row *ngIf=\\\"imagesService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"imagesService.getImages(imagesService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"imagesService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{imagesService.meta.current_page}}\\n                /{{imagesService.meta.last_page}} {{imagesService.meta.from}}-{{imagesService.meta.to}}\\n                /{{imagesService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"imagesService.getImages(imagesService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"imagesService.meta.current_page == imagesService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"IMÁGENES\\\"></app-main-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ltYWdlcy9pbWFnZXMtY3JlYXRlL2ltYWdlcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {ImagesService} from \"../images.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Image} from \"../image\";\nimport {ImagesFormComponent} from \"../images-form/images-form.component\";\n\n@Component({\n    selector: 'app-images-create',\n    templateUrl: './images-create.component.html',\n    styleUrls: ['./images-create.component.scss']\n})\nexport class ImagesCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('imageForm') imageForm: ImagesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public imagesService: ImagesService,\n        public route: ActivatedRoute\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.imageForm.imagesForm.valueChanges.subscribe((data) => {\n            this.imagesService.imagesFormValid.next(this.imageForm.imagesForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.imagesService.createImage();\n        this.imagesService.image = <Image>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ltYWdlcy9pbWFnZXMtZHVwbGljYXRlL2ltYWdlcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-images-duplicate',\n  templateUrl: './images-duplicate.component.html',\n  styleUrls: ['./images-duplicate.component.scss'],\n})\nexport class ImagesDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ltYWdlcy9pbWFnZXMtZWRpdC9pbWFnZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {ImagesService} from \"../images.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Image} from \"../image\";\nimport {ImagesFormComponent} from \"../images-form/images-form.component\";\n\n@Component({\n  selector: 'app-images-edit',\n  templateUrl: './images-edit.component.html',\n  styleUrls: ['./images-edit.component.scss']\n})\nexport class ImagesEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('imageForm') imageForm: ImagesFormComponent;\n\n    public id: any = null;\n    public model: Image = null;\n\n  constructor(\n      public imagesService: ImagesService,\n      public route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.imagesService.editImage(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.imageForm.imagesForm.valueChanges.subscribe((data) => {\n          this.imagesService.imagesFormValid.next(this.imageForm.imagesForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ltYWdlcy9pbWFnZXMtZm9ybS9pbWFnZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Image} from \"../image\";\nimport {FormGroup} from \"@angular/forms\";\nimport {ImagesService} from \"../images.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-images-form',\n    templateUrl: './images-form.component.html',\n    styleUrls: ['./images-form.component.scss']\n})\nexport class ImagesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: Image = <Image>{};\n\n    @ViewChild('imagesForm') imagesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'url': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('URL') + ' es obligatorio.'},\n        ],\n        'post_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ENTRADAS') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public imagesService: ImagesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setPostIds\n    setPostIds(event: any) {\n        let postIds = null;\n        if (event.value.length) {\n            postIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                postIds.push(event.value[i].id);\n            }\n        }\n        this.imagesService.image.post_ids = postIds;\n    }\n    // end setPostIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ltYWdlcy9pbWFnZXMtbGlzdC9pbWFnZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { ImagesService} from \"../images.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-images-list',\n    templateUrl: './images-list.component.html',\n    styleUrls: ['./images-list.component.scss'],\n})\nexport class ImagesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public imagesService: ImagesService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.imagesService.getImages();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ImagesPage } from './images.page';\nimport {ImagesEditComponent} from \"./images-edit/images-edit.component\";\nimport {ImagesCreateComponent} from \"./images-create/images-create.component\";\nimport {ImagesListComponent} from \"./images-list/images-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ImagesListComponent\n    },\n    {\n      path: 'create',\n      component: ImagesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: ImagesEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class ImagesPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {ImagesPageRoutingModule} from './images-routing.module';\n\nimport { ImagesPage} from './images.page';\nimport { ImagesListComponent} from \"./images-list/images-list.component\";\nimport { ImagesCreateComponent} from \"./images-create/images-create.component\";\nimport { ImagesDuplicateComponent} from \"./images-duplicate/images-duplicate.component\";\nimport { ImagesEditComponent} from \"./images-edit/images-edit.component\";\nimport { ImagesFormComponent} from \"./images-form/images-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        ImagesPageRoutingModule\n    ],\n    declarations: [\n        ImagesPage,\n        ImagesListComponent,\n        ImagesCreateComponent,\n        ImagesDuplicateComponent,\n        ImagesEditComponent,\n        ImagesFormComponent,\n    ]\n})\nexport class ImagesPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ltYWdlcy9pbWFnZXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-images',\n  templateUrl: './images.page.html',\n  styleUrls: ['./images.page.scss'],\n})\nexport class ImagesPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { Image, ImageLists } from \"./image\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ImagesService {\n\n    public imagesUrl = 'images';\n    public imagesFormValid = new BehaviorSubject<boolean>(false);\n\n    public images: Image[] = [];\n    public image: Image = <Image>{};\n    public imageLists: ImageLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getImages(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.imagesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.images = res.data;\n                    this.imageLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editImage(id: any) {\n        this.api.get(this.imagesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.image = res.data.model;\n                    this.imageLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateImage() {\n        this.api.put(this.imagesUrl + '/' + this.image.id, {\n            model: this.image,\n            pivots: {\n                post: this.image.posts,\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getImages(1);\n            }\n        );\n    }\n\n    public createImage() {\n        this.api.get(this.imagesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.image = <Image>{};\n                    this.imageLists = res.lists\n                }\n            );\n    }\n\n    public storeImage() {\n        this.api.post(this.imagesUrl, {\n            model: this.image,\n            pivots: {\n                post: this.image.posts,\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getImages(1);\n            }\n        );\n    }\n\n    public async deleteImage(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.imagesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getImages(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"]}