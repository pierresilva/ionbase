{"version":3,"sources":["./src/app/categories/categories-create/categories-create.component.html","./src/app/categories/categories-duplicate/categories-duplicate.component.html","./src/app/categories/categories-edit/categories-edit.component.html","./src/app/categories/categories-form/categories-form.component.html","./src/app/categories/categories-list/categories-list.component.html","./src/app/categories/categories.page.html","./src/app/categories/categories-create/categories-create.component.scss","./src/app/categories/categories-create/categories-create.component.ts","./src/app/categories/categories-duplicate/categories-duplicate.component.scss","./src/app/categories/categories-duplicate/categories-duplicate.component.ts","./src/app/categories/categories-edit/categories-edit.component.scss","./src/app/categories/categories-edit/categories-edit.component.ts","./src/app/categories/categories-form/categories-form.component.scss","./src/app/categories/categories-form/categories-form.component.ts","./src/app/categories/categories-list/categories-list.component.scss","./src/app/categories/categories-list/categories-list.component.ts","./src/app/categories/categories-routing.module.ts","./src/app/categories/categories.module.ts","./src/app/categories/categories.page.scss","./src/app/categories/categories.page.ts","./src/app/categories/categories.service.ts"],"names":[],"mappings":"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","file":"categories-categories-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/categories'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"categoriesService.storeCategory()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"outline\\\"\\n                        [disabled]=\\\"!categoriesService.categoriesFormValid.value\\\"> Guardar\\n                <ion-icon slot=\\\"icon-only\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'CATEGORÍAS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-categories-form #categoryForm [model]=\\\"categoriesService.category\\\"></app-categories-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Categories duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/categories'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"categoriesService.updateCategory()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"outline\\\"\\n                        [disabled]=\\\"!categoriesService.categoriesFormValid.value\\\"> Guardar\\n                <ion-icon slot=\\\"icon-only\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'CATEGORÍAS' | titlecase}}: {{ categoriesService.category?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-categories-form #categoryForm [model]=\\\"categoriesService.category\\\"></app-categories-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #categoriesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- post_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'ENTRADAS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"post_ids\\\"\\n                          id=\\\"post_ids-field\\\"\\n                          [(ngModel)]=\\\"model.posts\\\"\\n                          [items]=\\\"categoriesService.categoryLists.Post\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('ENTRADAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('ENTRADAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setPostIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.post_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"categoriesForm.form.controls['post_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end post_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"categoriesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n</form>\\n\\n<pre>\\n{{ model | json }}\\n</pre>\\n\";","export default \"<app-main-header title=\\\"{{'CATEGORÍAS' | titlecase}}\\\"\\n                 primaryLink=\\\"categories/create\\\"\\n                 primaryText=\\\"Crear {{'CATEGORÍAS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('CATEGORÍAS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.categoriesService.searchValue = ''; categoriesService.getCategories()\\\"\\n                       (keyup.enter)=\\\"categoriesService.getCategories()\\\"\\n                       [(ngModel)]=\\\"categoriesService.searchValue\\\"></ion-searchbar>\\n\\n    <ion-card>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && categoriesService.categories.length\\\">\\n            <ion-item *ngFor=\\\"let category of categoriesService.categories; let index = index\\\">\\n                <ion-label>\\n                    <h3>{{ 'NOMBRE' | titlecase }}: {{ category.name }}</h3>\\n                    <h3>{{ 'ENTRADAS' | titlecase }}:\\n                    <ng-container *ngIf=\\\"category.posts.length\\\">\\n                        <ng-container *ngFor=\\\"let post of category.posts; let last = last\\\">\\n                        <a routerLink=\\\"/posts/{{ post.id }}/edit\\\">{{ post.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                        </ng-container>\\n                    </ng-container>\\n                    </h3>\\n                </ion-label>\\n\\n\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" [routerLink]=\\\"'/categories/' + category.id + '/edit'\\\">\\n                    <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                </ion-button>\\n                <!--<ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" (click)=\\\"null\\\">\\n                    <ion-icon name=\\\"eye-outline\\\"></ion-icon>\\n                </ion-button>-->\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"danger\\\" (click)=\\\"categoriesService.deleteCategory(category.id)\\\">\\n                    <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && !categoriesService.categories.length\\\">\\n            <ion-item>\\n                <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label><h2>No se encontraron {{'CATEGORÍAS' | titlecase}}</h2></ion-label>\\n                <ion-button [routerLink]=\\\"'/categories/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                    Crear {{'CATEGORÍAS' | titlecase}}\\n                    <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n    </ion-card>\\n\\n</ion-content>\\n\\n<ion-footer>\\n    <ion-row *ngIf=\\\"categoriesService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"categoriesService.getCategories(categoriesService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"categoriesService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{categoriesService.meta.current_page}}\\n                /{{categoriesService.meta.last_page}} {{categoriesService.meta.from}}-{{categoriesService.meta.to}}\\n                /{{categoriesService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"categoriesService.getCategories(categoriesService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"categoriesService.meta.current_page == categoriesService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"CATEGORÍAS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy1jcmVhdGUvY2F0ZWdvcmllcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {CategoriesService} from \"../categories.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Category} from \"../category\";\nimport {CategoriesFormComponent} from \"../categories-form/categories-form.component\";\n\n@Component({\n    selector: 'app-categories-create',\n    templateUrl: './categories-create.component.html',\n    styleUrls: ['./categories-create.component.scss']\n})\nexport class CategoriesCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('categoryForm') categoryForm: CategoriesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public categoriesService: CategoriesService,\n        public route: ActivatedRoute\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.categoryForm.categoriesForm.valueChanges.subscribe((data) => {\n            this.categoriesService.categoriesFormValid.next(this.categoryForm.categoriesForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.categoriesService.createCategory();\n        this.categoriesService.category = <Category>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy1kdXBsaWNhdGUvY2F0ZWdvcmllcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories-duplicate',\n  templateUrl: './categories-duplicate.component.html',\n  styleUrls: ['./categories-duplicate.component.scss'],\n})\nexport class CategoriesDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy1lZGl0L2NhdGVnb3JpZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {CategoriesService} from \"../categories.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Category} from \"../category\";\nimport {CategoriesFormComponent} from \"../categories-form/categories-form.component\";\n\n@Component({\n  selector: 'app-categories-edit',\n  templateUrl: './categories-edit.component.html',\n  styleUrls: ['./categories-edit.component.scss']\n})\nexport class CategoriesEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('categoryForm') categoryForm: CategoriesFormComponent;\n\n    public id: any = null;\n    public model: Category = null;\n\n  constructor(\n      public categoriesService: CategoriesService,\n      public route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.categoriesService.editCategory(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.categoryForm.categoriesForm.valueChanges.subscribe((data) => {\n          this.categoriesService.categoriesFormValid.next(this.categoryForm.categoriesForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy1mb3JtL2NhdGVnb3JpZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Category} from \"../category\";\nimport {FormGroup} from \"@angular/forms\";\nimport {CategoriesService} from \"../categories.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-categories-form',\n    templateUrl: './categories-form.component.html',\n    styleUrls: ['./categories-form.component.scss']\n})\nexport class CategoriesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: Category = <Category>{};\n\n    @ViewChild('categoriesForm') categoriesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'post_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ENTRADAS') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public categoriesService: CategoriesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setPostIds\n    setPostIds(event: any) {\n        let postIds = null;\n        if (event.value.length) {\n            postIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                postIds.push(event.value[i].id);\n            }\n        }\n        this.categoriesService.category.post_ids = postIds;\n    }\n    // end setPostIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy1saXN0L2NhdGVnb3JpZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { CategoriesService} from \"../categories.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-categories-list',\n    templateUrl: './categories-list.component.html',\n    styleUrls: ['./categories-list.component.scss'],\n})\nexport class CategoriesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public categoriesService: CategoriesService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.categoriesService.getCategories();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CategoriesPage } from './categories.page';\nimport {CategoriesEditComponent} from \"./categories-edit/categories-edit.component\";\nimport {CategoriesCreateComponent} from \"./categories-create/categories-create.component\";\nimport {CategoriesListComponent} from \"./categories-list/categories-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CategoriesListComponent\n    },\n    {\n      path: 'create',\n      component: CategoriesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: CategoriesEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class CategoriesPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {CategoriesPageRoutingModule} from './categories-routing.module';\n\nimport { CategoriesPage} from './categories.page';\nimport { CategoriesListComponent} from \"./categories-list/categories-list.component\";\nimport { CategoriesCreateComponent} from \"./categories-create/categories-create.component\";\nimport { CategoriesDuplicateComponent} from \"./categories-duplicate/categories-duplicate.component\";\nimport { CategoriesEditComponent} from \"./categories-edit/categories-edit.component\";\nimport { CategoriesFormComponent} from \"./categories-form/categories-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        CategoriesPageRoutingModule\n    ],\n    declarations: [\n        CategoriesPage,\n        CategoriesListComponent,\n        CategoriesCreateComponent,\n        CategoriesDuplicateComponent,\n        CategoriesEditComponent,\n        CategoriesFormComponent,\n    ]\n})\nexport class CategoriesPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.page.html',\n  styleUrls: ['./categories.page.scss'],\n})\nexport class CategoriesPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { Category, CategoryLists } from \"./category\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CategoriesService {\n\n    public categoriesUrl = 'categories';\n    public categoriesFormValid = new BehaviorSubject<boolean>(false);\n\n    public categories: Category[] = [];\n    public category: Category = <Category>{};\n    public categoryLists: CategoryLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getCategories(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.categoriesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.categories = res.data;\n                    this.categoryLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editCategory(id: any) {\n        this.api.get(this.categoriesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.category = res.data.model;\n                    this.categoryLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateCategory() {\n        this.api.put(this.categoriesUrl + '/' + this.category.id, {\n            model: this.category,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getCategories(1);\n            }\n        );\n    }\n\n    public createCategory() {\n        this.api.get(this.categoriesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.category = <Category>{};\n                    this.categoryLists = res.lists\n                }\n            );\n    }\n\n    public storeCategory() {\n        this.api.post(this.categoriesUrl, {\n            model: this.category,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getCategories(1);\n            }\n        );\n    }\n\n    public async deleteCategory(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.categoriesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getCategories(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}