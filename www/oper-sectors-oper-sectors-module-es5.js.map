{"version":3,"sources":["webpack:///src/app/oper-sectors/oper-sectors-create/oper-sectors-create.component.html","webpack:///src/app/oper-sectors/oper-sectors-duplicate/oper-sectors-duplicate.component.html","webpack:///src/app/oper-sectors/oper-sectors-edit/oper-sectors-edit.component.html","webpack:///src/app/oper-sectors/oper-sectors-form/oper-sectors-form.component.html","webpack:///src/app/oper-sectors/oper-sectors-list/oper-sectors-list.component.html","webpack:///src/app/oper-sectors/oper-sectors.page.html","webpack:///src/app/oper-sectors/oper-sectors-create/oper-sectors-create.component.scss","webpack:///src/app/oper-sectors/oper-sectors-create/oper-sectors-create.component.ts","webpack:///src/app/oper-sectors/oper-sectors-duplicate/oper-sectors-duplicate.component.scss","webpack:///src/app/oper-sectors/oper-sectors-duplicate/oper-sectors-duplicate.component.ts","webpack:///src/app/oper-sectors/oper-sectors-edit/oper-sectors-edit.component.scss","webpack:///src/app/oper-sectors/oper-sectors-edit/oper-sectors-edit.component.ts","webpack:///src/app/oper-sectors/oper-sectors-form/oper-sectors-form.component.scss","webpack:///src/app/oper-sectors/oper-sectors-form/oper-sectors-form.component.ts","webpack:///src/app/oper-sectors/oper-sectors-list/oper-sectors-list.component.scss","webpack:///src/app/oper-sectors/oper-sectors-list/oper-sectors-list.component.ts","webpack:///src/app/oper-sectors/oper-sectors-routing.module.ts","webpack:///src/app/oper-sectors/oper-sectors.module.ts","webpack:///src/app/oper-sectors/oper-sectors.page.scss","webpack:///src/app/oper-sectors/oper-sectors.page.ts","webpack:///src/app/oper-sectors/oper-sectors.service.ts"],"names":["OperSectorsCreateComponent","operSectorsService","route","platform","id","formValid","clearPosts","operSectorForm","operSectorsForm","valueChanges","subscribe","data","operSectorsFormValid","next","valid","console","log","createOperSector","operSector","selector","template","OperSectorsDuplicateComponent","OperSectorsEditComponent","model","snapshot","paramMap","get","editOperSector","OperSectorsFormComponent","toTitlecase","validationMessages","type","message","transform","event","hous_unit_id","value","operScheduleIds","length","i","push","oper_schedule_ids","operMovementIds","oper_movement_ids","OperSectorsListComponent","api","loading","getOperSectors","content","scrollToTop","routes","path","component","OperSectorsPageRoutingModule","imports","forChild","exports","OperSectorsPageModule","declarations","OperSectorsPage","OperSectorsService","alert","toast","router","navigation","operSectorsUrl","operSectors","operSectorLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"oper-sectors-oper-sectors-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-sectors'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operSectorsService.storeOperSector()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operSectorsService.operSectorsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'SECTORES OPERATIVOS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-oper-sectors-form #operSectorForm [model]=\\\"operSectorsService.operSector\\\"></app-oper-sectors-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  OperSectors duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-sectors'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operSectorsService.updateOperSector()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operSectorsService.operSectorsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'SECTORES OPERATIVOS' | titlecase}}: {{ operSectorsService.operSector?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-oper-sectors-form #operSectorForm [model]=\\\"operSectorsService.operSector\\\"></app-oper-sectors-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #operSectorsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- hous_unit_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'UNIDADESHABITACIONALE' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"hous_unit_id\\\"\\n                          id=\\\"hous_unit_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.hous_unit\\\"\\n                          [items]=\\\"operSectorsService.operSectorLists.HousUnit\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('UNIDADES HABITACIONALES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('UNIDADES HABITACIONALES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setHousUnitId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.hous_unit_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSectorsForm.form.controls['hous_unit_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end hous_unit_id -->\\n\\n\\n    <!-- oper_schedule_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'AGENDA DE OPERACIONES' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_schedule_ids\\\"\\n                          id=\\\"oper_schedule_ids-field\\\"\\n                          [(ngModel)]=\\\"model.oper_schedules\\\"\\n                          [items]=\\\"operSectorsService.operSectorLists.OperSchedule\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('AGENDA DE OPERACIONES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('AGENDA DE OPERACIONES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperScheduleIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_schedule_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSectorsForm.form.controls['oper_schedule_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_schedule_ids -->\\n\\n\\n    <!-- oper_movement_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'MOVIMIENTOS OPERATIVOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_movement_ids\\\"\\n                          id=\\\"oper_movement_ids-field\\\"\\n                          [(ngModel)]=\\\"model.oper_movements\\\"\\n                          [items]=\\\"operSectorsService.operSectorLists.OperMovement\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('MOVIMIENTOS OPERATIVOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('MOVIMIENTOS OPERATIVOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperMovementIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_movement_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSectorsForm.form.controls['oper_movement_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_movement_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NAME' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSectorsForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- code -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"code\\\"\\n                            id=\\\"code-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSectorsForm.form.controls['code']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end code -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'SECTORES OPERATIVOS' | titlecase}}\\\"\\n                 primaryLink=\\\"oper-sectors/create\\\"\\n                 primaryText=\\\"Crear {{'SECTORES OPERATIVOS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('SECTORES OPERATIVOS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.operSectorsService.searchValue = ''; operSectorsService.getOperSectors()\\\"\\n                       (keyup.enter)=\\\"operSectorsService.getOperSectors()\\\"\\n                       [(ngModel)]=\\\"operSectorsService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operSectorsService.operSectors.length\\\">\\n        <ion-card *ngFor=\\\"let operSector of operSectorsService.operSectors; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NAME' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operSector.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operSector.code }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'UNIDADES HABITACIONALES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/hous-units/{{ operSector.hous_unit.id }}/edit\\\">{{ operSector.hous_unit.name }}</a></div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'AGENDA DE OPERACIONES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"operSector.oper_schedules.length\\\">\\n                                <ng-container *ngFor=\\\"let operSchedule of operSector.oper_schedules; let last = last\\\">\\n                                    <a routerLink=\\\"/oper-schedules/{{ operSchedule.id }}/edit\\\">{{ operSchedule.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'MOVIMIENTOS OPERATIVOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"operSector.oper_movements.length\\\">\\n                                <ng-container *ngFor=\\\"let operMovement of operSector.oper_movements; let last = last\\\">\\n                                    <a routerLink=\\\"/oper-movements/{{ operMovement.id }}/edit\\\">{{ operMovement.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/oper-sectors/' + operSector.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"operSectorsService.deleteOperSector(operSector.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operSectorsService.operSectors.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'SECTORES OPERATIVOS' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/oper-sectors/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'SECTORES OPERATIVOS' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"operSectorsService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"operSectorsService.getOperSectors(operSectorsService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"operSectorsService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{operSectorsService.meta.current_page}}\\n                /{{operSectorsService.meta.last_page}} {{operSectorsService.meta.from}}-{{operSectorsService.meta.to}}\\n                /{{operSectorsService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"operSectorsService.getOperSectors(operSectorsService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"operSectorsService.meta.current_page == operSectorsService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"SECTORES OPERATIVOS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-sectors/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'SECTORES OPERATIVOS'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-sectors/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'SECTORES OPERATIVOS' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2VjdG9ycy9vcGVyLXNlY3RvcnMtY3JlYXRlL29wZXItc2VjdG9ycy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {OperSectorsService} from \"../oper-sectors.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperSector} from \"../oper-sector\";\nimport {OperSectorsFormComponent} from \"../oper-sectors-form/oper-sectors-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n    selector: 'app-oper-sectors-create',\n    templateUrl: './oper-sectors-create.component.html',\n    styleUrls: ['./oper-sectors-create.component.scss']\n})\nexport class OperSectorsCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operSectorForm') operSectorForm: OperSectorsFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public operSectorsService: OperSectorsService,\n        public route: ActivatedRoute,\n        public platform: Platform\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.operSectorForm.operSectorsForm.valueChanges.subscribe((data) => {\n            this.operSectorsService.operSectorsFormValid.next(this.operSectorForm.operSectorsForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.operSectorsService.createOperSector();\n        this.operSectorsService.operSector = <OperSector>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2VjdG9ycy9vcGVyLXNlY3RvcnMtZHVwbGljYXRlL29wZXItc2VjdG9ycy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-oper-sectors-duplicate',\n  templateUrl: './oper-sectors-duplicate.component.html',\n  styleUrls: ['./oper-sectors-duplicate.component.scss'],\n})\nexport class OperSectorsDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2VjdG9ycy9vcGVyLXNlY3RvcnMtZWRpdC9vcGVyLXNlY3RvcnMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {OperSectorsService} from \"../oper-sectors.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperSector} from \"../oper-sector\";\nimport {OperSectorsFormComponent} from \"../oper-sectors-form/oper-sectors-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-oper-sectors-edit',\n  templateUrl: './oper-sectors-edit.component.html',\n  styleUrls: ['./oper-sectors-edit.component.scss']\n})\nexport class OperSectorsEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operSectorForm') operSectorForm: OperSectorsFormComponent;\n\n    public id: any = null;\n    public model: OperSector = null;\n\n  constructor(\n      public operSectorsService: OperSectorsService,\n      public route: ActivatedRoute,\n      public platform: Platform\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.operSectorsService.editOperSector(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.operSectorForm.operSectorsForm.valueChanges.subscribe((data) => {\n          this.operSectorsService.operSectorsFormValid.next(this.operSectorForm.operSectorsForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2VjdG9ycy9vcGVyLXNlY3RvcnMtZm9ybS9vcGVyLXNlY3RvcnMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {OperSector} from \"../oper-sector\";\nimport {FormGroup} from \"@angular/forms\";\nimport {OperSectorsService} from \"../oper-sectors.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-oper-sectors-form',\n    templateUrl: './oper-sectors-form.component.html',\n    styleUrls: ['./oper-sectors-form.component.scss']\n})\nexport class OperSectorsFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: OperSector = <OperSector>{};\n\n    @ViewChild('operSectorsForm') operSectorsForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NAME') + ' es obligatorio.'},\n        ],\n        'code': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\n        ],\n        'hous_unit_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('housUnit - NAME') + ' es obligatorio.'},\n        ],\n        'oper_schedule_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('AGENDA DE OPERACIONES') + ' es obligatorio.'},\n        ],\n        'oper_movement_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('MOVIMIENTOS OPERATIVOS') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public operSectorsService: OperSectorsService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setHousUnitId\n\n    setHousUnitId(event: any) {\n        this.operSectorsService.operSector.hous_unit_id = event.value ? event.value.id : null;\n    }\n    // end setHousUnitId\n\n\n    // set setOperScheduleIds\n    setOperScheduleIds(event: any) {\n        let operScheduleIds = null;\n        if (event.value.length) {\n            operScheduleIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                operScheduleIds.push(event.value[i].id);\n            }\n        }\n        this.operSectorsService.operSector.oper_schedule_ids = operScheduleIds;\n    }\n    // end setOperScheduleIds\n\n\n    // set setOperMovementIds\n    setOperMovementIds(event: any) {\n        let operMovementIds = null;\n        if (event.value.length) {\n            operMovementIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                operMovementIds.push(event.value[i].id);\n            }\n        }\n        this.operSectorsService.operSector.oper_movement_ids = operMovementIds;\n    }\n    // end setOperMovementIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2VjdG9ycy9vcGVyLXNlY3RvcnMtbGlzdC9vcGVyLXNlY3RvcnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { OperSectorsService} from \"../oper-sectors.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-oper-sectors-list',\n    templateUrl: './oper-sectors-list.component.html',\n    styleUrls: ['./oper-sectors-list.component.scss'],\n})\nexport class OperSectorsListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public operSectorsService: OperSectorsService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.operSectorsService.getOperSectors();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperSectorsPage } from './oper-sectors.page';\nimport {OperSectorsEditComponent} from \"./oper-sectors-edit/oper-sectors-edit.component\";\nimport {OperSectorsCreateComponent} from \"./oper-sectors-create/oper-sectors-create.component\";\nimport {OperSectorsListComponent} from \"./oper-sectors-list/oper-sectors-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: OperSectorsPage\n    },\n    {\n        path: 'list',\n        component: OperSectorsListComponent\n    },\n    {\n      path: 'create',\n      component: OperSectorsCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: OperSectorsEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class OperSectorsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {OperSectorsPageRoutingModule} from './oper-sectors-routing.module';\n\nimport { OperSectorsPage} from './oper-sectors.page';\nimport { OperSectorsListComponent} from \"./oper-sectors-list/oper-sectors-list.component\";\nimport { OperSectorsCreateComponent} from \"./oper-sectors-create/oper-sectors-create.component\";\nimport { OperSectorsDuplicateComponent} from \"./oper-sectors-duplicate/oper-sectors-duplicate.component\";\nimport { OperSectorsEditComponent} from \"./oper-sectors-edit/oper-sectors-edit.component\";\nimport { OperSectorsFormComponent} from \"./oper-sectors-form/oper-sectors-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        OperSectorsPageRoutingModule\n    ],\n    declarations: [\n        OperSectorsPage,\n        OperSectorsListComponent,\n        OperSectorsCreateComponent,\n        OperSectorsDuplicateComponent,\n        OperSectorsEditComponent,\n        OperSectorsFormComponent,\n    ]\n})\nexport class OperSectorsPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2VjdG9ycy9vcGVyLXNlY3RvcnMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-oper-sectors',\n  templateUrl: './oper-sectors.page.html',\n  styleUrls: ['./oper-sectors.page.scss'],\n})\nexport class OperSectorsPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { OperSector, OperSectorLists } from \"./oper-sector\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OperSectorsService {\n\n    public operSectorsUrl = 'oper-sectors';\n    public operSectorsFormValid = new BehaviorSubject<boolean>(false);\n\n    public operSectors: OperSector[] = [];\n    public operSector: OperSector = <OperSector>{};\n    public operSectorLists: OperSectorLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getOperSectors(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.operSectorsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.operSectors = res.data;\n                    this.operSectorLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editOperSector(id: any) {\n        this.api.get(this.operSectorsUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.operSector = res.data.model;\n                    this.operSectorLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateOperSector() {\n        this.api.put(this.operSectorsUrl + '/' + this.operSector.id, {\n            model: this.operSector,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperSectors(1);\n            }\n        );\n    }\n\n    public createOperSector() {\n        this.api.get(this.operSectorsUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.operSector = <OperSector>{};\n                    this.operSectorLists = res.lists\n                }\n            );\n    }\n\n    public storeOperSector() {\n        this.api.post(this.operSectorsUrl, {\n            model: this.operSector,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperSectors(1);\n            }\n        );\n    }\n\n    public async deleteOperSector(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.operSectorsUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getOperSectors(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"]}