{"version":3,"sources":["webpack:///src/app/user-profiles/user-profiles-create/user-profiles-create.component.html","webpack:///src/app/user-profiles/user-profiles-duplicate/user-profiles-duplicate.component.html","webpack:///src/app/user-profiles/user-profiles-edit/user-profiles-edit.component.html","webpack:///src/app/user-profiles/user-profiles-form/user-profiles-form.component.html","webpack:///src/app/user-profiles/user-profiles-list/user-profiles-list.component.html","webpack:///src/app/user-profiles/user-profiles.page.html","webpack:///src/app/user-profiles/user-profiles-create/user-profiles-create.component.scss","webpack:///src/app/user-profiles/user-profiles-create/user-profiles-create.component.ts","webpack:///src/app/user-profiles/user-profiles-duplicate/user-profiles-duplicate.component.scss","webpack:///src/app/user-profiles/user-profiles-duplicate/user-profiles-duplicate.component.ts","webpack:///src/app/user-profiles/user-profiles-edit/user-profiles-edit.component.scss","webpack:///src/app/user-profiles/user-profiles-edit/user-profiles-edit.component.ts","webpack:///src/app/user-profiles/user-profiles-form/user-profiles-form.component.scss","webpack:///src/app/user-profiles/user-profiles-form/user-profiles-form.component.ts","webpack:///src/app/user-profiles/user-profiles-list/user-profiles-list.component.scss","webpack:///src/app/user-profiles/user-profiles-list/user-profiles-list.component.ts","webpack:///src/app/user-profiles/user-profiles-routing.module.ts","webpack:///src/app/user-profiles/user-profiles.module.ts","webpack:///src/app/user-profiles/user-profiles.page.scss","webpack:///src/app/user-profiles/user-profiles.page.ts","webpack:///src/app/user-profiles/user-profiles.service.ts"],"names":["UserProfilesCreateComponent","userProfilesService","route","platform","splitPanel","id","formValid","clearPosts","show","next","userProfileForm","userProfilesForm","valueChanges","subscribe","data","userProfilesFormValid","valid","console","log","createUserProfile","userProfile","selector","template","UserProfilesDuplicateComponent","UserProfilesEditComponent","model","snapshot","paramMap","get","editUserProfile","UserProfilesFormComponent","toTitlecase","validationMessages","type","message","transform","event","user_id","value","syst_city_id","syst_region_id","syst_country_id","UserProfilesListComponent","api","loading","getUserProfiles","content","scrollToTop","routes","path","component","UserProfilesPageRoutingModule","imports","forChild","exports","UserProfilesPageModule","declarations","UserProfilesPage","UserProfilesService","alert","toast","router","navigation","userProfilesUrl","userProfiles","userProfileLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFA,2BAA2B;AAOpC,6CACWC,mBADX,EAEWC,KAFX,EAGWC,QAHX,EAIWC,UAJX,EAIwC;AAAA;;AAH7B,eAAAH,mBAAA,GAAAA,mBAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AAPX,eAAAC,EAAA,GAAU,IAAV;AACO,eAAAC,SAAA,GAAY,KAAZ;AASN;;AAdmC;AAAA;AAAA,qCAgB5B;AACJ,iBAAKC,UAAL;AACH;AAlBmC;AAAA;AAAA,6CAoBjB;AAChB,iBAAKH,UAAL,CAAgBI,IAAhB,CAAqBC,IAArB,CAA0B,IAA1B;AACF;AAtBmC;AAAA;AAAA,4CAwBlB;AAAA;;AACd,iBAAKC,eAAL,CAAqBC,gBAArB,CAAsCC,YAAtC,CAAmDC,SAAnD,CAA6D,UAACC,IAAD,EAAU;AACnE,mBAAI,CAACb,mBAAL,CAAyBc,qBAAzB,CAA+CN,IAA/C,CAAoD,KAAI,CAACC,eAAL,CAAqBC,gBAArB,CAAsCK,KAA1F;AACH,aAFD;AAGH;AA5BmC;AAAA;AAAA,uCA8BvB;AACTC,mBAAO,CAACC,GAAR,CAAY,OAAZ;AACA,iBAAKjB,mBAAL,CAAyBkB,iBAAzB;AACA,iBAAKlB,mBAAL,CAAyBmB,WAAzB,GAAoD,EAApD;AACH;AAlCmC;;AAAA;AAAA,S;;;;gBAZhC;;gBACA;;gBAGC;;gBACD;;;;;;gBASH,uD;AAAS,iBAAC,iBAAD;;;AAFDpB,iCAA2B,6DALvC,gEAAU;AACPqB,gBAAQ,EAAE,0BADH;AAEPC,gBAAQ,EAAR;AAAA;AAAA,6IAFO;;;;AAAA,OAAV,CAKuC,GAA3BtB,2BAA2B,CAA3B;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFuB,8BAA8B;AAEzC,kDAAc;AAAA;AAAG;;AAFwB;AAAA;AAAA,qCAI9B,CAAE;AAJ4B;;AAAA;AAAA,S;;;;;;AAA9BA,oCAA8B,6DAL1C,gEAAU;AACTF,gBAAQ,EAAE,6BADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,mJAFS;;;;AAAA,OAAV,CAK0C,GAA9BC,8BAA8B,CAA9B;;;;;;;;;;;;;;;;ACPb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFC,yBAAyB;AAOpC,2CACWvB,mBADX,EAEWC,KAFX,EAGWC,QAHX,EAIWC,UAJX,EAIwC;AAAA;;AAH7B,eAAAH,mBAAA,GAAAA,mBAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AAPF,eAAAC,EAAA,GAAU,IAAV;AACA,eAAAoB,KAAA,GAAqB,IAArB;AAOJ;;AAZ+B;AAAA;AAAA,qCAc5B;AACJ,iBAAKpB,EAAL,GAAU,KAAKH,KAAL,CAAWwB,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAV;AACA,iBAAK3B,mBAAL,CAAyB4B,eAAzB,CAAyC,KAAKxB,EAA9C;AACH;AAjBmC;AAAA;AAAA,6CAmBjB;AACjB,iBAAKD,UAAL,CAAgBI,IAAhB,CAAqBC,IAArB,CAA0B,IAA1B;AACD;AArBmC;AAAA;AAAA,4CAuBlB;AAAA;;AACd,iBAAKC,eAAL,CAAqBC,gBAArB,CAAsCC,YAAtC,CAAmDC,SAAnD,CAA6D,UAACC,IAAD,EAAU;AACnE,oBAAI,CAACb,mBAAL,CAAyBc,qBAAzB,CAA+CN,IAA/C,CAAoD,MAAI,CAACC,eAAL,CAAqBC,gBAArB,CAAsCK,KAA1F;AACH,aAFD;AAGH;AA3BmC;;AAAA;AAAA,S;;;;gBAZ9B;;gBACA;;gBAGC;;gBACD;;;;;;gBASH,uD;AAAS,iBAAC,iBAAD;;;AAFDQ,+BAAyB,6DALrC,gEAAU;AACTH,gBAAQ,EAAE,wBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,yIAFS;;;;AAAA,OAAV,CAKqC,GAAzBE,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWFM,yBAAyB;AAiClC,2CACW7B,mBADX,EAEY8B,WAFZ,EAEsC;AAAA;;AAD3B,eAAA9B,mBAAA,GAAAA,mBAAA;AACC,eAAA8B,WAAA,GAAAA,WAAA;AAjCI,eAAAN,KAAA,GAAkC,EAAlC;AAIT,eAAAO,kBAAA,GAAqB;AACxB,oBAAQ,CACJ;AAACC,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,QAA3B,CAAd,GAAqD;AAAjF,aADI,CADgB;AAIxB,uBAAW,CACP;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,SAA3B,CAAd,GAAsD;AAAlF,aADO,CAJa;AAOxB,4BAAgB,CACZ;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,QAA3B,CAAd,GAAqD;AAAjF,aADY,CAPQ;AAUxB,8BAAkB,CACd;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,cAA3B,CAAd,GAA2D;AAAvF,aADc,CAVM;AAaxB,+BAAmB,CACf;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,MAA3B,CAAd,GAAmD;AAA/E,aADe,CAbK;AAgBxB,uBAAW,CACP;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,WAA3B,CAAd,GAAwD;AAApF,aADO,CAhBa;AAmBxB,qBAAS,CACL;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,UAA3B,CAAd,GAAuD;AAAnF,aADK,CAnBe;AAsBxB,sBAAU,CACN;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,QAA3B,CAAd,GAAqD;AAAjF,aADM;AAtBc,WAArB;AAgCN;;AAtCiC;AAAA;AAAA,qCAwC1B,CACP;AAzCiC;AAAA;AAAA,4CA2ChB,CACjB,CA5CiC,CA+ClC;;AA/CkC;AAAA;AAAA,oCAiDxBC,KAjDwB,EAiDZ;AAClB,iBAAKnC,mBAAL,CAAyBmB,WAAzB,CAAqCiB,OAArC,GAA+CD,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYjC,EAA1B,GAA+B,IAA9E;AACH,WAnDiC,CAoDlC;AAGA;;AAvDkC;AAAA;AAAA,wCAyDpB+B,KAzDoB,EAyDR;AACtB,iBAAKnC,mBAAL,CAAyBmB,WAAzB,CAAqCmB,YAArC,GAAoDH,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYjC,EAA1B,GAA+B,IAAnF;AACH,WA3DiC,CA4DlC;AAGA;;AA/DkC;AAAA;AAAA,0CAiElB+B,KAjEkB,EAiEN;AACxB,iBAAKnC,mBAAL,CAAyBmB,WAAzB,CAAqCoB,cAArC,GAAsDJ,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYjC,EAA1B,GAA+B,IAArF;AACH,WAnEiC,CAoElC;AAGA;;AAvEkC;AAAA;AAAA,2CAyEjB+B,KAzEiB,EAyEL;AACzB,iBAAKnC,mBAAL,CAAyBmB,WAAzB,CAAqCqB,eAArC,GAAuDL,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYjC,EAA1B,GAA+B,IAAtF;AACH;AA3EiC;;AAAA;AAAA,S;;;;gBAR9B;;gBACA;;;;;;gBASH,mD;AAAK,iBAAC,OAAD;;;gBAEL,uD;AAAS,iBAAC,kBAAD;;;AAJDyB,+BAAyB,6DALrC,gEAAU;AACPT,gBAAQ,EAAE,wBADH;AAEPC,gBAAQ,EAAR;AAAA;AAAA,yIAFO;;;;AAAA,OAAV,CAKqC,GAAzBQ,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFY,yBAAyB;AAMlC,2CACWzC,mBADX,EAEW0C,GAFX,EAGWC,OAHX,EAIWxC,UAJX,EAIwC;AAAA;;AAH7B,eAAAH,mBAAA,GAAAA,mBAAA;AACA,eAAA0C,GAAA,GAAAA,GAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAxC,UAAA,GAAAA,UAAA;AAEV;;AAZiC;AAAA;AAAA,qCAcvB;AACP,iBAAKH,mBAAL,CAAyB4C,eAAzB;AACH;AAhBiC;AAAA;AAAA,6CAkBf;AAClB,iBAAKzC,UAAL,CAAgBI,IAAhB,CAAqBC,IAArB,CAA0B,IAA1B;AACA;AApBiC;AAAA;AAAA,wCAsBb;AACjB,iBAAKqC,OAAL,CAAaC,WAAb,CAAyB,GAAzB;AACH;AAxBiC;;AAAA;AAAA,S;;;;gBAX7B;;gBACD;;gBACA;;gBAEA;;;;;;gBASH,uD;AAAS,iBAAC,yDAAD,EAAa;AAAC,sBAAQ;AAAT,WAAb;;;AAFDL,+BAAyB,6DALrC,gEAAU;AACPrB,gBAAQ,EAAE,wBADH;AAEPC,gBAAQ,EAAR;AAAA;AAAA,yIAFO;;;;AAAA,OAAV,CAKqC,GAAzBoB,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJb,UAAMM,MAAM,GAAW,CACnB;AACIC,YAAI,EAAE,EADV;AAEIC,iBAAS,EAAE;AAFf,OADmB,EAKnB;AACID,YAAI,EAAE,MADV;AAEIC,iBAAS,EAAE;AAFf,OALmB,EASnB;AACED,YAAI,EAAE,QADR;AAEEC,iBAAS,EAAE;AAFb,OATmB,EAanB;AACID,YAAI,EAAE,UADV;AAEIC,iBAAS,EAAE;AAFf,OAbmB,CAAvB;;UAyBaC,6BAA6B;AAAA;AAAA,O;;AAA7BA,mCAA6B,6DANzC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CACP,4DADO;AAFD,OAAT,CAMyC,GAA7BH,6BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCAI,sBAAsB;AAAA;AAAA,O;;AAAtBA,4BAAsB,6DAjBlC,+DAAS;AACNH,eAAO,EAAE,CACL,4DADK,EAEL,0DAFK,EAGL,0DAHK,EAIL,kEAJK,EAKL,2FALK,CADH;AAQNI,oBAAY,EAAE,CACV,oEADU,EAEV,0GAFU,EAGV,gHAHU,EAIV,0HAJU,EAKV,2GALU,EAMV,2GANU;AARR,OAAT,CAiBkC,GAAtBD,sBAAsB,CAAtB;;;;;;;;;;;;;;;;AClCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCQFE,gBAAgB;AAE3B,kCACSrD,UADT,EACsC;AAAA;;AAA7B,eAAAA,UAAA,GAAAA,UAAA;AACJ;;AAJsB;AAAA;AAAA,qCAMhB,CAEV;AAR0B;AAAA;AAAA,6CAUR;AACjB,iBAAKA,UAAL,CAAgBI,IAAhB,CAAqBC,IAArB,CAA0B,IAA1B;AACD;AAZ0B;;AAAA;AAAA,S;;;;gBAPrB;;;;AAOKgD,sBAAgB,6DAL5B,gEAAU;AACTpC,gBAAQ,EAAE,mBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,4GAFS;;;;AAAA,OAAV,CAK4B,GAAhBmC,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOAC,mBAAmB;AAkB5B,qCACWf,GADX,EAEWgB,KAFX,EAGWC,KAHX,EAIWC,MAJX,EAKYC,UALZ,EAKyC;AAAA;;AAJ9B,eAAAnB,GAAA,GAAAA,GAAA;AACA,eAAAgB,KAAA,GAAAA,KAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACC,eAAAC,UAAA,GAAAA,UAAA;AArBL,eAAAC,eAAA,GAAkB,eAAlB;AACA,eAAAhD,qBAAA,GAAwB,IAAI,oDAAJ,CAA6B,KAA7B,CAAxB;AAEA,eAAAiD,YAAA,GAA8B,EAA9B;AACA,eAAA5C,WAAA,GAAwC,EAAxC;AACA,eAAA6C,gBAAA,GAAqC,EAArC;AAEA,eAAAC,WAAA,GAAc,EAAd;AACA,eAAAC,OAAA,GAAU,EAAV;AAEA,eAAAC,IAAA,GAAa,IAAb;AAEA,eAAAC,IAAA,GAAO,CAAP;AAEA,eAAAC,YAAA,GAAeC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAf;AASN;;AAzB2B;AAAA;AAAA,4CA2B+C;AAAA;;AAAA,gBAApDH,IAAoD,uEAAxC,KAAKA,IAAmC;AAAA,gBAA7BF,OAA6B,uEAAd,KAAKA,OAAS;AAEvE,iBAAKxB,GAAL,CAASf,GAAT,CAAa,KAAKmC,eAAL,GAAuB,QAAvB,GAAkCM,IAAlC,GAAyC,WAAzC,GAAuDF,OAAvD,GAAiE,gBAAjE,GAAoF,KAAKD,WAAtG,EACKrD,SADL,CAEQ,UAAC4D,GAAD,EAAc;AACV;AACAF,sBAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCzB,WAAzC,CAAqD,GAArD;AACA,oBAAI,CAACiB,YAAL,GAAoBS,GAAG,CAAC3D,IAAxB;AACA,oBAAI,CAACmD,gBAAL,GAAwBQ,GAAG,CAACC,KAA5B;AACA,oBAAI,CAACN,IAAL,GAAYK,GAAG,CAACL,IAAhB;AACH,aART,EASQ,UAACO,GAAD,EAAc;AACV1D,qBAAO,CAAC2D,KAAR,CAAcD,GAAd;AACH,aAXT;AAaH;AA1C2B;AAAA;AAAA,0CA4CLtE,EA5CK,EA4CI;AAAA;;AAC5B,iBAAKsC,GAAL,CAASf,GAAT,CAAa,KAAKmC,eAAL,GAAuB,GAAvB,GAA6B1D,EAA7B,GAAkC,OAA/C,EACKQ,SADL,CAEQ,UAAC4D,GAAD,EAAc;AACV,oBAAI,CAACrD,WAAL,GAAmBqD,GAAG,CAAC3D,IAAJ,CAASW,KAA5B;AACA,oBAAI,CAACwC,gBAAL,GAAwBQ,GAAG,CAACC,KAA5B;AACH,aALT,EAMQ,UAACC,GAAD,EAAc;AACV1D,qBAAO,CAAC2D,KAAR,CAAcD,GAAd;AACH,aART;AAUH;AAvD2B;AAAA;AAAA,8CAyDD;AAAA;;AACvB,iBAAKhC,GAAL,CAASkC,GAAT,CAAa,KAAKd,eAAL,GAAuB,GAAvB,GAA6B,KAAK3C,WAAL,CAAiBf,EAA3D,EAA+D;AAC3DoB,mBAAK,EAAE,KAAKL,WAD+C;AAE3D0D,oBAAM,EAAE;AAFmD,aAA/D,EAIGjE,SAJH,CAKI,UAAC4D,GAAD,EAAc;AACV,oBAAI,CAACb,KAAL,CAAWmB,OAAX,CAAmBN,GAAG,CAACvC,OAAvB,EAAgC,eAAhC,EAAiD,KAAjD;;AACA,oBAAI,CAAC4B,UAAL,CAAgBkB,IAAhB;;AACA,oBAAI,CAACnC,eAAL,CAAqB,CAArB;AACH,aATL;AAWH;AArE2B;AAAA;AAAA,8CAuED;AAAA;;AACvB,iBAAKF,GAAL,CAASf,GAAT,CAAa,KAAKmC,eAAL,GAAuB,SAApC,EACKlD,SADL,CAEQ,UAAC4D,GAAD,EAAc;AACV,oBAAI,CAACrD,WAAL,GAAgC,EAAhC;AACA,oBAAI,CAAC6C,gBAAL,GAAwBQ,GAAG,CAACC,KAA5B;AACH,aALT;AAOH;AA/E2B;AAAA;AAAA,6CAiFF;AAAA;;AACtB,iBAAK/B,GAAL,CAASsC,IAAT,CAAc,KAAKlB,eAAnB,EAAoC;AAChCtC,mBAAK,EAAE,KAAKL,WADoB;AAEhC0D,oBAAM,EAAE;AAFwB,aAApC,EAIGjE,SAJH,CAKI,UAAC4D,GAAD,EAAc;AACV,oBAAI,CAACb,KAAL,CAAWmB,OAAX,CAAmBN,GAAG,CAACvC,OAAvB,EAAgC,eAAhC,EAAiD,KAAjD;;AACA,oBAAI,CAAC4B,UAAL,CAAgBkB,IAAhB;;AACA,oBAAI,CAACnC,eAAL,CAAqB,CAArB;AACH,aATL;AAWH;AA7F2B;AAAA;AAAA,4CA+FGxC,EA/FH,EA+FY;;;;;;;;;;AACpB,6BAAM,KAAKsD,KAAL,CAAWuB,YAAX,CAClB,yBADkB,CAAN;;;AAAVC,6B;;2BAGFA,O;;;;;AACA,2BAAKxC,GAAL,WAAgB,KAAKoB,eAAL,GAAuB,GAAvB,GAA6B1D,EAA7C,EAAiD,EAAjD,EACKQ,SADL,CAEQ,UAAC4D,GAAD,EAAc;AACV,8BAAI,CAACb,KAAL,CAAWmB,OAAX,CAAmBN,GAAG,CAACvC,OAAvB,EAAgC,eAAhC,EAAiD,KAAjD;;AACA,8BAAI,CAACW,eAAL,CAAqB,CAArB;AACH,uBALT;;;;;;;;;;;;;;AAUP;AA9G2B;;AAAA;AAAA,S;;;;gBAbxB;;gBAGA;;gBACA;;gBALA;;gBAMA;;;;AAQKa,yBAAmB,6DAH/B,iEAAW;AACR0B,kBAAU,EAAE;AADJ,OAAX,CAG+B,GAAnB1B,mBAAmB,CAAnB","file":"user-profiles-user-profiles-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/user-profiles'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"userProfilesService.storeUserProfile()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!userProfilesService.userProfilesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'PERFILES DE USUARIOS' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-user-profiles-form #userProfileForm [model]=\\\"userProfilesService.userProfile\\\"></app-user-profiles-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  UserProfiles duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/user-profiles'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"userProfilesService.updateUserProfile()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!userProfilesService.userProfilesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'PERFILES DE USUARIOS' | titlecase}}: {{ userProfilesService.userProfile?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-user-profiles-form #userProfileForm [model]=\\\"userProfilesService.userProfile\\\"></app-user-profiles-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #userProfilesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- user_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'USUARIO' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"user_id\\\"\\r\\n                          id=\\\"user_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.user\\\"\\r\\n                          [items]=\\\"userProfilesService.userProfileLists.User\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('USUARIOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('USUARIOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setUserId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.user_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"userProfilesForm.form.controls['user_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end user_id -->\\r\\n\\r\\n\\r\\n    <!-- syst_city_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'CIUDADE' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"syst_city_id\\\"\\r\\n                          id=\\\"syst_city_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.syst_city\\\"\\r\\n                          [items]=\\\"userProfilesService.userProfileLists.SystCity\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CIUDADES' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('CIUDADES' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setSystCityId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_city_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"userProfilesForm.form.controls['syst_city_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end syst_city_id -->\\r\\n\\r\\n\\r\\n    <!-- syst_region_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'DEPARTAMENTO' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"syst_region_id\\\"\\r\\n                          id=\\\"syst_region_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.syst_region\\\"\\r\\n                          [items]=\\\"userProfilesService.userProfileLists.SystRegion\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('DEPARTAMENTOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('DEPARTAMENTOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setSystRegionId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_region_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"userProfilesForm.form.controls['syst_region_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end syst_region_id -->\\r\\n\\r\\n\\r\\n    <!-- syst_country_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'PAISE' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"syst_country_id\\\"\\r\\n                          id=\\\"syst_country_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.syst_country\\\"\\r\\n                          [items]=\\\"userProfilesService.userProfileLists.SystCountry\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('PAISES' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('PAISES' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setSystCountryId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_country_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"userProfilesForm.form.controls['syst_country_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end syst_country_id -->\\r\\n\\r\\n\\r\\n            <!-- name -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"name\\\"\\r\\n                            id=\\\"name-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"userProfilesForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end name -->\\r\\n\\r\\n\\r\\n            <!-- address -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'DORECCIÓN' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.address\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"address\\\"\\r\\n                            id=\\\"address-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.address\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"userProfilesForm.form.controls['address']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end address -->\\r\\n\\r\\n\\r\\n            <!-- phone -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TELÉFONO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.phone\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"phone\\\"\\r\\n                            id=\\\"phone-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.phone\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"userProfilesForm.form.controls['phone']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end phone -->\\r\\n\\r\\n\\r\\n            <!-- avatar -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'AVATAR' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.avatar\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"avatar\\\"\\r\\n                            id=\\\"avatar-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.avatar\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"userProfilesForm.form.controls['avatar']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end avatar -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'PERFILES DE USUARIOS' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"user-profiles/create\\\"\\r\\n                 primaryText=\\\"Crear {{'PERFILES DE USUARIOS' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                       [placeholder]=\\\"'Buscar ' + ('PERFILES DE USUARIOS' | lowercase )\\\"\\r\\n                       (ionCancel)=\\\"this.userProfilesService.searchValue = ''; userProfilesService.getUserProfiles()\\\"\\r\\n                       (keyup.enter)=\\\"userProfilesService.getUserProfiles()\\\"\\r\\n                       [(ngModel)]=\\\"userProfilesService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && userProfilesService.userProfiles?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let userProfile of userProfilesService.userProfiles; let index = index\\\">\\r\\n            <ion-list>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ userProfile?.name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'DORECCIÓN' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ userProfile?.address }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ userProfile?.phone }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'AVATAR' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ userProfile?.avatar }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'USUARIOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/users/{{ userProfile?.user?.id }}/edit\\\">{{ userProfile?.user?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CIUDADES' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/syst-cities/{{ userProfile?.syst_city?.id }}/edit\\\">{{ userProfile?.syst_city?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'DEPARTAMENTOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/syst-regions/{{ userProfile?.syst_region?.id }}/edit\\\">{{ userProfile?.syst_region?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PAISES' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/syst-countries/{{ userProfile?.syst_country?.id }}/edit\\\">{{ userProfile?.syst_country?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/user-profiles/' + userProfile?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"userProfilesService.deleteUserProfile(userProfile?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !userProfilesService.userProfiles?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'PERFILES DE USUARIOS' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/user-profiles/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\r\\n                Crear {{'PERFILES DE USUARIOS' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"userProfilesService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"userProfilesService.getUserProfiles(userProfilesService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"userProfilesService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{userProfilesService.meta.current_page}}\\r\\n                /{{userProfilesService.meta.last_page}} {{userProfilesService.meta.from}}-{{userProfilesService.meta.to}}\\r\\n                /{{userProfilesService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"userProfilesService.getUserProfiles(userProfilesService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"userProfilesService.meta.current_page == userProfilesService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"PERFILES DE USUARIOS\\\"></app-main-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/user-profiles/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'PERFILES DE USUARIOS'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/user-profiles/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'PERFILES DE USUARIOS' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcHJvZmlsZXMvdXNlci1wcm9maWxlcy1jcmVhdGUvdXNlci1wcm9maWxlcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {UserProfilesService} from \"../user-profiles.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {UserProfile} from \"../user-profile\";\r\nimport {UserProfilesFormComponent} from \"../user-profiles-form/user-profiles-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-user-profiles-create',\r\n    templateUrl: './user-profiles-create.component.html',\r\n    styleUrls: ['./user-profiles-create.component.scss']\r\n})\r\nexport class UserProfilesCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('userProfileForm') userProfileForm: UserProfilesFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public userProfilesService: UserProfilesService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.userProfileForm.userProfilesForm.valueChanges.subscribe((data) => {\r\n            this.userProfilesService.userProfilesFormValid.next(this.userProfileForm.userProfilesForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.userProfilesService.createUserProfile();\r\n        this.userProfilesService.userProfile = <UserProfile>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcHJvZmlsZXMvdXNlci1wcm9maWxlcy1kdXBsaWNhdGUvdXNlci1wcm9maWxlcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-profiles-duplicate',\r\n  templateUrl: './user-profiles-duplicate.component.html',\r\n  styleUrls: ['./user-profiles-duplicate.component.scss'],\r\n})\r\nexport class UserProfilesDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcHJvZmlsZXMvdXNlci1wcm9maWxlcy1lZGl0L3VzZXItcHJvZmlsZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {UserProfilesService} from \"../user-profiles.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {UserProfile} from \"../user-profile\";\r\nimport {UserProfilesFormComponent} from \"../user-profiles-form/user-profiles-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-user-profiles-edit',\r\n  templateUrl: './user-profiles-edit.component.html',\r\n  styleUrls: ['./user-profiles-edit.component.scss']\r\n})\r\nexport class UserProfilesEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('userProfileForm') userProfileForm: UserProfilesFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: UserProfile = null;\r\n\r\n  constructor(\r\n      public userProfilesService: UserProfilesService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.userProfilesService.editUserProfile(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.userProfileForm.userProfilesForm.valueChanges.subscribe((data) => {\r\n          this.userProfilesService.userProfilesFormValid.next(this.userProfileForm.userProfilesForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcHJvZmlsZXMvdXNlci1wcm9maWxlcy1mb3JtL3VzZXItcHJvZmlsZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {UserProfile} from \"../user-profile\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {UserProfilesService} from \"../user-profiles.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-user-profiles-form',\r\n    templateUrl: './user-profiles-form.component.html',\r\n    styleUrls: ['./user-profiles-form.component.scss']\r\n})\r\nexport class UserProfilesFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: UserProfile = <UserProfile>{};\r\n\r\n    @ViewChild('userProfilesForm') userProfilesForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'user_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('USUARIO') + ' es obligatorio.'},\r\n        ],\r\n        'syst_city_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CIUDAD') + ' es obligatorio.'},\r\n        ],\r\n        'syst_region_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DEPARTAMENTO') + ' es obligatorio.'},\r\n        ],\r\n        'syst_country_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PAÍS') + ' es obligatorio.'},\r\n        ],\r\n        'address': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DORECCIÓN') + ' es obligatorio.'},\r\n        ],\r\n        'phone': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO') + ' es obligatorio.'},\r\n        ],\r\n        'avatar': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('AVATAR') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public userProfilesService: UserProfilesService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setUserId\r\n\r\n    setUserId(event: any) {\r\n        this.userProfilesService.userProfile.user_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setUserId\r\n\r\n\r\n    // set setSystCityId\r\n\r\n    setSystCityId(event: any) {\r\n        this.userProfilesService.userProfile.syst_city_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setSystCityId\r\n\r\n\r\n    // set setSystRegionId\r\n\r\n    setSystRegionId(event: any) {\r\n        this.userProfilesService.userProfile.syst_region_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setSystRegionId\r\n\r\n\r\n    // set setSystCountryId\r\n\r\n    setSystCountryId(event: any) {\r\n        this.userProfilesService.userProfile.syst_country_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setSystCountryId\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcHJvZmlsZXMvdXNlci1wcm9maWxlcy1saXN0L3VzZXItcHJvZmlsZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { UserProfilesService} from \"../user-profiles.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-user-profiles-list',\r\n    templateUrl: './user-profiles-list.component.html',\r\n    styleUrls: ['./user-profiles-list.component.scss'],\r\n})\r\nexport class UserProfilesListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public userProfilesService: UserProfilesService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.userProfilesService.getUserProfiles();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserProfilesPage } from './user-profiles.page';\r\nimport {UserProfilesEditComponent} from \"./user-profiles-edit/user-profiles-edit.component\";\r\nimport {UserProfilesCreateComponent} from \"./user-profiles-create/user-profiles-create.component\";\r\nimport {UserProfilesListComponent} from \"./user-profiles-list/user-profiles-list.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: UserProfilesPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        component: UserProfilesListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      component: UserProfilesCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: UserProfilesEditComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class UserProfilesPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {UserProfilesPageRoutingModule} from './user-profiles-routing.module';\r\n\r\nimport { UserProfilesPage} from './user-profiles.page';\r\nimport { UserProfilesListComponent} from \"./user-profiles-list/user-profiles-list.component\";\r\nimport { UserProfilesCreateComponent} from \"./user-profiles-create/user-profiles-create.component\";\r\nimport { UserProfilesDuplicateComponent} from \"./user-profiles-duplicate/user-profiles-duplicate.component\";\r\nimport { UserProfilesEditComponent} from \"./user-profiles-edit/user-profiles-edit.component\";\r\nimport { UserProfilesFormComponent} from \"./user-profiles-form/user-profiles-form.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        UserProfilesPageRoutingModule\r\n    ],\r\n    declarations: [\r\n        UserProfilesPage,\r\n        UserProfilesListComponent,\r\n        UserProfilesCreateComponent,\r\n        UserProfilesDuplicateComponent,\r\n        UserProfilesEditComponent,\r\n        UserProfilesFormComponent,\r\n    ]\r\n})\r\nexport class UserProfilesPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcHJvZmlsZXMvdXNlci1wcm9maWxlcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-user-profiles',\r\n  templateUrl: './user-profiles.page.html',\r\n  styleUrls: ['./user-profiles.page.scss'],\r\n})\r\nexport class UserProfilesPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport { UserProfile, UserProfileLists } from \"./user-profile\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserProfilesService {\r\n\r\n    public userProfilesUrl = 'user-profiles';\r\n    public userProfilesFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public userProfiles: UserProfile[] = [];\r\n    public userProfile: UserProfile = <UserProfile>{};\r\n    public userProfileLists: UserProfileLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n\r\n    public getUserProfiles(page: any = this.page, perPage: any = this.perPage) {\r\n\r\n        this.api.get(this.userProfilesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.userProfiles = res.data;\r\n                    this.userProfileLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editUserProfile(id: any) {\r\n        this.api.get(this.userProfilesUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.userProfile = res.data.model;\r\n                    this.userProfileLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateUserProfile() {\r\n        this.api.put(this.userProfilesUrl + '/' + this.userProfile.id, {\r\n            model: this.userProfile,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getUserProfiles(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createUserProfile() {\r\n        this.api.get(this.userProfilesUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.userProfile = <UserProfile>{};\r\n                    this.userProfileLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeUserProfile() {\r\n        this.api.post(this.userProfilesUrl, {\r\n            model: this.userProfile,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getUserProfiles(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteUserProfile(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.userProfilesUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getUserProfiles(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n}\r\n"]}