{"version":3,"sources":["webpack:///src/app/auth/auth.page.html","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/logout/logout.component.html","webpack:///src/app/auth/password-forgot/password-forgot.component.html","webpack:///src/app/auth/password-reset/password-reset.component.html","webpack:///src/app/auth/register-confirm/register-confirm.component.html","webpack:///src/app/auth/register/register.component.html","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/auth.page.scss","webpack:///src/app/auth/auth.page.ts","webpack:///src/app/auth/login/login.component.scss","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/logout/logout.component.scss","webpack:///src/app/auth/logout/logout.component.ts","webpack:///src/app/auth/password-forgot/password-forgot.component.scss","webpack:///src/app/auth/password-forgot/password-forgot.component.ts","webpack:///src/app/auth/password-reset/password-reset.component.scss","webpack:///src/app/auth/password-reset/password-reset.component.ts","webpack:///src/app/auth/register-confirm/register-confirm.component.scss","webpack:///src/app/auth/register-confirm/register-confirm.component.ts","webpack:///src/app/auth/register/register.component.scss","webpack:///src/app/auth/register/register.component.ts"],"names":["routes","path","component","AuthPageRoutingModule","imports","forChild","exports","AuthPageModule","declarations","AuthPage","selector","template","LoginComponent","router","route","formBuilder","platform","api","toast","alert","auth","splitPanel","storage","version","isLoading","environment","token","model","email","password","remember","show","next","snapshot","paramMap","get","present","syncPost","serverUrl","then","res","message","set","data","access_token","syncGet","user","acl","checkToken","startCheckExpirationToken","navigateByUrl","err","is","LogoutComponent","logout","PasswordForgotComponent","resetOk","post","subscribe","PasswordResetComponent","password_confirmation","findResetPasswordRequest","put","input","passwordField","document","getElementById","passwordButton","setAttribute","getAttribute","RegisterConfirmComponent","RegisterComponent","name","first_name","last_name","accept_terms_conditions","registered","registerForm","invalid","markFormGroupTouched","formGroup","Object","values","controls","forEach","control","markAsTouched"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,UAAMA,MAAM,GAAW,CACnB;AACIC,YAAI,EAAE,EADV;AAEIC,iBAAS,EAAE;AAFf,OADmB,EAKnB;AACID,YAAI,EAAE,OADV;AAEIC,iBAAS,EAAE;AAFf,OALmB,EASnB;AACID,YAAI,EAAE,QADV;AAEIC,iBAAS,EAAE;AAFf,OATmB,EAanB;AACID,YAAI,EAAE,cADV;AAEIC,iBAAS,EAAE;AAFf,OAbmB,EAiBnB;AACID,YAAI,EAAE,UADV;AAEIC,iBAAS,EAAE;AAFf,OAjBmB,EAqBnB;AACID,YAAI,EAAE,yBADV;AAEIC,iBAAS,EAAE;AAFf,OArBmB,EAyBnB;AACID,YAAI,EAAE,iBADV;AAEIC,iBAAS,EAAE;AAFf,OAzBmB,EA6BnB;AACID,YAAI,EAAE,uBADV;AAEIC,iBAAS,EAAE;AAFf,OA7BmB,CAAvB;;UAuCaC,qBAAqB;AAAA;AAAA,O;;AAArBA,2BAAqB,6DAJjC,+DAAS;AACNC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADH;AAENM,eAAO,EAAE,CAAC,4DAAD;AAFH,OAAT,CAIiC,GAArBH,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCdAI,cAAc;AAAA;AAAA,O;;AAAdA,oBAAc,6DAlB1B,+DAAS;AACNH,eAAO,EAAE,CACL,4DADK,EAEL,0DAFK,EAGL,0DAHK,EAIL,mEAJK,EAKL,0EALK,CADH;AAQNI,oBAAY,EAAE,CACV,mDADU,EAEV,qEAFU,EAGV,+FAHU,EAIV,kGAJU,EAKV,+EALU,EAMV,sGANU,EAOV,yEAPU;AARR,OAAT,CAkB0B,GAAdD,cAAc,CAAd;;;;;;;;;;;;;;;;ACpCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFE,QAAQ;AAEnB,4BAAc;AAAA;AAAG;;AAFE;AAAA;AAAA,qCAIR,CACV;AALkB;;AAAA;AAAA,S;;;;;;AAARA,cAAQ,6DALpB,gEAAU;AACTC,gBAAQ,EAAE,UADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,0FAFS;;;;AAAA,OAAV,CAKoB,GAARF,QAAQ,CAAR;;;;;;;;;;;;;;;;ACPb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCoBFG,cAAc;AAiBvB,gCACYC,MADZ,EAEYC,KAFZ,EAGYC,WAHZ,EAIYC,QAJZ,EAKYC,GALZ,EAMYC,KANZ,EAOYC,KAPZ,EAQWC,IARX,EASWC,UATX,EAUWC,OAVX,EAUuC;AAAA;;AAT3B,eAAAT,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,GAAA,GAAAA,GAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACD,eAAAC,IAAA,GAAAA,IAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AAzBX,eAAAC,OAAA,GAAyB,sEAAYA,OAArC;AAEA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,WAAA,GAAc,qEAAd;AAEA,eAAAC,KAAA,GAAa,IAAb;AAEA,eAAAC,KAAA,GAAa;AACTC,iBAAK,EAAE,EADE;AAETC,oBAAQ,EAAE,EAFD;AAGTC,oBAAQ,EAAE;AAHD,WAAb,CAkBuC,CAEnC;AACH;;AA9BsB;AAAA;AAAA,qCAgCZ,CAEV;AAlCsB;AAAA;AAAA,6CAoCJ;AACf,iBAAKT,UAAL,CAAgBU,IAAhB,CAAqBC,IAArB,CAA0B,KAA1B;;AACA,gBAAI,KAAKlB,KAAL,CAAWmB,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,OAAjC,CAAJ,EAA+C;AAC3C,mBAAKjB,KAAL,CAAWkB,OAAX,CAAmB,8CAAnB,EAAmE,YAAnE;AACH;AAEJ;AA1CsB;AAAA;AAAA,kCA4CT;;;;;;;;AACV,2BAAKnB,GAAL,CAASoB,QAAT,CAAkB,sEAAYC,SAAZ,GAAwB,iBAA1C,EAA6D,KAAKX,KAAlE,EACKY,IADL,CAEQ,UAACC,GAAD,EAAc;AACV,6BAAI,CAACtB,KAAL,CAAWkB,OAAX,CAAmBI,GAAG,CAACC,OAAvB,EAAgC,eAAhC;;AACA,6BAAI,CAACnB,OAAL,CAAaoB,GAAb,CAAiB,OAAjB,EAA0BF,GAAG,CAACG,IAAJ,CAASC,YAAnC;;AACA,6BAAI,CAAC3B,GAAL,CAAS4B,OAAT,CAAiB,sEAAYP,SAAZ,GAAwB,0BAAxB,GAAqDE,GAAG,CAACG,IAAJ,CAASC,YAA/E,EACKL,IADL,CAEQ,UAAOC,GAAP;AAAA,iCAAoB;AAAA;AAAA;AAAA;AAAA;AAChB,yCAAKlB,OAAL,CAAaoB,GAAb,CAAiB,MAAjB,EAAyBF,GAAG,CAACG,IAAJ,CAASG,IAAlC;AACA,yCAAKxB,OAAL,CAAaoB,GAAb,CAAiB,KAAjB,EAAwBF,GAAG,CAACG,IAAJ,CAASI,GAAjC;;AACA,wCAAI,CAAC,KAAK3B,IAAL,CAAU4B,UAAf,EAA2B;AACvB,2CAAK5B,IAAL,CAAU6B,yBAAV;AACH;;AACD,yCAAKpC,MAAL,CAAYqC,aAAZ,CAA0B,GAA1B;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAApB;AAAA,yBAFR;AAUH,uBAfT,EAgBQ,UAACC,GAAD,EAAc,CAEb,CAlBT;;;;;;;;;AAoBH;AAjEsB;AAAA;AAAA,8BAmEd;AACL,mBAAO,CAAC,KAAKnC,QAAL,CAAcoC,EAAd,CAAiB,SAAjB,CAAR;AACH;AArEsB;;AAAA;AAAA,S;;;;gBAnBH;;gBAAhB;;gBACA;;gBACmB;;gBAInB;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;;;;;gBAuBH,uD;AAAS,iBAAC,WAAD;;;AAfDxC,oBAAc,6DAL1B,gEAAU;AACTF,gBAAQ,EAAE,WADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,sGAFS;;;;AAAA,OAAV,CAK0B,GAAdC,cAAc,CAAd;;;;;;;;;;;;;;;;ACpBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCQFyC,eAAe;AAE1B,iCACWjC,IADX,EAC4B;AAAA;;AAAjB,eAAAA,IAAA,GAAAA,IAAA;AACN;;AAJqB;AAAA;AAAA,qCAMf,CAAE;AANa;AAAA;AAAA,6CAQP;AACjB,iBAAKA,IAAL,CAAUkC,MAAV;AACD;AAVyB;;AAAA;AAAA,S;;;;gBAPpB;;;;AAOKD,qBAAe,6DAL3B,gEAAU;AACT3C,gBAAQ,EAAE,YADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,wGAFS;;;;AAAA,OAAV,CAK2B,GAAf0C,eAAe,CAAf;;;;;;;;;;;;;;;;ACRb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBFE,uBAAuB;AAehC,yCACY1C,MADZ,EAEYC,KAFZ,EAGYC,WAHZ,EAIYC,QAJZ,EAKYC,GALZ,EAMYC,KANZ,EAOYC,KAPZ,EAQWC,IARX,EASWC,UATX,EASwC;AAAA;;AAR5B,eAAAR,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,GAAA,GAAAA,GAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACD,eAAAC,IAAA,GAAAA,IAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AApBX,eAAAE,OAAA,GAAyB,sEAAYA,OAArC;AAEA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,WAAA,GAAc,qEAAd;AAEA,eAAAE,KAAA,GAAa;AACTC,iBAAK,EAAE;AADE,WAAb;AAIA,eAAA4B,OAAA,GAAU,KAAV;AAaC;;AA1B+B;AAAA;AAAA,qCA4BrB;AACP,iBAAKnC,UAAL,CAAgBU,IAAhB,CAAqBC,IAArB,CAA0B,KAA1B;AACH;AA9B+B;AAAA;AAAA,mDAoCP;AAAA;;AACrB,iBAAKf,GAAL,CAASwC,IAAT,CAAc,qBAAd,EAAqC;AAAC7B,mBAAK,EAAE,KAAKD,KAAL,CAAWC;AAAnB,aAArC,EACK8B,SADL,CAEQ,UAAClB,GAAD,EAAc;AACV,oBAAI,CAACtB,KAAL,CAAWkB,OAAX,CAAmBI,GAAG,CAACC,OAAvB,EAAgC,eAAhC;;AACA,oBAAI,CAACe,OAAL,GAAe,IAAf;AACH,aALT,EAMQ,UAACL,GAAD,EAAc;AACV,oBAAI,CAACK,OAAL,GAAe,KAAf;AACH,aART;AAUH;AA/C+B;AAAA;AAAA,8BAgCvB;AACL,mBAAO,CAAC,KAAKxC,QAAL,CAAcoC,EAAd,CAAiB,SAAjB,CAAR;AACH;AAlC+B;;AAAA;AAAA,S;;;;gBAbZ;;gBAAhB;;gBAFA;;gBAGA;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;;;;;gBASH,uD;AAAS,iBAAC,YAAD;;;AAFDG,6BAAuB,6DALnC,gEAAU;AACP7C,gBAAQ,EAAE,qBADH;AAEPC,gBAAQ,EAAR;AAAA;AAAA,0HAFO;;;;AAAA,OAAV,CAKmC,GAAvB4C,uBAAuB,CAAvB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBFI,sBAAsB;AAmB/B,wCACY9C,MADZ,EAEYC,KAFZ,EAGYC,WAHZ,EAIYC,QAJZ,EAKYC,GALZ,EAMYC,KANZ,EAOYC,KAPZ,EAQWC,IARX,EASWC,UATX,EASwC;AAAA;;AAR5B,eAAAR,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,GAAA,GAAAA,GAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACD,eAAAC,IAAA,GAAAA,IAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AAvBX,eAAAE,OAAA,GAAyB,uEAAYA,OAArC;AAEA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,WAAA,GAAc,sEAAd;AAEA,eAAA+B,OAAA,GAAU,KAAV;AACA,eAAA9B,KAAA,GAAa,IAAb;AAEA,eAAAC,KAAA,GAAa;AACTE,oBAAQ,EAAE,EADD;AAET+B,iCAAqB,EAAE,EAFd;AAGTlC,iBAAK,EAAE;AAHE,WAAb;AAiBC;;AA9B8B;AAAA;AAAA,qCAgCpB,CACV;AAjC8B;AAAA;AAAA,6CAmCZ;AACf,iBAAK8B,OAAL,GAAe,KAAf;AACA,iBAAKnC,UAAL,CAAgBU,IAAhB,CAAqBC,IAArB,CAA0B,KAA1B;AACA,iBAAKN,KAAL,GAAa,KAAKZ,KAAL,CAAWmB,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,OAAjC,CAAb;AACA,iBAAK0B,wBAAL;AACH;AAxC8B;AAAA;AAAA,0CA0Cf;AAAA;;AACd,iBAAKlC,KAAL,CAAWD,KAAX,GAAmB,KAAKA,KAAxB;AACE,iBAAKT,GAAL,CAAS6C,GAAT,CAAa,qBAAb,EAAoC,KAAKnC,KAAzC,EACK+B,SADL,CAEQ,UAAClB,GAAD,EAAc;AACV,oBAAI,CAACtB,KAAL,CAAWkB,OAAX,CAAmBI,GAAG,CAACC,OAAvB,EAAgC,eAAhC;;AACA,oBAAI,CAAC5B,MAAL,CAAYqC,aAAZ,CAA0B,aAA1B;AACH,aALT,EAMQ,UAACC,GAAD,EAAc;AACV,oBAAI,CAACK,OAAL,GAAe,KAAf;AACH,aART;AAUH;AAtD8B;AAAA;AAAA,uCAwDlBO,KAxDkB,EAwDR;AACnB,gBAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,KAAxB,CAAtB;AACA,gBAAMI,cAAc,GAAGF,QAAQ,CAACC,cAAT,CAAwBH,KAAK,GAAG,OAAhC,CAAvB;AACAC,yBAAa,CAACI,YAAd,CAA2B,MAA3B,EAAoCJ,aAAa,CAACK,YAAd,CAA2B,MAA3B,MAAuC,UAAxC,GAAsD,MAAtD,GAA+D,UAAlG;AACAF,0BAAc,CAACC,YAAf,CAA4B,MAA5B,EAAqCD,cAAc,CAACE,YAAf,CAA4B,MAA5B,MAAwC,aAAzC,GAA0D,iBAA1D,GAA8E,aAAlH;AACH;AA7D8B;AAAA;AAAA,qDA+DJ;AAAA;;AACvB,iBAAKpD,GAAL,CAASkB,GAAT,CAAa,yBAAyB,KAAKT,KAA3C,EACKgC,SADL,CAEQ,UAAClB,GAAD,EAAc;AACV,oBAAI,CAACtB,KAAL,CAAWkB,OAAX,CAAmBI,GAAG,CAACC,OAAvB,EAAgC,YAAhC;;AACA,oBAAI,CAACe,OAAL,GAAe,IAAf;AACH,aALT,EAMQ,UAACL,GAAD,EAAc;AACV,oBAAI,CAACK,OAAL,GAAe,KAAf;AACH,aART;AAUH;AA1E8B;;AAAA;AAAA,S;;;;gBAfX;;gBAAhB;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;;;;;gBAWH,uD;AAAS,iBAAC,mBAAD;;;AAHDG,4BAAsB,6DALlC,gEAAU;AACPjD,gBAAQ,EAAE,oBADH;AAEPC,gBAAQ,EAAR;AAAA;AAAA,wHAFO;;;;AAAA,OAAV,CAKkC,GAAtBgD,sBAAsB,CAAtB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFW,wBAAwB;AAEnC,4CAAc;AAAA;AAAG;;AAFkB;AAAA;AAAA,qCAIxB,CAAE;AAJsB;;AAAA;AAAA,S;;;;;;AAAxBA,8BAAwB,6DALpC,gEAAU;AACT5D,gBAAQ,EAAE,sBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,4HAFS;;;;AAAA,OAAV,CAKoC,GAAxB2D,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACPb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBFC,iBAAiB;AAqB5B,mCACY1D,MADZ,EAEYC,KAFZ,EAGYC,WAHZ,EAIYC,QAJZ,EAKYC,GALZ,EAMYC,KANZ,EAOYC,KAPZ,EAQWC,IARX,EASWC,UATX,EASwC;AAAA;;AAR5B,eAAAR,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,GAAA,GAAAA,GAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACD,eAAAC,IAAA,GAAAA,IAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AA1BX,eAAAE,OAAA,GAAyB,sEAAYA,OAArC;AAEA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,WAAA,GAAc,qEAAd;AAEA,eAAAE,KAAA,GAAa;AACX6C,gBAAI,EAAE,EADK;AAEXC,sBAAU,EAAE,EAFD;AAGXC,qBAAS,EAAE,EAHA;AAIX9C,iBAAK,EAAE,EAJI;AAKXC,oBAAQ,EAAE,EALC;AAMX+B,iCAAqB,EAAE,EANZ;AAOXe,mCAAuB,EAAE;AAPd,WAAb;AAUA,eAAAC,UAAA,GAAa,KAAb;AAYK;;AA/BuB;AAAA;AAAA,qCAiCjB,CAEV;AAnC2B;AAAA;AAAA,6CAqCT;AACjB,iBAAKvD,UAAL,CAAgBU,IAAhB,CAAqBC,IAArB,CAA0B,KAA1B;AACD;AAvC2B;AAAA;AAAA,qCA6CX;;;;;;;;2BAEX,KAAK6C,YAAL,CAAkBC,O;;;;;AACpB,2BAAKC,oBAAL,CAA0B,KAAKF,YAA/B;;;;AAIF,2BAAKlD,KAAL,CAAW6C,IAAX,GAAkB,KAAK7C,KAAL,CAAW8C,UAAX,GAAwB,GAAxB,GAA8B,KAAK9C,KAAL,CAAW+C,SAA3D;AAEA,2BAAKzD,GAAL,CAASwC,IAAT,CAAc,eAAd,EAA+B,KAAK9B,KAApC,EACK+B,SADL,CAEQ,UAAClB,GAAD,EAAc;AACZ,8BAAI,CAACtB,KAAL,CAAWkB,OAAX,CAAmBI,GAAG,CAACC,OAAvB,EAAgC,eAAhC;;AACA,8BAAI,CAACmC,UAAL,GAAkB,IAAlB;AACD,uBALT,EAMQ,UAACzB,GAAD,EAAc,CAEb,CART;;;;;;;;;AAUD;AAhE2B;AAAA;AAAA,uCAkEfY,KAlEe,EAkEL;AACrB,gBAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,KAAxB,CAAtB;AACA,gBAAMI,cAAc,GAAIF,QAAQ,CAACC,cAAT,CAAwBH,KAAK,GAAG,OAAhC,CAAxB;AACAC,yBAAa,CAACI,YAAd,CAA2B,MAA3B,EAAoCJ,aAAa,CAACK,YAAd,CAA2B,MAA3B,MAAuC,UAAxC,GAAuD,MAAvD,GAAgE,UAAnG;AACAF,0BAAc,CAACC,YAAf,CAA4B,MAA5B,EAAqCD,cAAc,CAACE,YAAf,CAA4B,MAA5B,MAAwC,aAAzC,GAA2D,iBAA3D,GAA+E,aAAnH;AACD;AAED;;;;;AAzE4B;AAAA;AAAA,+CA6ECW,SA7ED,EA6EuB;AAAA;;AAC3CC,kBAAO,CAACC,MAAR,CAAeF,SAAS,CAACG,QAAzB,EAAmCC,OAAnC,CAA2C,UAAAC,OAAO,EAAI;AAC1DA,qBAAO,CAACC,aAAR;;AAEA,kBAAID,OAAO,CAACF,QAAZ,EAAsB;AACpB,sBAAI,CAACJ,oBAAL,CAA0BM,OAA1B;AACD;AACF,aANK;AAOP;AArF2B;AAAA;AAAA,oDAuFF;AAAA;;AACxB,iBAAKpE,GAAL,CAASwC,IAAT,CAAc,mBAAd,EAAmC;AACjC7B,mBAAK,EAAE,KAAKD,KAAL,CAAWC;AADe,aAAnC,EAGK8B,SAHL,CAIQ,UAAClB,GAAD,EAAc;AACd,oBAAI,CAACtB,KAAL,CAAWkB,OAAX,CAAmBI,GAAG,CAACC,OAAvB,EAAgC,eAAhC;AACC,aANT,EAOQ,UAACU,GAAD,EAAc,CAEb,CATT;AAWD;AAnG2B;AAAA;AAAA,8BAyCnB;AACP,mBAAO,CAAC,KAAKnC,QAAL,CAAcoC,EAAd,CAAiB,SAAjB,CAAR;AACD;AA3C2B;;AAAA;AAAA,S;;;;gBAbN;;gBAAhB;;gBAFA;;gBAGA;;gBACA;;gBACA;;gBACA;;gBACA;;gBACA;;;;;;gBASL,uD;AAAS,iBAAC,cAAD;;;AAFCmB,uBAAiB,6DAL7B,gEAAU;AACT7D,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,4GAFS;;;;AAAA,OAAV,CAK6B,GAAjB4D,iBAAiB,CAAjB","file":"auth-auth-module-es5.js","sourcesContent":["export default \"<ion-content fullscreen>\\n    <ion-grid>\\n        <ion-row>\\n            <ion-col class=\\\"ion-align-self-center\\\">\\n                <ion-button [routerLink]=\\\"['/registration']\\\" expand=\\\"block\\\" color=\\\"primary\\\">Register</ion-button>\\n\\n                <span class=\\\"divider line one-line\\\">or</span>\\n\\n                <span class=\\\"already\\\">Already a user?</span>\\n\\n                <ion-button [routerLink]=\\\"['/login']\\\" expand=\\\"block\\\" color=\\\"danger\\\">Sign In</ion-button>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-content no-bounce>\\n    <div class=\\\"login-background\\\"></div>\\n    <ion-grid class=\\\"ion-no-padding\\\">\\n        <ion-row class=\\\"ion-justify-content-center ion-no-padding\\\">\\n            <ion-col size-sm=\\\"8\\\"\\n                     size-lg=\\\"6\\\"\\n                     size-xl=\\\"4\\\"\\n                     class=\\\"ion-align-self-center ion-no-padding\\\">\\n                <div class=\\\"login-header ion-text-center\\\">\\n                    <h1 [hidden]=\\\"true\\\">{{environment.name}}</h1>\\n\\n                    <img [routerLink]=\\\"'/'\\\" src=\\\"assets/images/NoahApp/logo-light-square.png\\\"\\n                         style=\\\"max-height: 120px;\\\">\\n\\n                    <h6 style=\\\"margin-bottom: 0px;\\\">v-{{ version }}</h6>\\n                </div>\\n                <div class=\\\"login-container\\\">\\n                    <form #loginForm=\\\"ngForm\\\"\\n                          (ngSubmit)=\\\"login()\\\"\\n                          novalidate\\n                          autocomplete=\\\"off\\\">\\n                        <ion-list>\\n                            <ion-list-header>Ingresar</ion-list-header>\\n                            <ion-item lines=\\\"inset\\\">\\n                                <ion-label color=\\\"medium\\\"\\n                                           position=\\\"floating\\\">\\n                                    Correo electrónico\\n                                </ion-label>\\n                                <ion-input type=\\\"text\\\"\\n                                           name=\\\"email\\\"\\n                                           id=\\\"email-field\\\"\\n                                           email\\n                                           required\\n                                           [(ngModel)]=\\\"model.email\\\"\\n                                           autocomplete=\\\"email\\\"></ion-input>\\n                            </ion-item>\\n                            <ion-text color=\\\"danger\\\"\\n                                      [hidden]=\\\"(loginForm?.form?.controls?.email?.untouched || loginForm?.form?.controls?.email?.valid)\\\">\\n                                <span class=\\\"ion-padding\\\">Correo electónico no valido</span>\\n                            </ion-text>\\n                            <ion-item lines=\\\"inset\\\">\\n                                <ion-label color=\\\"medium\\\"\\n                                           position=\\\"floating\\\">\\n                                    Contraseña\\n                                </ion-label>\\n                                <ion-input type=\\\"password\\\"\\n                                           name=\\\"password\\\"\\n                                           id=\\\"password-field\\\"\\n                                           required\\n                                           minlength=\\\"6\\\"\\n                                           maxlength=\\\"16\\\"\\n                                           [(ngModel)]=\\\"model.password\\\"\\n                                           autocomplete=\\\"password\\\"></ion-input>\\n                            </ion-item>\\n                            <ion-text color=\\\"danger\\\"\\n                                      [hidden]=\\\"(loginForm?.form?.controls?.password?.untouched || loginForm?.form?.controls?.password?.valid)\\\">\\n                                <span class=\\\"ion-padding\\\">Contraseña no valida</span>\\n                            </ion-text>\\n                            <!--<ion-item class=\\\"ion-padding-top\\\"\\n                                      lines=\\\"none\\\">\\n                                <ion-label>Recordarme</ion-label>\\n                                <ion-checkbox slot=\\\"start\\\"\\n                                              id=\\\"remember-field\\\"\\n                                              name=\\\"remember\\\"\\n                                              [(ngModel)]=\\\"model.remember\\\"></ion-checkbox>\\n                            </ion-item>-->\\n                            <div style=\\\"height: 1rem;\\\"></div>\\n                        </ion-list>\\n                        <div class=\\\"ion-padding-horizontal\\\">\\n                            <ion-button\\n                                    type=\\\"submit\\\"\\n                                    [disabled]=\\\"loginForm?.form?.invalid || isLoading\\\"\\n                                    color=\\\"primary\\\"\\n                                    expand=\\\"block\\\">\\n                                Ingresar\\n                            </ion-button>\\n                        </div>\\n                        <div class=\\\"ion-padding-vertical ion-text-center\\\">\\n                            <ion-button type=\\\"button\\\"\\n                                        routerLink=\\\"/auth/register\\\"\\n                                        color=\\\"primary\\\"\\n                                        fill=\\\"clean\\\">\\n                                Registrarse\\n                            </ion-button>\\n                            <ion-button type=\\\"button\\\"\\n                                        color=\\\"primary\\\"\\n                                        routerLink=\\\"/auth/password-forgot\\\"\\n                                        fill=\\\"clean\\\">\\n                                Olvidaste tu contraseña?\\n                            </ion-button>\\n                        </div>\\n                    </form>\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-content>\\n\\n    <ion-grid>\\n        <ion-row>\\n            <ion-col>\\n                Saliendo del sistema...\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n\\n</ion-content>\\n\";","export default \"<ion-content no-bounce>\\n    <div class=\\\"login-background\\\"></div>\\n    <ion-grid class=\\\"ion-no-padding\\\">\\n        <ion-row class=\\\"ion-justify-content-center ion-no-padding\\\">\\n            <ion-col size-sm=\\\"8\\\"\\n                     size-lg=\\\"6\\\"\\n                     size-xl=\\\"4\\\"\\n                     class=\\\"ion-align-self-center ion-no-padding\\\">\\n                <div class=\\\"login-header ion-text-center\\\">\\n                    <h1 [hidden]=\\\"true\\\">{{environment.name}}</h1>\\n                    <a [routerLink]=\\\"'/landing'\\\">\\n                        <img src=\\\"assets/images/NoahApp/logo-light-square.png\\\"\\n                             style=\\\"max-height: 120px;\\\">\\n                    </a>\\n\\n                    <h6 style=\\\"margin-bottom: 0px;\\\">v-{{ version }}</h6>\\n                </div>\\n                <div class=\\\"login-container\\\"\\n                     *ngIf=\\\"resetOk\\\">\\n                    <ion-row class=\\\"ion-padding-horizontal\\\">\\n                        <ion-col class=\\\"ion-text-center\\\">\\n                            <ion-icon name=\\\"checkmark-circle-outline\\\"\\n                                      color=\\\"success\\\"\\n                                      class=\\\"icon-m ion-padding-vertical\\\"></ion-icon>\\n                            <h2>Soliciaste restablecer tu contraseña!</h2>\\n                            <p class=\\\"ion-text-justify\\\">Por favor, confirma en tu correo electrónico el enlace que te\\n                                                        hemos enviado para restablecer tu contraseña.\\n                            </p>\\n                            <p class=\\\"ion-text-justify\\\">Si en cinco minútos no has recibido el email haz click en el\\n                                                        siguiente enlace para volverlo a intentar.\\n                            </p>\\n                            <ion-button fill=\\\"clear\\\"\\n                                        (click)=\\\"resetOk = false\\\">Volver a intentar\\n                            </ion-button>\\n                        </ion-col>\\n                    </ion-row>\\n                </div>\\n                <div class=\\\"login-container\\\"\\n                     *ngIf=\\\"!resetOk\\\">\\n                    <form #forgotForm=\\\"ngForm\\\"\\n                          (ngSubmit)=\\\"passwordRecoverRequest()\\\"\\n                          novalidate\\n                          autocomplete=\\\"off\\\">\\n                        <ion-list>\\n                            <ion-list-header>Olvidaste tu contraseña?</ion-list-header>\\n                            <ion-item lines=\\\"none\\\">\\n                                <div class=\\\"ion-padding-vertical ion-text-justify\\\">\\n                                    Si olvidaste tu contraseña ingresa tu correo electrónico para que te enviemos un\\n                                    enlace para poder restablecerla.\\n                                </div>\\n                            </ion-item>\\n                            <ion-item lines=\\\"inset\\\">\\n                                <ion-label color=\\\"medium\\\"\\n                                           position=\\\"floating\\\">\\n                                    Correo electrónico\\n                                </ion-label>\\n                                <ion-input type=\\\"text\\\"\\n                                           name=\\\"email\\\"\\n                                           id=\\\"email-field\\\"\\n                                           email\\n                                           required\\n                                           [(ngModel)]=\\\"model.email\\\"\\n                                           autocomplete=\\\"email\\\"></ion-input>\\n                            </ion-item>\\n                            <ion-text color=\\\"danger\\\"\\n                                      [hidden]=\\\"(forgotForm?.form?.controls?.email?.untouched || forgotForm?.form?.controls?.email?.valid)\\\">\\n                                <span class=\\\"ion-padding\\\">Correo electónico no valido</span>\\n                            </ion-text>\\n                        </ion-list>\\n                        <div style=\\\"height: 1rem;\\\"></div>\\n                        <div class=\\\"ion-padding-horizontal\\\">\\n                            <ion-button type=\\\"submit\\\"\\n                                        [disabled]=\\\"forgotForm?.form?.invalid || isLoading\\\"\\n                                        color=\\\"primary\\\"\\n                                        expand=\\\"block\\\">\\n                                Restablecer contraseña\\n                            </ion-button>\\n                        </div>\\n                        <div class=\\\"ion-padding-vertical ion-text-center\\\">\\n                            <ion-button type=\\\"button\\\"\\n                                        routerLink=\\\"/auth/login\\\"\\n                                        color=\\\"primary\\\"\\n                                        fill=\\\"clean\\\">\\n                                Ingresar\\n                            </ion-button>\\n                            <ion-button type=\\\"button\\\"\\n                                        color=\\\"primary\\\"\\n                                        routerLink=\\\"/auth/register\\\"\\n                                        fill=\\\"clean\\\">\\n                                Registrarse\\n                            </ion-button>\\n                        </div>\\n                    </form>\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-content no-bounce>\\n    <div class=\\\"login-background\\\"></div>\\n    <ion-grid class=\\\"ion-no-padding\\\">\\n        <ion-row class=\\\"ion-justify-content-center ion-no-padding\\\">\\n            <ion-col size-sm=\\\"8\\\"\\n                     size-lg=\\\"6\\\"\\n                     size-xl=\\\"4\\\"\\n                     class=\\\"ion-align-self-center ion-no-padding\\\">\\n                <div class=\\\"login-header ion-text-center\\\">\\n                    <h1 [hidden]=\\\"true\\\">{{environment.name}}</h1>\\n                    <a [routerLink]=\\\"'/landing'\\\">\\n                        <img src=\\\"assets/images/NoahApp/logo-light-square.png\\\"\\n                             style=\\\"max-height: 120px;\\\">\\n                    </a>\\n\\n                    <h6 style=\\\"margin-bottom: 0px;\\\">v-{{ version }}</h6>\\n                </div>\\n                <div class=\\\"login-container\\\"\\n                     *ngIf=\\\"!resetOk\\\">\\n                    <ion-row class=\\\"ion-padding-horizontal\\\">\\n                        <ion-col class=\\\"ion-text-center\\\">\\n                            <ion-icon name=\\\"close-circle-outline\\\"\\n                                      color=\\\"danger\\\"\\n                                      class=\\\"icon-m ion-padding-vertical\\\"></ion-icon>\\n                            <h2>No encontramos solicitudes validas para restablecer tu contraseña!</h2>\\n                            <p class=\\\"ion-text-justify\\\">Por favor, confirma en tu correo electrónico el enlace que te\\n                                                        enviamos para restablecer tu contraseña.\\n                            </p>\\n                        </ion-col>\\n                    </ion-row>\\n                </div>\\n                <div class=\\\"login-container\\\"\\n                     *ngIf=\\\"resetOk\\\">\\n                    <form #resetPasswordForm=\\\"ngForm\\\"\\n                          (ngSubmit)=\\\"passwordReset()\\\"\\n                          novalidate\\n                          autocomplete=\\\"off\\\">\\n                        <ion-list>\\n                            <ion-list-header>Restablece tu contraseña</ion-list-header>\\n                            <ion-item lines=\\\"none\\\">\\n                                <div class=\\\"ion-padding-vertical ion-text-justify\\\">\\n                                    Por favor ingresa tu nueva contraseña.\\n                                </div>\\n                            </ion-item>\\n                            <ion-item lines=\\\"inset\\\">\\n                                <ion-label color=\\\"medium\\\"\\n                                           position=\\\"floating\\\">\\n                                    Contraseña\\n                                </ion-label>\\n                                <ion-input type=\\\"password\\\"\\n                                           name=\\\"password\\\"\\n                                           id=\\\"password-field\\\"\\n                                           required\\n                                           minlength=\\\"6\\\"\\n                                           maxlength=\\\"16\\\"\\n                                           [(ngModel)]=\\\"model.password\\\"\\n                                           #password=\\\"ngModel\\\"\\n                                           autocomplete=\\\"password\\\"></ion-input>\\n                                <ion-icon slot=\\\"end\\\"\\n                                          name=\\\"eye-outline\\\"\\n                                          id=\\\"password-field-show\\\"\\n                                          (click)=\\\"showPassword('password-field')\\\"></ion-icon>\\n                            </ion-item>\\n                            <ion-text color=\\\"danger\\\"\\n                                      [hidden]=\\\"(resetPasswordForm?.form?.controls?.password?.untouched || resetPasswordForm?.form?.controls?.password?.valid)\\\">\\n                                <span class=\\\"ion-padding\\\">Contraseña no valida</span>\\n                            </ion-text>\\n\\n                            <ion-item lines=\\\"inset\\\">\\n                                <ion-label color=\\\"medium\\\"\\n                                           position=\\\"floating\\\">\\n                                    Confirmar Contraseña\\n                                </ion-label>\\n                                <ion-input type=\\\"password\\\"\\n                                           name=\\\"password_confirmation\\\"\\n                                           id=\\\"password_confirmation-field\\\"\\n                                           [equalTo]=\\\"password\\\"\\n                                           required\\n                                           minlength=\\\"6\\\"\\n                                           maxlength=\\\"16\\\"\\n                                           [(ngModel)]=\\\"model.password_confirmation\\\"\\n                                           #password_confirmation=\\\"ngModel\\\"\\n                                           autocomplete=\\\"password_confirmation\\\"></ion-input>\\n                                <ion-icon slot=\\\"end\\\"\\n                                          name=\\\"eye-outline\\\"\\n                                          id=\\\"password_confirmation-field-show\\\"\\n                                          (click)=\\\"showPassword('password_confirmation-field')\\\"></ion-icon>\\n                            </ion-item>\\n                            <ion-text color=\\\"danger\\\"\\n                                      [hidden]=\\\"(resetPasswordForm?.form?.controls?.password_confirmation?.untouched || resetPasswordForm?.form?.controls?.password_confirmation?.valid)\\\">\\n                                <span class=\\\"ion-padding\\\">Confirmación no valida</span>\\n                            </ion-text>\\n                        </ion-list>\\n                        <div style=\\\"height: 1rem;\\\"></div>\\n                        <div class=\\\"ion-padding-horizontal\\\">\\n                            <ion-button type=\\\"submit\\\"\\n                                        [disabled]=\\\"resetPasswordForm?.form?.invalid || isLoading\\\"\\n                                        color=\\\"primary\\\"\\n                                        expand=\\\"block\\\">\\n                                Restablecer contraseña\\n                            </ion-button>\\n                        </div>\\n                        <div class=\\\"ion-padding-vertical ion-text-center\\\">\\n                            <ion-button type=\\\"button\\\"\\n                                        routerLink=\\\"/auth/login\\\"\\n                                        color=\\\"primary\\\"\\n                                        fill=\\\"clean\\\">\\n                                Ingresar\\n                            </ion-button>\\n                            <ion-button type=\\\"button\\\"\\n                                        color=\\\"primary\\\"\\n                                        routerLink=\\\"/auth/register\\\"\\n                                        fill=\\\"clean\\\">\\n                                Registrarse\\n                            </ion-button>\\n                        </div>\\n                    </form>\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-content>\\n\";","export default \"<p>\\n  register-confirm works!\\n</p>\\n\";","export default \"<ion-content no-bounce>\\n    <div class=\\\"login-background\\\"></div>\\n    <ion-grid class=\\\"ion-no-padding\\\">\\n        <ion-row class=\\\"ion-justify-content-center ion-no-padding\\\">\\n            <ion-col size-sm=\\\"8\\\"\\n                     size-lg=\\\"6\\\"\\n                     size-xl=\\\"4\\\"\\n                     class=\\\"ion-align-self-center ion-no-padding\\\">\\n                <div class=\\\"login-header ion-text-center\\\">\\n                    <h1 [hidden]=\\\"true\\\">{{environment.name}}</h1>\\n\\n                        <img [routerLink]=\\\"'/'\\\" src=\\\"assets/images/NoahApp/logo-light-square.png\\\"\\n                             style=\\\"max-height: 120px;\\\">\\n\\n                    <h6 style=\\\"margin-bottom: 0px;\\\">v-{{ version }}</h6>\\n                </div>\\n                <div class=\\\"login-container\\\"\\n                     *ngIf=\\\"registered\\\">\\n                    <ion-row class=\\\"ion-padding-horizontal\\\">\\n                        <ion-col class=\\\"ion-text-center\\\">\\n                            <ion-icon name=\\\"checkmark-circle-outline\\\"\\n                                      color=\\\"success\\\"\\n                                      class=\\\"icon-m ion-padding-vertical\\\"></ion-icon>\\n                            <h2>Te registraste con éxito!</h2>\\n                            <p class=\\\"ion-text-justify\\\">Antes de poder continuar, por favor, confirma tu correo electrónico con el enlace que te hemos enviado.</p>\\n                            <p class=\\\"ion-text-justify\\\">Si en cinco minútos no has recibido el email haz click en el siguiente enlace para que te enviemos otro.</p>\\n                            <ion-button fill=\\\"clear\\\" (click)=\\\"resendVerificationEmail()\\\">Enviar email de verificación</ion-button>\\n                        </ion-col>\\n                    </ion-row>\\n                </div>\\n                <div class=\\\"login-container\\\"\\n                     *ngIf=\\\"!registered\\\">\\n                    <form #registerForm=\\\"ngForm\\\"\\n                          (ngSubmit)=\\\"register()\\\"\\n                          novalidate\\n                          autocomplete=\\\"off\\\">\\n                        <ion-list>\\n                            <ion-list-header>Registrarse</ion-list-header>\\n                            <ion-item lines=\\\"inset\\\">\\n                                <ion-label color=\\\"medium\\\"\\n                                           position=\\\"floating\\\">\\n                                    Correo electrónico\\n                                </ion-label>\\n                                <ion-input type=\\\"text\\\"\\n                                           name=\\\"email\\\"\\n                                           id=\\\"email-field\\\"\\n                                           email\\n                                           required\\n                                           [(ngModel)]=\\\"model.email\\\"\\n                                           autocomplete=\\\"email\\\"></ion-input>\\n                            </ion-item>\\n                            <ion-text color=\\\"danger\\\"\\n                                      [hidden]=\\\"(registerForm?.form?.controls?.email?.untouched || registerForm?.form?.controls?.email?.valid)\\\">\\n                                <span class=\\\"ion-padding\\\">Correo electónico no valido</span>\\n                            </ion-text>\\n\\n                            <ion-item lines=\\\"inset\\\">\\n                                <ion-label color=\\\"medium\\\"\\n                                           position=\\\"floating\\\">\\n                                    Nombre\\n                                </ion-label>\\n                                <ion-input type=\\\"text\\\"\\n                                           name=\\\"first_name\\\"\\n                                           id=\\\"first_name-field\\\"\\n                                           minlength=\\\"5\\\"\\n                                           required\\n                                           [(ngModel)]=\\\"model.first_name\\\"\\n                                           autocomplete=\\\"email\\\"></ion-input>\\n                            </ion-item>\\n                            <ion-text color=\\\"danger\\\"\\n                                      [hidden]=\\\"(registerForm?.form?.controls?.first_name?.untouched || registerForm?.form?.controls?.first_name?.valid)\\\">\\n                                <span class=\\\"ion-padding\\\">Nombre no valido</span>\\n                            </ion-text>\\n\\n                            <ion-item lines=\\\"inset\\\">\\n                                <ion-label color=\\\"medium\\\"\\n                                           position=\\\"floating\\\">\\n                                    Apellido\\n                                </ion-label>\\n                                <ion-input type=\\\"text\\\"\\n                                           name=\\\"last_name\\\"\\n                                           id=\\\"last_name-field\\\"\\n                                           minlength=\\\"5\\\"\\n                                           required\\n                                           [(ngModel)]=\\\"model.last_name\\\"\\n                                           autocomplete=\\\"email\\\"></ion-input>\\n                            </ion-item>\\n                            <ion-text color=\\\"danger\\\"\\n                                      [hidden]=\\\"(registerForm?.form?.controls?.last_name?.untouched || registerForm?.form?.controls?.last_name?.valid)\\\">\\n                                <span class=\\\"ion-padding\\\">Apellido no valido</span>\\n                            </ion-text>\\n\\n                            <ion-item lines=\\\"inset\\\">\\n                                <ion-label color=\\\"medium\\\"\\n                                           position=\\\"floating\\\">\\n                                    Contraseña\\n                                </ion-label>\\n                                <ion-input type=\\\"password\\\"\\n                                           name=\\\"password\\\"\\n                                           id=\\\"password-field\\\"\\n                                           required\\n                                           minlength=\\\"6\\\"\\n                                           maxlength=\\\"16\\\"\\n                                           [(ngModel)]=\\\"model.password\\\"\\n                                           #password=\\\"ngModel\\\"\\n                                           autocomplete=\\\"password\\\"></ion-input>\\n                                <ion-icon slot=\\\"end\\\"\\n                                          name=\\\"eye-outline\\\"\\n                                          id=\\\"password-field-show\\\"\\n                                          (click)=\\\"showPassword('password-field')\\\"></ion-icon>\\n                            </ion-item>\\n                            <ion-text color=\\\"danger\\\"\\n                                      [hidden]=\\\"(registerForm?.form?.controls?.password?.untouched || registerForm?.form?.controls?.password?.valid)\\\">\\n                                <span class=\\\"ion-padding\\\">Contraseña no valida</span>\\n                            </ion-text>\\n\\n                            <ion-item lines=\\\"inset\\\">\\n                                <ion-label color=\\\"medium\\\"\\n                                           position=\\\"floating\\\">\\n                                    Confirmar Contraseña\\n                                </ion-label>\\n                                <ion-input type=\\\"password\\\"\\n                                           name=\\\"password_confirmation\\\"\\n                                           id=\\\"password_confirmation-field\\\"\\n                                           [equalTo]=\\\"password\\\"\\n                                           required\\n                                           minlength=\\\"6\\\"\\n                                           maxlength=\\\"16\\\"\\n                                           [(ngModel)]=\\\"model.password_confirmation\\\"\\n                                           #password_confirmation=\\\"ngModel\\\"\\n                                           autocomplete=\\\"password_confirmation\\\"></ion-input>\\n                                <ion-icon slot=\\\"end\\\"\\n                                          name=\\\"eye-outline\\\"\\n                                          id=\\\"password_confirmation-field-show\\\"\\n                                          (click)=\\\"showPassword('password_confirmation-field')\\\"></ion-icon>\\n                            </ion-item>\\n                            <ion-text color=\\\"danger\\\"\\n                                      [hidden]=\\\"(registerForm?.form?.controls?.password_confirmation?.untouched || registerForm?.form?.controls?.password_confirmation?.valid)\\\">\\n                                <span class=\\\"ion-padding\\\">Confirmación no valida</span>\\n                            </ion-text>\\n\\n                            <ion-item class=\\\"ion-padding-top\\\"\\n                                      lines=\\\"none\\\">\\n                                <ion-label>Acepto los <a (click)=\\\"null\\\">terminos y condiciones</a></ion-label>\\n                                <ion-checkbox slot=\\\"start\\\"\\n                                              id=\\\"accept_terms_conditions-field\\\"\\n                                              name=\\\"accept_terms_conditions\\\"\\n                                              required\\n                                              [equal]=\\\"true\\\"\\n                                              #accept_terms_conditions=\\\"ngModel\\\"\\n                                              [(ngModel)]=\\\"model.accept_terms_conditions\\\"></ion-checkbox>\\n                            </ion-item>\\n                            <ion-text color=\\\"danger\\\"\\n                                      [hidden]=\\\"(registerForm?.form?.controls?.accept_terms_conditions?.untouched || registerForm?.form?.controls?.accept_terms_conditions?.valid)\\\">\\n                                <span class=\\\"ion-padding\\\">Debe aceptar los terminos y condiciones</span>\\n                            </ion-text>\\n\\n                            <div style=\\\"height: 1rem;\\\"></div>\\n\\n                        </ion-list>\\n                        <div class=\\\"ion-padding-horizontal\\\">\\n                            <ion-button type=\\\"submit\\\"\\n                                        color=\\\"primary\\\"\\n                                        expand=\\\"block\\\">\\n                                Registrarse\\n                            </ion-button>\\n                        </div>\\n                        <div class=\\\"ion-padding-vertical ion-text-center\\\">\\n                            <ion-button type=\\\"button\\\"\\n                                        routerLink=\\\"/auth/login\\\"\\n                                        color=\\\"primary\\\"\\n                                        fill=\\\"clean\\\">\\n                                Ingresar\\n                            </ion-button>\\n                            <ion-button type=\\\"button\\\"\\n                                        color=\\\"primary\\\"\\n                                        routerLink=\\\"/auth/password-forgot\\\"\\n                                        fill=\\\"clean\\\">\\n                                Olvidaste tu contraseña?\\n                            </ion-button>\\n                        </div>\\n                    </form>\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-content>\\n\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {AuthPage} from './auth.page';\nimport {LoginComponent} from \"./login/login.component\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {RegisterConfirmComponent} from \"./register-confirm/register-confirm.component\";\nimport {PasswordForgotComponent} from \"./password-forgot/password-forgot.component\";\nimport {PasswordResetComponent} from \"./password-reset/password-reset.component\";\nimport {LogoutComponent} from \"./logout/logout.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AuthPage\n    },\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'logout',\n        component: LogoutComponent\n    },\n    {\n        path: 'login/:token',\n        component: LoginComponent\n    },\n    {\n        path: 'register',\n        component: RegisterComponent\n    },\n    {\n        path: 'register-confirm/:token',\n        component: RegisterConfirmComponent\n    },\n    {\n        path: 'password-forgot',\n        component: PasswordForgotComponent\n    },\n    {\n        path: 'password-reset/:token',\n        component: PasswordResetComponent\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class AuthPageRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {AuthPageRoutingModule} from './auth-routing.module';\n\nimport {AuthPage} from './auth.page';\nimport {LoginComponent} from \"./login/login.component\";\nimport {PasswordResetComponent} from \"./password-reset/password-reset.component\";\nimport {PasswordForgotComponent} from \"./password-forgot/password-forgot.component\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {RegisterConfirmComponent} from \"./register-confirm/register-confirm.component\";\nimport {SharedModule} from \"../@shared/shared.module\";\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\nimport {LogoutComponent} from \"./logout/logout.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        AuthPageRoutingModule\n    ],\n    declarations: [\n        AuthPage,\n        LoginComponent,\n        PasswordResetComponent,\n        PasswordForgotComponent,\n        RegisterComponent,\n        RegisterConfirmComponent,\n        LogoutComponent,\n    ]\n})\nexport class AuthPageModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss'],\n})\nexport class AuthPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {LoadingController, Platform} from \"@ionic/angular\";\nimport {environment} from \"../../../environments/environment\";\nimport {finalize, map} from \"rxjs/operators\";\nimport {forkJoin, from} from \"rxjs\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {ToastService} from \"../../@shared/services/toast.service\";\nimport {AlertService} from \"../../@shared/services/alert.service\";\nimport {AuthService} from \"../../@shared/services/auth.service\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\nimport {StorageLocalService} from \"../../@shared/services/storage-local.service\";\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n    version: string | null = environment.version;\n    error: string | undefined;\n    isLoading = false;\n    environment = environment;\n\n    token: any = null;\n\n    model: any = {\n        email: '',\n        password: '',\n        remember: false\n    };\n\n    @ViewChild('loginForm') loginForm: FormGroup;\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private platform: Platform,\n        private api: ApiService,\n        private toast: ToastService,\n        private alert: AlertService,\n        public auth: AuthService,\n        public splitPanel: SplitPanelService,\n        public storage: StorageLocalService\n    ) {\n        // this.createForm();\n    }\n\n    ngOnInit() {\n\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(false);\n        if (this.route.snapshot.paramMap.get('token')) {\n            this.toast.present('Se verifico tu correo electrónico con éxito!', 'toast-info');\n        }\n\n    }\n\n    async login() {\n        this.api.syncPost(environment.serverUrl + '/api/auth/login', this.model)\n            .then(\n                (res: any) => {\n                    this.toast.present(res.message, 'toast-success');\n                    this.storage.set('token', res.data.access_token);\n                    this.api.syncGet(environment.serverUrl + '/api/auth/profile?token=' + res.data.access_token)\n                        .then(\n                            async (res: any) => {\n                                this.storage.set('user', res.data.user);\n                                this.storage.set('acl', res.data.acl);\n                                if (!this.auth.checkToken) {\n                                    this.auth.startCheckExpirationToken();\n                                }\n                                this.router.navigateByUrl('/');\n                            });\n                },\n                (err: any) => {\n\n                }\n            );\n    }\n\n    get isWeb(): boolean {\n        return !this.platform.is('cordova');\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9nb3V0L2xvZ291dC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../@shared/services/auth.service\";\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss'],\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n      public auth: AuthService\n  ) { }\n\n  ngOnInit() {}\n\n  ionViewWillEnter() {\n    this.auth.logout();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcGFzc3dvcmQtZm9yZ290L3Bhc3N3b3JkLWZvcmdvdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {environment} from \"../../../environments/environment\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Platform} from \"@ionic/angular\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {ToastService} from \"../../@shared/services/toast.service\";\nimport {AlertService} from \"../../@shared/services/alert.service\";\nimport {AuthService} from \"../../@shared/services/auth.service\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-password-forgot',\n    templateUrl: './password-forgot.component.html',\n    styleUrls: ['./password-forgot.component.scss'],\n})\nexport class PasswordForgotComponent implements OnInit {\n\n    @ViewChild('forgotForm') forgotForm: FormGroup;\n\n    version: string | null = environment.version;\n    error: string | undefined;\n    isLoading = false;\n    environment = environment;\n\n    model: any = {\n        email: '',\n    };\n\n    resetOk = false;\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private platform: Platform,\n        private api: ApiService,\n        private toast: ToastService,\n        private alert: AlertService,\n        public auth: AuthService,\n        public splitPanel: SplitPanelService\n    ) {\n    }\n\n    ngOnInit() {\n        this.splitPanel.show.next(false);\n    }\n\n    get isWeb(): boolean {\n        return !this.platform.is('cordova');\n    }\n\n    passwordRecoverRequest() {\n        this.api.post('auth/reset-password', {email: this.model.email})\n            .subscribe(\n                (res: any) => {\n                    this.toast.present(res.message, 'toast-success');\n                    this.resetOk = true;\n                },\n                (err: any) => {\n                    this.resetOk = false;\n                }\n            );\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcGFzc3dvcmQtcmVzZXQvcGFzc3dvcmQtcmVzZXQuY29tcG9uZW50LnNjc3MifQ== */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Platform} from \"@ionic/angular\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {ToastService} from \"../../@shared/services/toast.service\";\nimport {AlertService} from \"../../@shared/services/alert.service\";\nimport {AuthService} from \"../../@shared/services/auth.service\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n    selector: 'app-password-reset',\n    templateUrl: './password-reset.component.html',\n    styleUrls: ['./password-reset.component.scss'],\n})\nexport class PasswordResetComponent implements OnInit {\n\n\n    @ViewChild('resetPasswordForm') resetPasswordForm: FormGroup;\n\n    version: string | null = environment.version;\n    error: string | undefined;\n    isLoading = false;\n    environment = environment;\n\n    resetOk = false;\n    token: any = null;\n\n    model: any = {\n        password: '',\n        password_confirmation: '',\n        token: ''\n    };\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private platform: Platform,\n        private api: ApiService,\n        private toast: ToastService,\n        private alert: AlertService,\n        public auth: AuthService,\n        public splitPanel: SplitPanelService\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ionViewWillEnter() {\n        this.resetOk = false;\n        this.splitPanel.show.next(false);\n        this.token = this.route.snapshot.paramMap.get('token');\n        this.findResetPasswordRequest();\n    }\n\n    passwordReset() {\n      this.model.token = this.token;\n        this.api.put('auth/reset-password', this.model)\n            .subscribe(\n                (res: any) => {\n                    this.toast.present(res.message, 'toast-success');\n                    this.router.navigateByUrl('/auth/login');\n                },\n                (err: any) => {\n                    this.resetOk = false;\n                }\n            );\n    }\n\n    showPassword(input: any): any {\n        const passwordField = document.getElementById(input);\n        const passwordButton = document.getElementById(input + '-show');\n        passwordField.setAttribute('type', (passwordField.getAttribute('type') === 'password') ? 'text' : 'password');\n        passwordButton.setAttribute('name', (passwordButton.getAttribute('name') === 'eye-outline') ? 'eye-off-outline' : 'eye-outline');\n    }\n\n    findResetPasswordRequest() {\n        this.api.get('auth/reset-password/' + this.token)\n            .subscribe(\n                (res: any) => {\n                    this.toast.present(res.message, 'toast-info');\n                    this.resetOk = true;\n                },\n                (err: any) => {\n                    this.resetOk = false;\n                }\n            );\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVnaXN0ZXItY29uZmlybS9yZWdpc3Rlci1jb25maXJtLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-confirm',\n  templateUrl: './register-confirm.component.html',\n  styleUrls: ['./register-confirm.component.scss'],\n})\nexport class RegisterConfirmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {environment} from \"../../../environments/environment\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Platform} from \"@ionic/angular\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {ToastService} from \"../../@shared/services/toast.service\";\nimport {AlertService} from \"../../@shared/services/alert.service\";\nimport {AuthService} from \"../../@shared/services/auth.service\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n\n  @ViewChild('registerForm') registerForm: FormGroup;\n\n  version: string | null = environment.version;\n  error: string | undefined;\n  isLoading = false;\n  environment = environment;\n\n  model: any = {\n    name: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    password: '',\n    password_confirmation: '',\n    accept_terms_conditions: false\n  };\n\n  registered = false;\n\n  constructor(\n      private router: Router,\n      private route: ActivatedRoute,\n      private formBuilder: FormBuilder,\n      private platform: Platform,\n      private api: ApiService,\n      private toast: ToastService,\n      private alert: AlertService,\n      public auth: AuthService,\n      public splitPanel: SplitPanelService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(false);\n  }\n\n  get isWeb(): boolean {\n    return !this.platform.is('cordova');\n  }\n\n  async register() {\n\n    if (this.registerForm.invalid) {\n      this.markFormGroupTouched(this.registerForm);\n      return;\n    }\n\n    this.model.name = this.model.first_name + ' ' + this.model.last_name\n\n    this.api.post('auth/register', this.model)\n        .subscribe(\n            (res: any) => {\n              this.toast.present(res.message, 'toast-success');\n              this.registered = true;\n            },\n            (err: any) => {\n\n            }\n        );\n  }\n\n  showPassword(input: any): any {\n    const passwordField = document.getElementById(input);\n    const passwordButton  = document.getElementById(input + '-show');\n    passwordField.setAttribute('type', (passwordField.getAttribute('type') === 'password') ?  'text' : 'password');\n    passwordButton.setAttribute('name', (passwordButton.getAttribute('name') === 'eye-outline') ?  'eye-off-outline' : 'eye-outline');\n  }\n\n  /**\n   * Marks all controls in a form group as touched\n   * @param formGroup - The form group to touch\n   */\n  private markFormGroupTouched(formGroup: FormGroup) {\n    (<any>Object).values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n\n      if (control.controls) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  resendVerificationEmail() {\n    this.api.post('auth/email/resend', {\n      email: this.model.email\n    })\n        .subscribe(\n            (res: any) => {\n            this.toast.present(res.message, 'toast-success');\n            },\n            (err: any) => {\n\n            }\n        );\n  }\n\n}\n"]}