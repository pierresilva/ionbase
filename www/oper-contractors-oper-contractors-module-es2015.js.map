{"version":3,"sources":["./src/app/oper-contractors/oper-contractors-create/oper-contractors-create.component.html","./src/app/oper-contractors/oper-contractors-duplicate/oper-contractors-duplicate.component.html","./src/app/oper-contractors/oper-contractors-edit/oper-contractors-edit.component.html","./src/app/oper-contractors/oper-contractors-form/oper-contractors-form.component.html","./src/app/oper-contractors/oper-contractors-list/oper-contractors-list.component.html","./src/app/oper-contractors/oper-contractors.page.html","./src/app/oper-contractors/oper-contractors-create/oper-contractors-create.component.scss","./src/app/oper-contractors/oper-contractors-create/oper-contractors-create.component.ts","./src/app/oper-contractors/oper-contractors-duplicate/oper-contractors-duplicate.component.scss","./src/app/oper-contractors/oper-contractors-duplicate/oper-contractors-duplicate.component.ts","./src/app/oper-contractors/oper-contractors-edit/oper-contractors-edit.component.scss","./src/app/oper-contractors/oper-contractors-edit/oper-contractors-edit.component.ts","./src/app/oper-contractors/oper-contractors-form/oper-contractors-form.component.scss","./src/app/oper-contractors/oper-contractors-form/oper-contractors-form.component.ts","./src/app/oper-contractors/oper-contractors-list/oper-contractors-list.component.scss","./src/app/oper-contractors/oper-contractors-list/oper-contractors-list.component.ts","./src/app/oper-contractors/oper-contractors-routing.module.ts","./src/app/oper-contractors/oper-contractors.module.ts","./src/app/oper-contractors/oper-contractors.page.scss","./src/app/oper-contractors/oper-contractors.page.ts","./src/app/oper-contractors/oper-contractors.service.ts"],"names":[],"mappings":"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","file":"oper-contractors-oper-contractors-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/oper-contractors'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"operContractorsService.storeOperContractor()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!operContractorsService.operContractorsFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'CONTRATISTAS OPERATIVOS' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-oper-contractors-form #operContractorForm [model]=\\\"operContractorsService.operContractor\\\"></app-oper-contractors-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  OperContractors duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/oper-contractors'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"operContractorsService.updateOperContractor()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!operContractorsService.operContractorsFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'CONTRATISTAS OPERATIVOS' | titlecase}}: {{ operContractorsService.operContractor?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-oper-contractors-form #operContractorForm [model]=\\\"operContractorsService.operContractor\\\"></app-oper-contractors-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #operContractorsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- oper_movement_ids -->\\r\\n    <!--<ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'MOVIMIENTOS OPERATIVOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_movement_ids\\\"\\r\\n                          id=\\\"oper_movement_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_movements\\\"\\r\\n                          [items]=\\\"operContractorsService.operContractorLists.OperMovement\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('MOVIMIENTOS OPERATIVOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('MOVIMIENTOS OPERATIVOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperMovementIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_movement_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['oper_movement_ids']?.hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>-->\\r\\n    <!-- end oper_movement_ids -->\\r\\n\\r\\n    <!-- user_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>Usuario</ion-label>\\r\\n        <ionic-selectable name=\\\"user_id\\\"\\r\\n                          id=\\\"user_id-field\\\"\\r\\n                          [(ngModel)]=\\\"model.user\\\"\\r\\n                          [items]=\\\"operContractorsService.operContractorLists.User\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"false\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar usuarios'\\\"\\r\\n                          [searchFailText]=\\\"'No se encontraron usuarios  que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setUserId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.user_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['user_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end oper_movement_ids -->\\r\\n\\r\\n            <!-- name -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"name\\\"\\r\\n                            id=\\\"name-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end name -->\\r\\n\\r\\n\\r\\n            <!-- document -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'DOCUMENTO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.document\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"document\\\"\\r\\n                            id=\\\"document-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.document\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['document']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end document -->\\r\\n\\r\\n\\r\\n            <!-- address -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'DIRECCIÓN' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.address\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"address\\\"\\r\\n                            id=\\\"address-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.address\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['address']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end address -->\\r\\n\\r\\n\\r\\n            <!-- phone -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TELÉFONO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.phone\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"phone\\\"\\r\\n                            id=\\\"phone-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.phone\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['phone']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end phone -->\\r\\n\\r\\n\\r\\n            <!-- email -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CORREO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.email\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"email\\\"\\r\\n                            id=\\\"email-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['email']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end email -->\\r\\n\\r\\n\\r\\n            <!-- phone_support -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TELÉFONO DE SOPORTE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.phone_support\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"phone_support\\\"\\r\\n                            id=\\\"phone_support-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.phone_support\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['phone_support']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end phone_support -->\\r\\n\\r\\n\\r\\n            <!-- email_support -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CORREO DE SOPORTE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.email_support\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"email_support\\\"\\r\\n                            id=\\\"email_support-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.email_support\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['email_support']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end email_support -->\\r\\n\\r\\n\\r\\n            <!-- contact -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CONTACTO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.contact\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"contact\\\"\\r\\n                            id=\\\"contact-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.contact\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['contact']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end contact -->\\r\\n\\r\\n\\r\\n            <!-- business_hour -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'HORARIO DE ATENCIÓN' | titlecase }}</ion-label>\\r\\n                <ion-textarea [(ngModel)]=\\\"model.business_hour\\\"\\r\\n                              name=\\\"business_hour\\\"\\r\\n                              id=\\\"business_hour-field\\\"\\r\\n                              rows=\\\"6\\\"\\r\\n                              placeholder=\\\"\\\"></ion-textarea>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.business_hour\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['business_hour']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end business_hour -->\\r\\n\\r\\n\\r\\n            <!-- phone_emergency -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TELÉFONO DE EMERGENCIA' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.phone_emergency\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"phone_emergency\\\"\\r\\n                            id=\\\"phone_emergency-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.phone_emergency\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['phone_emergency']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end phone_emergency -->\\r\\n\\r\\n\\r\\n            <!-- email_emergency -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CORREO DE EMERGENCIA' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.email_emergency\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"email_emergency\\\"\\r\\n                            id=\\\"email_emergency-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.email_emergency\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['email_emergency']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end email_emergency -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'CONTRATISTAS OPERATIVOS' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"oper-contractors/create\\\"\\r\\n                 primaryText=\\\"Crear {{'CONTRATISTAS OPERATIVOS' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                       [placeholder]=\\\"'Buscar ' + ('CONTRATISTAS OPERATIVOS' | lowercase )\\\"\\r\\n                       (ionCancel)=\\\"this.operContractorsService.searchValue = ''; operContractorsService.getOperContractors()\\\"\\r\\n                       (keyup.enter)=\\\"operContractorsService.getOperContractors()\\\"\\r\\n                       [(ngModel)]=\\\"operContractorsService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operContractorsService.operContractors?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let operContractor of operContractorsService.operContractors; let index = index\\\">\\r\\n            <ion-list>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'DOCUMENTO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.document }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'DIRECCIÓN' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.address }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.phone }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CORREO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.email }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO DE SOPORTE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.phone_support }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CORREO DE SOPORTE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.email_support }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CONTACTO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.contact }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'HORARIO DE ATENCIÓN' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.business_hour }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO DE EMERGENCIA' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.phone_emergency }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CORREO DE EMERGENCIA' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.email_emergency }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'MOVIMIENTOS OPERATIVOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"operContractor?.oper_movements?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let operMovement of operContractor?.oper_movements; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/oper-movements/{{ operMovement?.id }}/edit\\\">{{ operMovement?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/oper-contractors/' + operContractor?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"operContractorsService.deleteOperContractor(operContractor?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operContractorsService.operContractors?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'CONTRATISTAS OPERATIVOS' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/oper-contractors/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\r\\n                Crear {{'CONTRATISTAS OPERATIVOS' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"operContractorsService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"operContractorsService.getOperContractors(operContractorsService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"operContractorsService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{operContractorsService.meta.current_page}}\\r\\n                /{{operContractorsService.meta.last_page}} {{operContractorsService.meta.from}}-{{operContractorsService.meta.to}}\\r\\n                /{{operContractorsService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"operContractorsService.getOperContractors(operContractorsService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"operContractorsService.meta.current_page == operContractorsService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"CONTRATISTAS OPERATIVOS\\\"></app-main-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/oper-contractors/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'CONTRATISTAS OPERATIVOS'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/oper-contractors/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'CONTRATISTAS OPERATIVOS' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1jcmVhdGUvb3Blci1jb250cmFjdG9ycy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {OperContractorsService} from \"../oper-contractors.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {OperContractor} from \"../oper-contractor\";\r\nimport {OperContractorsFormComponent} from \"../oper-contractors-form/oper-contractors-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-oper-contractors-create',\r\n    templateUrl: './oper-contractors-create.component.html',\r\n    styleUrls: ['./oper-contractors-create.component.scss']\r\n})\r\nexport class OperContractorsCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('operContractorForm') operContractorForm: OperContractorsFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public operContractorsService: OperContractorsService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.operContractorForm.operContractorsForm.valueChanges.subscribe((data) => {\r\n            this.operContractorsService.operContractorsFormValid.next(this.operContractorForm.operContractorsForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.operContractorsService.createOperContractor();\r\n        this.operContractorsService.operContractor = <OperContractor>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1kdXBsaWNhdGUvb3Blci1jb250cmFjdG9ycy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-oper-contractors-duplicate',\r\n  templateUrl: './oper-contractors-duplicate.component.html',\r\n  styleUrls: ['./oper-contractors-duplicate.component.scss'],\r\n})\r\nexport class OperContractorsDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1lZGl0L29wZXItY29udHJhY3RvcnMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {OperContractorsService} from \"../oper-contractors.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {OperContractor} from \"../oper-contractor\";\r\nimport {OperContractorsFormComponent} from \"../oper-contractors-form/oper-contractors-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-oper-contractors-edit',\r\n  templateUrl: './oper-contractors-edit.component.html',\r\n  styleUrls: ['./oper-contractors-edit.component.scss']\r\n})\r\nexport class OperContractorsEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('operContractorForm') operContractorForm: OperContractorsFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: OperContractor = null;\r\n\r\n  constructor(\r\n      public operContractorsService: OperContractorsService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.operContractorsService.editOperContractor(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.operContractorForm.operContractorsForm.valueChanges.subscribe((data) => {\r\n          this.operContractorsService.operContractorsFormValid.next(this.operContractorForm.operContractorsForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1mb3JtL29wZXItY29udHJhY3RvcnMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {OperContractor} from \"../oper-contractor\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {OperContractorsService} from \"../oper-contractors.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-oper-contractors-form',\r\n    templateUrl: './oper-contractors-form.component.html',\r\n    styleUrls: ['./oper-contractors-form.component.scss']\r\n})\r\nexport class OperContractorsFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: OperContractor = <OperContractor>{};\r\n\r\n    @ViewChild('operContractorsForm') operContractorsForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'document': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DOCUMENTO') + ' es obligatorio.'},\r\n        ],\r\n        'address': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DIRECCIÓN') + ' es obligatorio.'},\r\n        ],\r\n        'phone': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO') + ' es obligatorio.'},\r\n        ],\r\n        'email': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CORREO') + ' es obligatorio.'},\r\n        ],\r\n        'phone_support': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO DE SOPORTE') + ' es obligatorio.'},\r\n        ],\r\n        'email_support': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CORREO DE SOPORTE') + ' es obligatorio.'},\r\n        ],\r\n        'contact': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CONTACTO') + ' es obligatorio.'},\r\n        ],\r\n        'business_hour': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('HORARIO DE ATENCIÓN') + ' es obligatorio.'},\r\n        ],\r\n        'phone_emergency': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO DE EMERGENCIA') + ' es obligatorio.'},\r\n        ],\r\n        'email_emergency': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CORREO DE EMERGENCIA') + ' es obligatorio.'},\r\n        ],\r\n        'oper_movement_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('MOVIMIENTOS OPERATIVOS') + ' es obligatorio.'},\r\n        ],\r\n        'user_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('usuario') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public operContractorsService: OperContractorsService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setOperMovementIds\r\n    setOperMovementIds(event: any) {\r\n        let operMovementIds = null;\r\n        if (event.value.length) {\r\n            operMovementIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                operMovementIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.operContractorsService.operContractor.oper_movement_ids = operMovementIds;\r\n    }\r\n    // end setOperMovementIds\r\n\r\n\r\n    setUserId(event: any) {\r\n        this.operContractorsService.operContractor.user_id = event.value ? event.value.id : null;\r\n    }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1saXN0L29wZXItY29udHJhY3RvcnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { OperContractorsService} from \"../oper-contractors.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-oper-contractors-list',\r\n    templateUrl: './oper-contractors-list.component.html',\r\n    styleUrls: ['./oper-contractors-list.component.scss'],\r\n})\r\nexport class OperContractorsListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public operContractorsService: OperContractorsService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.operContractorsService.getOperContractors();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OperContractorsPage } from './oper-contractors.page';\r\nimport {OperContractorsEditComponent} from \"./oper-contractors-edit/oper-contractors-edit.component\";\r\nimport {OperContractorsCreateComponent} from \"./oper-contractors-create/oper-contractors-create.component\";\r\nimport {OperContractorsListComponent} from \"./oper-contractors-list/oper-contractors-list.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: OperContractorsPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        component: OperContractorsListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      component: OperContractorsCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: OperContractorsEditComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class OperContractorsPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {OperContractorsPageRoutingModule} from './oper-contractors-routing.module';\r\n\r\nimport { OperContractorsPage} from './oper-contractors.page';\r\nimport { OperContractorsListComponent} from \"./oper-contractors-list/oper-contractors-list.component\";\r\nimport { OperContractorsCreateComponent} from \"./oper-contractors-create/oper-contractors-create.component\";\r\nimport { OperContractorsDuplicateComponent} from \"./oper-contractors-duplicate/oper-contractors-duplicate.component\";\r\nimport { OperContractorsEditComponent} from \"./oper-contractors-edit/oper-contractors-edit.component\";\r\nimport { OperContractorsFormComponent} from \"./oper-contractors-form/oper-contractors-form.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        OperContractorsPageRoutingModule\r\n    ],\r\n    declarations: [\r\n        OperContractorsPage,\r\n        OperContractorsListComponent,\r\n        OperContractorsCreateComponent,\r\n        OperContractorsDuplicateComponent,\r\n        OperContractorsEditComponent,\r\n        OperContractorsFormComponent,\r\n    ]\r\n})\r\nexport class OperContractorsPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-oper-contractors',\r\n  templateUrl: './oper-contractors.page.html',\r\n  styleUrls: ['./oper-contractors.page.scss'],\r\n})\r\nexport class OperContractorsPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport { OperContractor, OperContractorLists } from \"./oper-contractor\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OperContractorsService {\r\n\r\n    public operContractorsUrl = 'oper-contractors';\r\n    public operContractorsFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public operContractors: OperContractor[] = [];\r\n    public operContractor: OperContractor = <OperContractor>{};\r\n    public operContractorLists: OperContractorLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n\r\n    public getOperContractors(page: any = this.page, perPage: any = this.perPage) {\r\n\r\n        this.api.get(this.operContractorsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.operContractors = res.data;\r\n                    this.operContractorLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editOperContractor(id: any) {\r\n        this.api.get(this.operContractorsUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.operContractor = res.data.model;\r\n                    this.operContractorLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateOperContractor() {\r\n        this.api.put(this.operContractorsUrl + '/' + this.operContractor.id, {\r\n            model: this.operContractor,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getOperContractors(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createOperContractor() {\r\n        this.api.get(this.operContractorsUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.operContractor = <OperContractor>{};\r\n                    this.operContractorLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeOperContractor() {\r\n        this.api.post(this.operContractorsUrl, {\r\n            model: this.operContractor,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getOperContractors(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteOperContractor(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.operContractorsUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getOperContractors(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}