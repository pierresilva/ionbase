{"version":3,"sources":["./src/app/oper-contractors/oper-contractors-create/oper-contractors-create.component.html","./src/app/oper-contractors/oper-contractors-duplicate/oper-contractors-duplicate.component.html","./src/app/oper-contractors/oper-contractors-edit/oper-contractors-edit.component.html","./src/app/oper-contractors/oper-contractors-form/oper-contractors-form.component.html","./src/app/oper-contractors/oper-contractors-list/oper-contractors-list.component.html","./src/app/oper-contractors/oper-contractors.page.html","./src/app/oper-contractors/oper-contractors-create/oper-contractors-create.component.scss","./src/app/oper-contractors/oper-contractors-create/oper-contractors-create.component.ts","./src/app/oper-contractors/oper-contractors-duplicate/oper-contractors-duplicate.component.scss","./src/app/oper-contractors/oper-contractors-duplicate/oper-contractors-duplicate.component.ts","./src/app/oper-contractors/oper-contractors-edit/oper-contractors-edit.component.scss","./src/app/oper-contractors/oper-contractors-edit/oper-contractors-edit.component.ts","./src/app/oper-contractors/oper-contractors-form/oper-contractors-form.component.scss","./src/app/oper-contractors/oper-contractors-form/oper-contractors-form.component.ts","./src/app/oper-contractors/oper-contractors-list/oper-contractors-list.component.scss","./src/app/oper-contractors/oper-contractors-list/oper-contractors-list.component.ts","./src/app/oper-contractors/oper-contractors-routing.module.ts","./src/app/oper-contractors/oper-contractors.module.ts","./src/app/oper-contractors/oper-contractors.page.scss","./src/app/oper-contractors/oper-contractors.page.ts","./src/app/oper-contractors/oper-contractors.service.ts"],"names":[],"mappings":"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","file":"oper-contractors-oper-contractors-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-contractors'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operContractorsService.storeOperContractor()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operContractorsService.operContractorsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'CONTRATISTAS OPERATIVOS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-oper-contractors-form #operContractorForm [model]=\\\"operContractorsService.operContractor\\\"></app-oper-contractors-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  OperContractors duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-contractors'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operContractorsService.updateOperContractor()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operContractorsService.operContractorsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'CONTRATISTAS OPERATIVOS' | titlecase}}: {{ operContractorsService.operContractor?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-oper-contractors-form #operContractorForm [model]=\\\"operContractorsService.operContractor\\\"></app-oper-contractors-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #operContractorsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- oper_movement_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'MOVIMIENTOS OPERATIVOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_movement_ids\\\"\\n                          id=\\\"oper_movement_ids-field\\\"\\n                          [(ngModel)]=\\\"model.oper_movements\\\"\\n                          [items]=\\\"operContractorsService.operContractorLists.OperMovement\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('MOVIMIENTOS OPERATIVOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('MOVIMIENTOS OPERATIVOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperMovementIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_movement_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['oper_movement_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_movement_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- document -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'DOCUMENTO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.document\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"document\\\"\\n                            id=\\\"document-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.document\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['document']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end document -->\\n\\n\\n            <!-- address -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'DIRECCIÓN' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.address\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"address\\\"\\n                            id=\\\"address-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.address\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['address']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end address -->\\n\\n\\n            <!-- phone -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'TELÉFONO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.phone\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"phone\\\"\\n                            id=\\\"phone-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.phone\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['phone']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end phone -->\\n\\n\\n            <!-- email -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CORREO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.email\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"email\\\"\\n                            id=\\\"email-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['email']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end email -->\\n\\n\\n            <!-- phone_support -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'TELÉFONO DE SOPORTE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.phone_support\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"phone_support\\\"\\n                            id=\\\"phone_support-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.phone_support\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['phone_support']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end phone_support -->\\n\\n\\n            <!-- email_support -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CORREO DE SOPORTE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.email_support\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"email_support\\\"\\n                            id=\\\"email_support-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.email_support\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['email_support']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end email_support -->\\n\\n\\n            <!-- contact -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CONTACTO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.contact\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"contact\\\"\\n                            id=\\\"contact-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.contact\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['contact']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end contact -->\\n\\n\\n            <!-- business_hour -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'HORARIO DE ATENCIÓN' | titlecase }}</ion-label>\\n                <ion-textarea [(ngModel)]=\\\"model.business_hour\\\"\\n                              name=\\\"business_hour\\\"\\n                              id=\\\"business_hour-field\\\"\\n                              rows=\\\"6\\\"\\n                              placeholder=\\\"\\\"></ion-textarea>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.business_hour\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['business_hour']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end business_hour -->\\n\\n\\n            <!-- phone_emergency -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'TELÉFONO DE EMERGENCIA' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.phone_emergency\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"phone_emergency\\\"\\n                            id=\\\"phone_emergency-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.phone_emergency\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['phone_emergency']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end phone_emergency -->\\n\\n\\n            <!-- email_emergency -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CORREO DE EMERGENCIA' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.email_emergency\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"email_emergency\\\"\\n                            id=\\\"email_emergency-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.email_emergency\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operContractorsForm.form.controls['email_emergency']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end email_emergency -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'CONTRATISTAS OPERATIVOS' | titlecase}}\\\"\\n                 primaryLink=\\\"oper-contractors/create\\\"\\n                 primaryText=\\\"Crear {{'CONTRATISTAS OPERATIVOS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('CONTRATISTAS OPERATIVOS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.operContractorsService.searchValue = ''; operContractorsService.getOperContractors()\\\"\\n                       (keyup.enter)=\\\"operContractorsService.getOperContractors()\\\"\\n                       [(ngModel)]=\\\"operContractorsService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operContractorsService.operContractors?.length\\\">\\n        <ion-card *ngFor=\\\"let operContractor of operContractorsService.operContractors; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'DOCUMENTO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.document }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'DIRECCIÓN' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.address }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.phone }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CORREO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.email }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO DE SOPORTE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.phone_support }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CORREO DE SOPORTE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.email_support }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CONTACTO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.contact }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'HORARIO DE ATENCIÓN' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.business_hour }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO DE EMERGENCIA' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.phone_emergency }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CORREO DE EMERGENCIA' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operContractor?.email_emergency }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'MOVIMIENTOS OPERATIVOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"operContractor?.oper_movements?.length\\\">\\n                                <ng-container *ngFor=\\\"let operMovement of operContractor?.oper_movements; let last = last\\\">\\n                                    <a routerLink=\\\"/oper-movements/{{ operMovement?.id }}/edit\\\">{{ operMovement?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/oper-contractors/' + operContractor?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"operContractorsService.deleteOperContractor(operContractor?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operContractorsService.operContractors?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'CONTRATISTAS OPERATIVOS' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/oper-contractors/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'CONTRATISTAS OPERATIVOS' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"operContractorsService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"operContractorsService.getOperContractors(operContractorsService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"operContractorsService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{operContractorsService.meta.current_page}}\\n                /{{operContractorsService.meta.last_page}} {{operContractorsService.meta.from}}-{{operContractorsService.meta.to}}\\n                /{{operContractorsService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"operContractorsService.getOperContractors(operContractorsService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"operContractorsService.meta.current_page == operContractorsService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"CONTRATISTAS OPERATIVOS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-contractors/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'CONTRATISTAS OPERATIVOS'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-contractors/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'CONTRATISTAS OPERATIVOS' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1jcmVhdGUvb3Blci1jb250cmFjdG9ycy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {OperContractorsService} from \"../oper-contractors.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperContractor} from \"../oper-contractor\";\nimport {OperContractorsFormComponent} from \"../oper-contractors-form/oper-contractors-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n    selector: 'app-oper-contractors-create',\n    templateUrl: './oper-contractors-create.component.html',\n    styleUrls: ['./oper-contractors-create.component.scss']\n})\nexport class OperContractorsCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operContractorForm') operContractorForm: OperContractorsFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public operContractorsService: OperContractorsService,\n        public route: ActivatedRoute,\n        public platform: Platform\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.operContractorForm.operContractorsForm.valueChanges.subscribe((data) => {\n            this.operContractorsService.operContractorsFormValid.next(this.operContractorForm.operContractorsForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.operContractorsService.createOperContractor();\n        this.operContractorsService.operContractor = <OperContractor>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1kdXBsaWNhdGUvb3Blci1jb250cmFjdG9ycy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-oper-contractors-duplicate',\n  templateUrl: './oper-contractors-duplicate.component.html',\n  styleUrls: ['./oper-contractors-duplicate.component.scss'],\n})\nexport class OperContractorsDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1lZGl0L29wZXItY29udHJhY3RvcnMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {OperContractorsService} from \"../oper-contractors.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperContractor} from \"../oper-contractor\";\nimport {OperContractorsFormComponent} from \"../oper-contractors-form/oper-contractors-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-oper-contractors-edit',\n  templateUrl: './oper-contractors-edit.component.html',\n  styleUrls: ['./oper-contractors-edit.component.scss']\n})\nexport class OperContractorsEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operContractorForm') operContractorForm: OperContractorsFormComponent;\n\n    public id: any = null;\n    public model: OperContractor = null;\n\n  constructor(\n      public operContractorsService: OperContractorsService,\n      public route: ActivatedRoute,\n      public platform: Platform\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.operContractorsService.editOperContractor(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.operContractorForm.operContractorsForm.valueChanges.subscribe((data) => {\n          this.operContractorsService.operContractorsFormValid.next(this.operContractorForm.operContractorsForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1mb3JtL29wZXItY29udHJhY3RvcnMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {OperContractor} from \"../oper-contractor\";\nimport {FormGroup} from \"@angular/forms\";\nimport {OperContractorsService} from \"../oper-contractors.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-oper-contractors-form',\n    templateUrl: './oper-contractors-form.component.html',\n    styleUrls: ['./oper-contractors-form.component.scss']\n})\nexport class OperContractorsFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: OperContractor = <OperContractor>{};\n\n    @ViewChild('operContractorsForm') operContractorsForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'document': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DOCUMENTO') + ' es obligatorio.'},\n        ],\n        'address': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DIRECCIÓN') + ' es obligatorio.'},\n        ],\n        'phone': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO') + ' es obligatorio.'},\n        ],\n        'email': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CORREO') + ' es obligatorio.'},\n        ],\n        'phone_support': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO DE SOPORTE') + ' es obligatorio.'},\n        ],\n        'email_support': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CORREO DE SOPORTE') + ' es obligatorio.'},\n        ],\n        'contact': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CONTACTO') + ' es obligatorio.'},\n        ],\n        'business_hour': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('HORARIO DE ATENCIÓN') + ' es obligatorio.'},\n        ],\n        'phone_emergency': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO DE EMERGENCIA') + ' es obligatorio.'},\n        ],\n        'email_emergency': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CORREO DE EMERGENCIA') + ' es obligatorio.'},\n        ],\n        'oper_movement_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('MOVIMIENTOS OPERATIVOS') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public operContractorsService: OperContractorsService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setOperMovementIds\n    setOperMovementIds(event: any) {\n        let operMovementIds = null;\n        if (event.value.length) {\n            operMovementIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                operMovementIds.push(event.value[i].id);\n            }\n        }\n        this.operContractorsService.operContractor.oper_movement_ids = operMovementIds;\n    }\n    // end setOperMovementIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy1saXN0L29wZXItY29udHJhY3RvcnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { OperContractorsService} from \"../oper-contractors.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-oper-contractors-list',\n    templateUrl: './oper-contractors-list.component.html',\n    styleUrls: ['./oper-contractors-list.component.scss'],\n})\nexport class OperContractorsListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public operContractorsService: OperContractorsService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.operContractorsService.getOperContractors();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperContractorsPage } from './oper-contractors.page';\nimport {OperContractorsEditComponent} from \"./oper-contractors-edit/oper-contractors-edit.component\";\nimport {OperContractorsCreateComponent} from \"./oper-contractors-create/oper-contractors-create.component\";\nimport {OperContractorsListComponent} from \"./oper-contractors-list/oper-contractors-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: OperContractorsPage\n    },\n    {\n        path: 'list',\n        component: OperContractorsListComponent\n    },\n    {\n      path: 'create',\n      component: OperContractorsCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: OperContractorsEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class OperContractorsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {OperContractorsPageRoutingModule} from './oper-contractors-routing.module';\n\nimport { OperContractorsPage} from './oper-contractors.page';\nimport { OperContractorsListComponent} from \"./oper-contractors-list/oper-contractors-list.component\";\nimport { OperContractorsCreateComponent} from \"./oper-contractors-create/oper-contractors-create.component\";\nimport { OperContractorsDuplicateComponent} from \"./oper-contractors-duplicate/oper-contractors-duplicate.component\";\nimport { OperContractorsEditComponent} from \"./oper-contractors-edit/oper-contractors-edit.component\";\nimport { OperContractorsFormComponent} from \"./oper-contractors-form/oper-contractors-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        OperContractorsPageRoutingModule\n    ],\n    declarations: [\n        OperContractorsPage,\n        OperContractorsListComponent,\n        OperContractorsCreateComponent,\n        OperContractorsDuplicateComponent,\n        OperContractorsEditComponent,\n        OperContractorsFormComponent,\n    ]\n})\nexport class OperContractorsPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItY29udHJhY3RvcnMvb3Blci1jb250cmFjdG9ycy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-oper-contractors',\n  templateUrl: './oper-contractors.page.html',\n  styleUrls: ['./oper-contractors.page.scss'],\n})\nexport class OperContractorsPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { OperContractor, OperContractorLists } from \"./oper-contractor\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OperContractorsService {\n\n    public operContractorsUrl = 'oper-contractors';\n    public operContractorsFormValid = new BehaviorSubject<boolean>(false);\n\n    public operContractors: OperContractor[] = [];\n    public operContractor: OperContractor = <OperContractor>{};\n    public operContractorLists: OperContractorLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getOperContractors(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.operContractorsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.operContractors = res.data;\n                    this.operContractorLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editOperContractor(id: any) {\n        this.api.get(this.operContractorsUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.operContractor = res.data.model;\n                    this.operContractorLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateOperContractor() {\n        this.api.put(this.operContractorsUrl + '/' + this.operContractor.id, {\n            model: this.operContractor,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperContractors(1);\n            }\n        );\n    }\n\n    public createOperContractor() {\n        this.api.get(this.operContractorsUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.operContractor = <OperContractor>{};\n                    this.operContractorLists = res.lists\n                }\n            );\n    }\n\n    public storeOperContractor() {\n        this.api.post(this.operContractorsUrl, {\n            model: this.operContractor,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperContractors(1);\n            }\n        );\n    }\n\n    public async deleteOperContractor(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.operContractorsUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getOperContractors(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}