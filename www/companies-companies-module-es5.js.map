{"version":3,"sources":["webpack:///src/app/companies/companies-create/companies-create.component.html","webpack:///src/app/companies/companies-duplicate/companies-duplicate.component.html","webpack:///src/app/companies/companies-edit/companies-edit.component.html","webpack:///src/app/companies/companies-form/companies-form.component.html","webpack:///src/app/companies/companies-list/companies-list.component.html","webpack:///src/app/companies/companies.page.html","webpack:///src/app/companies/companies-create/companies-create.component.scss","webpack:///src/app/companies/companies-create/companies-create.component.ts","webpack:///src/app/companies/companies-duplicate/companies-duplicate.component.scss","webpack:///src/app/companies/companies-duplicate/companies-duplicate.component.ts","webpack:///src/app/companies/companies-edit/companies-edit.component.scss","webpack:///src/app/companies/companies-edit/companies-edit.component.ts","webpack:///src/app/companies/companies-form/companies-form.component.scss","webpack:///src/app/companies/companies-form/companies-form.component.ts","webpack:///src/app/companies/companies-list/companies-list.component.scss","webpack:///src/app/companies/companies-list/companies-list.component.ts","webpack:///src/app/companies/companies-routing.module.ts","webpack:///src/app/companies/companies.module.ts","webpack:///src/app/companies/companies.page.scss","webpack:///src/app/companies/companies.page.ts","webpack:///src/app/companies/companies.service.ts"],"names":["CompaniesCreateComponent","companiesService","route","platform","id","formValid","clearPosts","companyForm","companiesForm","valueChanges","subscribe","data","companiesFormValid","next","valid","console","log","createCompany","company","selector","template","CompaniesDuplicateComponent","CompaniesEditComponent","model","snapshot","paramMap","get","editCompany","CompaniesFormComponent","toTitlecase","validationMessages","type","message","transform","event","compPhoneIds","value","length","i","push","comp_phone_ids","compAddressIds","comp_address_ids","compContactIds","comp_contact_ids","compResponsabilityIds","comp_responsability_ids","CompaniesListComponent","api","loading","getCompanies","content","scrollToTop","routes","path","component","CompaniesPageRoutingModule","imports","forChild","exports","CompaniesPageModule","declarations","CompaniesPage","CompaniesService","alert","toast","router","navigation","companiesUrl","companies","companyLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"companies-companies-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/companies'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"companiesService.storeCompany()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!companiesService.companiesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'EMPRESAS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-companies-form #companyForm [model]=\\\"companiesService.company\\\"></app-companies-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Companies duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/companies'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"companiesService.updateCompany()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!companiesService.companiesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'EMPRESAS' | titlecase}}: {{ companiesService.company?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-companies-form #companyForm [model]=\\\"companiesService.company\\\"></app-companies-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #companiesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- comp_phone_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'TELÉFONOS DE EMPRESAS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"comp_phone_ids\\\"\\n                          id=\\\"comp_phone_ids-field\\\"\\n                          [(ngModel)]=\\\"model.comp_phones\\\"\\n                          [items]=\\\"companiesService.companyLists.CompPhone\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('TELÉFONOS DE EMPRESAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('TELÉFONOS DE EMPRESAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setCompPhoneIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_phone_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['comp_phone_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end comp_phone_ids -->\\n\\n\\n    <!-- comp_address_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'EMPRESAS DIRECCIONES' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"comp_address_ids\\\"\\n                          id=\\\"comp_address_ids-field\\\"\\n                          [(ngModel)]=\\\"model.comp_addresses\\\"\\n                          [items]=\\\"companiesService.companyLists.CompAddress\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS DIRECCIONES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS DIRECCIONES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setCompAddressIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_address_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['comp_address_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end comp_address_ids -->\\n\\n\\n    <!-- comp_contact_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'EMPRESAS CONTACTOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"comp_contact_ids\\\"\\n                          id=\\\"comp_contact_ids-field\\\"\\n                          [(ngModel)]=\\\"model.comp_contacts\\\"\\n                          [items]=\\\"companiesService.companyLists.CompContact\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS CONTACTOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS CONTACTOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setCompContactIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_contact_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['comp_contact_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end comp_contact_ids -->\\n\\n\\n    <!-- comp_responsability_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'EMPRESAS RESPONSABILIDADES LEGALES' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"comp_responsability_ids\\\"\\n                          id=\\\"comp_responsability_ids-field\\\"\\n                          [(ngModel)]=\\\"model.comp_responsabilities\\\"\\n                          [items]=\\\"companiesService.companyLists.CompResponsability\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS RESPONSABILIDADES LEGALES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS RESPONSABILIDADES LEGALES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setCompResponsabilityIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_responsability_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['comp_responsability_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end comp_responsability_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- code -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"code\\\"\\n                            id=\\\"code-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['code']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end code -->\\n\\n\\n            <!-- nit -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NIT' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.nit\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"nit\\\"\\n                            id=\\\"nit-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.nit\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['nit']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end nit -->\\n\\n\\n            <!-- manager_name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE REPRESENTANTE LEGAL' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.manager_name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"manager_name\\\"\\n                            id=\\\"manager_name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.manager_name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['manager_name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end manager_name -->\\n\\n\\n            <!-- manager_document -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CÉDULA REPRESENTANTE LEGAL' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.manager_document\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"manager_document\\\"\\n                            id=\\\"manager_document-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.manager_document\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['manager_document']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end manager_document -->\\n\\n\\n            <!-- logo -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'LOGOTIPO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.logo\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"logo\\\"\\n                            id=\\\"logo-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.logo\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['logo']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end logo -->\\n\\n\\n            <!-- main -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'PRINCIPAL' | titlecase }}</ion-label>\\n                <ion-toggle name=\\\"main\\\"\\n                            id=\\\"main-field\\\"\\n                            slot=\\\"end\\\"\\n                            [(ngModel)]=\\\"model.main\\\"></ion-toggle>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.main\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['main']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end main -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'EMPRESAS' | titlecase}}\\\"\\n                 primaryLink=\\\"companies/create\\\"\\n                 primaryText=\\\"Crear {{'EMPRESAS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('EMPRESAS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.companiesService.searchValue = ''; companiesService.getCompanies()\\\"\\n                       (keyup.enter)=\\\"companiesService.getCompanies()\\\"\\n                       [(ngModel)]=\\\"companiesService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && companiesService.companies.length\\\">\\n        <ion-card *ngFor=\\\"let company of companiesService.companies; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company.code }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NIT' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company.nit }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE REPRESENTANTE LEGAL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company.manager_name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÉDULA REPRESENTANTE LEGAL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company.manager_document }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'LOGOTIPO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company.logo }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PRINCIPAL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company.main  ? 'Si' : 'No' }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONOS DE EMPRESAS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"company.comp_phones.length\\\">\\n                                <ng-container *ngFor=\\\"let compPhone of company.comp_phones; let last = last\\\">\\n                                    <a routerLink=\\\"/comp-phones/{{ compPhone.id }}/edit\\\">{{ compPhone.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS DIRECCIONES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"company.comp_addresses.length\\\">\\n                                <ng-container *ngFor=\\\"let compAddress of company.comp_addresses; let last = last\\\">\\n                                    <a routerLink=\\\"/comp-addresses/{{ compAddress.id }}/edit\\\">{{ compAddress.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS CONTACTOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"company.comp_contacts.length\\\">\\n                                <ng-container *ngFor=\\\"let compContact of company.comp_contacts; let last = last\\\">\\n                                    <a routerLink=\\\"/comp-contacts/{{ compContact.id }}/edit\\\">{{ compContact.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS RESPONSABILIDADES LEGALES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"company.comp_responsabilities.length\\\">\\n                                <ng-container *ngFor=\\\"let compResponsability of company.comp_responsabilities; let last = last\\\">\\n                                    <a routerLink=\\\"/comp-responsabilities/{{ compResponsability.id }}/edit\\\">{{ compResponsability.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/companies/' + company.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"companiesService.deleteCompany(company.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !companiesService.companies.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'EMPRESAS' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/companies/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'EMPRESAS' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"companiesService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"companiesService.getCompanies(companiesService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"companiesService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{companiesService.meta.current_page}}\\n                /{{companiesService.meta.last_page}} {{companiesService.meta.from}}-{{companiesService.meta.to}}\\n                /{{companiesService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"companiesService.getCompanies(companiesService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"companiesService.meta.current_page == companiesService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"EMPRESAS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/companies/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'EMPRESAS'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/companies/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'EMPRESAS' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtY3JlYXRlL2NvbXBhbmllcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {CompaniesService} from \"../companies.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Company} from \"../company\";\nimport {CompaniesFormComponent} from \"../companies-form/companies-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n    selector: 'app-companies-create',\n    templateUrl: './companies-create.component.html',\n    styleUrls: ['./companies-create.component.scss']\n})\nexport class CompaniesCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('companyForm') companyForm: CompaniesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public companiesService: CompaniesService,\n        public route: ActivatedRoute,\n        public platform: Platform\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.companyForm.companiesForm.valueChanges.subscribe((data) => {\n            this.companiesService.companiesFormValid.next(this.companyForm.companiesForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.companiesService.createCompany();\n        this.companiesService.company = <Company>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtZHVwbGljYXRlL2NvbXBhbmllcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-companies-duplicate',\n  templateUrl: './companies-duplicate.component.html',\n  styleUrls: ['./companies-duplicate.component.scss'],\n})\nexport class CompaniesDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtZWRpdC9jb21wYW5pZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {CompaniesService} from \"../companies.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Company} from \"../company\";\nimport {CompaniesFormComponent} from \"../companies-form/companies-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-companies-edit',\n  templateUrl: './companies-edit.component.html',\n  styleUrls: ['./companies-edit.component.scss']\n})\nexport class CompaniesEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('companyForm') companyForm: CompaniesFormComponent;\n\n    public id: any = null;\n    public model: Company = null;\n\n  constructor(\n      public companiesService: CompaniesService,\n      public route: ActivatedRoute,\n      public platform: Platform\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.companiesService.editCompany(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.companyForm.companiesForm.valueChanges.subscribe((data) => {\n          this.companiesService.companiesFormValid.next(this.companyForm.companiesForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtZm9ybS9jb21wYW5pZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Company} from \"../company\";\nimport {FormGroup} from \"@angular/forms\";\nimport {CompaniesService} from \"../companies.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-companies-form',\n    templateUrl: './companies-form.component.html',\n    styleUrls: ['./companies-form.component.scss']\n})\nexport class CompaniesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: Company = <Company>{};\n\n    @ViewChild('companiesForm') companiesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'code': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\n        ],\n        'nit': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NIT') + ' es obligatorio.'},\n        ],\n        'manager_name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE REPRESENTANTE LEGAL') + ' es obligatorio.'},\n        ],\n        'manager_document': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÉDULA REPRESENTANTE LEGAL') + ' es obligatorio.'},\n        ],\n        'logo': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('LOGOTIPO') + ' es obligatorio.'},\n        ],\n        'main': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PRINCIPAL') + ' es obligatorio.'},\n        ],\n        'comp_phone_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONOS DE EMPRESAS') + ' es obligatorio.'},\n        ],\n        'comp_address_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESAS DIRECCIONES') + ' es obligatorio.'},\n        ],\n        'comp_contact_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESAS CONTACTOS') + ' es obligatorio.'},\n        ],\n        'comp_responsability_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESAS RESPONSABILIDADES LEGALES') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public companiesService: CompaniesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setCompPhoneIds\n    setCompPhoneIds(event: any) {\n        let compPhoneIds = null;\n        if (event.value.length) {\n            compPhoneIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                compPhoneIds.push(event.value[i].id);\n            }\n        }\n        this.companiesService.company.comp_phone_ids = compPhoneIds;\n    }\n    // end setCompPhoneIds\n\n\n    // set setCompAddressIds\n    setCompAddressIds(event: any) {\n        let compAddressIds = null;\n        if (event.value.length) {\n            compAddressIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                compAddressIds.push(event.value[i].id);\n            }\n        }\n        this.companiesService.company.comp_address_ids = compAddressIds;\n    }\n    // end setCompAddressIds\n\n\n    // set setCompContactIds\n    setCompContactIds(event: any) {\n        let compContactIds = null;\n        if (event.value.length) {\n            compContactIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                compContactIds.push(event.value[i].id);\n            }\n        }\n        this.companiesService.company.comp_contact_ids = compContactIds;\n    }\n    // end setCompContactIds\n\n\n    // set setCompResponsabilityIds\n    setCompResponsabilityIds(event: any) {\n        let compResponsabilityIds = null;\n        if (event.value.length) {\n            compResponsabilityIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                compResponsabilityIds.push(event.value[i].id);\n            }\n        }\n        this.companiesService.company.comp_responsability_ids = compResponsabilityIds;\n    }\n    // end setCompResponsabilityIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtbGlzdC9jb21wYW5pZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { CompaniesService} from \"../companies.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-companies-list',\n    templateUrl: './companies-list.component.html',\n    styleUrls: ['./companies-list.component.scss'],\n})\nexport class CompaniesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public companiesService: CompaniesService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.companiesService.getCompanies();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CompaniesPage } from './companies.page';\nimport {CompaniesEditComponent} from \"./companies-edit/companies-edit.component\";\nimport {CompaniesCreateComponent} from \"./companies-create/companies-create.component\";\nimport {CompaniesListComponent} from \"./companies-list/companies-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CompaniesPage\n    },\n    {\n        path: 'list',\n        component: CompaniesListComponent\n    },\n    {\n      path: 'create',\n      component: CompaniesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: CompaniesEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class CompaniesPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {CompaniesPageRoutingModule} from './companies-routing.module';\n\nimport { CompaniesPage} from './companies.page';\nimport { CompaniesListComponent} from \"./companies-list/companies-list.component\";\nimport { CompaniesCreateComponent} from \"./companies-create/companies-create.component\";\nimport { CompaniesDuplicateComponent} from \"./companies-duplicate/companies-duplicate.component\";\nimport { CompaniesEditComponent} from \"./companies-edit/companies-edit.component\";\nimport { CompaniesFormComponent} from \"./companies-form/companies-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        CompaniesPageRoutingModule\n    ],\n    declarations: [\n        CompaniesPage,\n        CompaniesListComponent,\n        CompaniesCreateComponent,\n        CompaniesDuplicateComponent,\n        CompaniesEditComponent,\n        CompaniesFormComponent,\n    ]\n})\nexport class CompaniesPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-companies',\n  templateUrl: './companies.page.html',\n  styleUrls: ['./companies.page.scss'],\n})\nexport class CompaniesPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { Company, CompanyLists } from \"./company\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CompaniesService {\n\n    public companiesUrl = 'companies';\n    public companiesFormValid = new BehaviorSubject<boolean>(false);\n\n    public companies: Company[] = [];\n    public company: Company = <Company>{};\n    public companyLists: CompanyLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getCompanies(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.companiesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.companies = res.data;\n                    this.companyLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editCompany(id: any) {\n        this.api.get(this.companiesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.company = res.data.model;\n                    this.companyLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateCompany() {\n        this.api.put(this.companiesUrl + '/' + this.company.id, {\n            model: this.company,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getCompanies(1);\n            }\n        );\n    }\n\n    public createCompany() {\n        this.api.get(this.companiesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.company = <Company>{};\n                    this.companyLists = res.lists\n                }\n            );\n    }\n\n    public storeCompany() {\n        this.api.post(this.companiesUrl, {\n            model: this.company,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getCompanies(1);\n            }\n        );\n    }\n\n    public async deleteCompany(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.companiesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getCompanies(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"]}