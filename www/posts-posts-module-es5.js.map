{"version":3,"sources":["webpack:///src/app/posts/posts-create/posts-create.component.html","webpack:///src/app/posts/posts-duplicate/posts-duplicate.component.html","webpack:///src/app/posts/posts-edit/posts-edit.component.html","webpack:///src/app/posts/posts-form/posts-form.component.html","webpack:///src/app/posts/posts-list/posts-list.component.html","webpack:///src/app/posts/posts.page.html","webpack:///src/app/posts/posts-create/posts-create.component.scss","webpack:///src/app/posts/posts-create/posts-create.component.ts","webpack:///src/app/posts/posts-duplicate/posts-duplicate.component.scss","webpack:///src/app/posts/posts-duplicate/posts-duplicate.component.ts","webpack:///src/app/posts/posts-edit/posts-edit.component.scss","webpack:///src/app/posts/posts-edit/posts-edit.component.ts","webpack:///src/app/posts/posts-form/posts-form.component.scss","webpack:///src/app/posts/posts-form/posts-form.component.ts","webpack:///src/app/posts/posts-list/posts-list.component.scss","webpack:///src/app/posts/posts-list/posts-list.component.ts","webpack:///src/app/posts/posts-routing.module.ts","webpack:///src/app/posts/posts.module.ts","webpack:///src/app/posts/posts.page.scss","webpack:///src/app/posts/posts.page.ts","webpack:///src/app/posts/posts.service.ts"],"names":["PostsCreateComponent","postsService","route","id","formValid","clearPosts","postForm","postsForm","valueChanges","subscribe","data","postsFormValid","next","valid","console","log","createPost","post","selector","template","PostsDuplicateComponent","PostsEditComponent","model","snapshot","paramMap","get","editPost","PostsFormComponent","toTitlecase","validationMessages","type","message","transform","event","user_id","value","category_id","tagIds","length","i","push","tag_ids","commentIds","comment_ids","imageIds","image_ids","PostsListComponent","api","loading","getPosts","content","scrollToTop","routes","path","component","PostsPageRoutingModule","imports","forChild","exports","PostsPageModule","declarations","PostsPage","PostsService","alert","toast","router","navigation","postsUrl","posts","postLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","tag","tags","image","images","present","back","confirmation","confirm","providedIn"],"mappings":"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","file":"posts-posts-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/posts'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"postsService.storePost()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"outline\\\"\\n                        [disabled]=\\\"!postsService.postsFormValid.value\\\"> Guardar\\n                <ion-icon slot=\\\"icon-only\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'ENTRADAS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-posts-form #postForm [model]=\\\"postsService.post\\\"></app-posts-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Posts duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/posts'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"postsService.updatePost()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"outline\\\"\\n                        [disabled]=\\\"!postsService.postsFormValid.value\\\"> Guardar\\n                <ion-icon slot=\\\"icon-only\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'ENTRADAS' | titlecase}}: {{ postsService.post?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-posts-form #postForm [model]=\\\"postsService.post\\\"></app-posts-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #postsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- user_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'USUARIO' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"user_id\\\"\\n                          id=\\\"user_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.user\\\"\\n                          [items]=\\\"postsService.postLists.User\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('USUARIOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('USUARIOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setUserId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.user_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['user_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end user_id -->\\n\\n\\n    <!-- category_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'CATEGORÍA' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"category_id\\\"\\n                          id=\\\"category_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.category\\\"\\n                          [items]=\\\"postsService.postLists.Category\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CATEGORÍAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('CATEGORÍAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setCategoryId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.category_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['category_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end category_id -->\\n\\n\\n    <!-- tag_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'ETIQUETAS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"tag_ids\\\"\\n                          id=\\\"tag_ids-field\\\"\\n                          [(ngModel)]=\\\"model.tags\\\"\\n                          [items]=\\\"postsService.postLists.Tag\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('ETIQUETAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('ETIQUETAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setTagIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.tag_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['tag_ids']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end tag_ids -->\\n\\n\\n    <!-- comment_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'COMENTARIOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"comment_ids\\\"\\n                          id=\\\"comment_ids-field\\\"\\n                          [(ngModel)]=\\\"model.comments\\\"\\n                          [items]=\\\"postsService.postLists.Comment\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('COMENTARIOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('COMENTARIOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setCommentIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comment_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['comment_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end comment_ids -->\\n\\n\\n    <!-- image_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'IMÁGENES' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"image_ids\\\"\\n                          id=\\\"image_ids-field\\\"\\n                          [(ngModel)]=\\\"model.images\\\"\\n                          [items]=\\\"postsService.postLists.Image\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('IMÁGENES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('IMÁGENES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setImageIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.image_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['image_ids']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end image_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- summary -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'RESUMEN' | titlecase }}</ion-label>\\n                <ion-textarea [(ngModel)]=\\\"model.summary\\\"\\n                              name=\\\"summary\\\"\\n                              id=\\\"summary-field\\\"\\n                              [required]=\\\"true\\\"\\n                              rows=\\\"6\\\"\\n                              placeholder=\\\"\\\"></ion-textarea>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.summary\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['summary']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end summary -->\\n\\n\\n            <!-- from_date -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'DESDE' | titlecase }}</ion-label>\\n                <ion-datetime name=\\\"from_date\\\"\\n                              id=\\\"from_date-field\\\"\\n                              [doneText]=\\\"'Seleccionar'\\\"\\n                              max=\\\"2040-12-31\\\"\\n                              [cancelText]=\\\"'Cancelar'\\\"\\n                              [(ngModel)]=\\\"model.from_date\\\"\\n                              displayFormat=\\\"DD/MM/YYYY HH:mm\\\"></ion-datetime>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.from_date\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['from_date']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end from_date -->\\n\\n\\n            <!-- to_date -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'HASTA' | titlecase }}</ion-label>\\n                <ion-datetime name=\\\"to_date\\\"\\n                              id=\\\"to_date-field\\\"\\n                              [doneText]=\\\"'Seleccionar'\\\"\\n                              max=\\\"2040-12-31\\\"\\n                              [cancelText]=\\\"'Cancelar'\\\"\\n                              [(ngModel)]=\\\"model.to_date\\\"\\n                              displayFormat=\\\"DD/MM/YYYY HH:mm\\\"></ion-datetime>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.to_date\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['to_date']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end to_date -->\\n\\n\\n            <!-- accepted -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'ACEPTADO' | titlecase }}</ion-label>\\n                <ion-toggle name=\\\"accepted\\\"\\n                            id=\\\"accepted-field\\\"\\n                            slot=\\\"end\\\"\\n                            [(ngModel)]=\\\"model.accepted\\\"></ion-toggle>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.accepted\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['accepted']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end accepted -->\\n\\n\\n            <!-- promotion_date -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'FECHA DE PROMICIÓN' | titlecase }}</ion-label>\\n                <ion-datetime name=\\\"promotion_date\\\"\\n                              id=\\\"promotion_date-field\\\"\\n                              [doneText]=\\\"'Seleccionar'\\\"\\n                              max=\\\"2040-12-31\\\"\\n                              [cancelText]=\\\"'Cancelar'\\\"\\n                              [(ngModel)]=\\\"model.promotion_date\\\"\\n                              displayFormat=\\\"DD/MM/YYYY\\\"></ion-datetime>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.promotion_date\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['promotion_date']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end promotion_date -->\\n\\n\\n            <!-- content -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label position=\\\"stacked\\\" style=\\\"font-size: 1rem;\\\">{{ 'CONTENIDO' | titlecase }}</ion-label>\\n                <input [ngxSummernote]\\n                       name=\\\"content\\\"\\n                       id=\\\"content-field\\\"\\n                       [(ngModel)]=\\\"model.content\\\">\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.content\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['content']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end content -->\\n\\n\\n            <!-- code -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"code\\\"\\n                            id=\\\"code-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['code']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end code -->\\n\\n\\n            <!-- status -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'ESTADO' | titlecase }}</ion-label>\\n                <ion-select [(ngModel)]=\\\"model.status\\\"\\n                            [required]=\\\"true\\\"\\n                            name=\\\"status\\\"\\n                            id=\\\"status-field\\\"\\n                            okText=\\\"Seleccionar\\\"\\n                            cancelText=\\\"Cancelar\\\">\\n                    <ion-select-option value=\\\"active\\\">{{ 'Activo' | titlecase }}</ion-select-option>\\n                    <ion-select-option value=\\\"inactive\\\">{{ 'Inactivo' | titlecase }}</ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validationMessages.status\\\">\\n                <div class=\\\"error-message\\\" *ngIf=\\\"postsForm.form.controls['status']?.hasError(validation.type)\\\">\\n                    {{ validation.message }}\\n                </div>\\n            </ng-container>\\n        </div>\\n        <!-- end status -->\\n\\n\\n</form>\\n\\n<pre>\\n{{ model | json }}\\n</pre>\\n\";","export default \"<app-main-header title=\\\"{{'ENTRADAS' | titlecase}}\\\"\\n                 primaryLink=\\\"posts/create\\\"\\n                 primaryText=\\\"Crear {{'ENTRADAS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('ENTRADAS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.postsService.searchValue = ''; postsService.getPosts()\\\"\\n                       (keyup.enter)=\\\"postsService.getPosts()\\\"\\n                       [(ngModel)]=\\\"postsService.searchValue\\\"></ion-searchbar>\\n\\n    <ion-card>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && postsService.posts.length\\\">\\n            <ion-item *ngFor=\\\"let post of postsService.posts; let index = index\\\">\\n                <ion-label>\\n                    <h3>{{ 'NOMBRE' | titlecase }}: {{ post.name }}</h3>\\n                    <h3>{{ 'RESUMEN' | titlecase }}: {{ post.summary }}</h3>\\n                    <h3>{{ 'DESDE' | titlecase }}: {{ post.from_date | date:'dd/MM/yyyy HH:mm' }}</h3>\\n                    <h3>{{ 'HASTA' | titlecase }}: {{ post.to_date | date:'dd/MM/yyyy HH:mm' }}</h3>\\n                    <h3>{{ 'ACEPTADO' | titlecase }}: {{ post.accepted ? 'Si' : 'No' }}</h3>\\n                    <h3>{{ 'FECHA DE PROMICIÓN' | titlecase }}: {{ post.promotion_date | date:'dd/MM/yyyy' }}</h3>\\n                    <h3>{{ 'IMÁGEN PROMOCIÓN' | titlecase }}: <a *ngIf=\\\"post.promotion_image\\\" [href]=\\\"post.promotion_image\\\" target=\\\"_blank\\\">Ver archivo</a><span *ngIf=\\\"!post.promotion_image\\\">Sin archivo</span></h3>\\n                    <h3>{{ 'CONTENIDO' | titlecase }}: {{ post.content | stripHtml }}</h3>\\n                    <h3>{{ 'CÓDIGO' | titlecase }}: {{ post.code }}</h3>\\n                    <h3>{{ 'ESTADO' | titlecase }}: {{ post.status | status }}</h3>\\n                    <h3>{{ 'USUARIOS' | titlecase }}: <a routerLink=\\\"/users/{{ post.user.id }}/edit\\\">{{ post.user.name }}</a></h3>\\n                    <h3>{{ 'CATEGORÍAS' | titlecase }}: <a routerLink=\\\"/categories/{{ post.category.id }}/edit\\\">{{ post.category.name }}</a></h3>\\n                    <h3>{{ 'ETIQUETAS' | titlecase }}:\\n                    <ng-container *ngIf=\\\"post.tags.length\\\">\\n                        <ng-container *ngFor=\\\"let tag of post.tags; let last = last\\\">\\n                        <a routerLink=\\\"/tags/{{ tag.id }}/edit\\\">{{ tag.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                        </ng-container>\\n                    </ng-container>\\n                    </h3>\\n                    <h3>{{ 'COMENTARIOS' | titlecase }}:\\n                    <ng-container *ngIf=\\\"post.comments.length\\\">\\n                        <ng-container *ngFor=\\\"let comment of post.comments; let last = last\\\">\\n                        <a routerLink=\\\"/comments/{{ comment.id }}/edit\\\">{{ comment.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                        </ng-container>\\n                    </ng-container>\\n                    </h3>\\n                    <h3>{{ 'IMÁGENES' | titlecase }}:\\n                    <ng-container *ngIf=\\\"post.images.length\\\">\\n                        <ng-container *ngFor=\\\"let image of post.images; let last = last\\\">\\n                        <a routerLink=\\\"/images/{{ image.id }}/edit\\\">{{ image.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                        </ng-container>\\n                    </ng-container>\\n                    </h3>\\n                </ion-label>\\n\\n\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" [routerLink]=\\\"'/posts/' + post.id + '/edit'\\\">\\n                    <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                </ion-button>\\n                <!--<ion-button item-right fill=\\\"clear\\\" color=\\\"success\\\" (click)=\\\"null\\\">\\n                    <ion-icon name=\\\"eye-outline\\\"></ion-icon>\\n                </ion-button>-->\\n                <ion-button item-right fill=\\\"clear\\\" color=\\\"danger\\\" (click)=\\\"postsService.deletePost(post.id)\\\">\\n                    <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"!(loading.loading | async) && !postsService.posts.length\\\">\\n            <ion-item>\\n                <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label><h2>No se encontraron {{'ENTRADAS' | titlecase}}</h2></ion-label>\\n                <ion-button [routerLink]=\\\"'/posts/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                    Crear {{'ENTRADAS' | titlecase}}\\n                    <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n                </ion-button>\\n            </ion-item>\\n        </ng-container>\\n\\n    </ion-card>\\n\\n</ion-content>\\n\\n<ion-footer>\\n    <ion-row *ngIf=\\\"postsService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"postsService.getPosts(postsService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"postsService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{postsService.meta.current_page}}\\n                /{{postsService.meta.last_page}} {{postsService.meta.from}}-{{postsService.meta.to}}\\n                /{{postsService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"postsService.getPosts(postsService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"postsService.meta.current_page == postsService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"ENTRADAS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3RzLWNyZWF0ZS9wb3N0cy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {PostsService} from \"../posts.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Post} from \"../post\";\nimport {PostsFormComponent} from \"../posts-form/posts-form.component\";\n\n@Component({\n    selector: 'app-posts-create',\n    templateUrl: './posts-create.component.html',\n    styleUrls: ['./posts-create.component.scss']\n})\nexport class PostsCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('postForm') postForm: PostsFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public postsService: PostsService,\n        public route: ActivatedRoute\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.postForm.postsForm.valueChanges.subscribe((data) => {\n            this.postsService.postsFormValid.next(this.postForm.postsForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.postsService.createPost();\n        this.postsService.post = <Post>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3RzLWR1cGxpY2F0ZS9wb3N0cy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-posts-duplicate',\n  templateUrl: './posts-duplicate.component.html',\n  styleUrls: ['./posts-duplicate.component.scss'],\n})\nexport class PostsDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3RzLWVkaXQvcG9zdHMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {PostsService} from \"../posts.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Post} from \"../post\";\nimport {PostsFormComponent} from \"../posts-form/posts-form.component\";\n\n@Component({\n  selector: 'app-posts-edit',\n  templateUrl: './posts-edit.component.html',\n  styleUrls: ['./posts-edit.component.scss']\n})\nexport class PostsEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('postForm') postForm: PostsFormComponent;\n\n    public id: any = null;\n    public model: Post = null;\n\n  constructor(\n      public postsService: PostsService,\n      public route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.postsService.editPost(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.postForm.postsForm.valueChanges.subscribe((data) => {\n          this.postsService.postsFormValid.next(this.postForm.postsForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3RzLWZvcm0vcG9zdHMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Post} from \"../post\";\nimport {FormGroup} from \"@angular/forms\";\nimport {PostsService} from \"../posts.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-posts-form',\n    templateUrl: './posts-form.component.html',\n    styleUrls: ['./posts-form.component.scss']\n})\nexport class PostsFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: Post = <Post>{};\n\n    @ViewChild('postsForm') postsForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'summary': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('RESUMEN') + ' es obligatorio.'},\n        ],\n        'user_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('USUARIO') + ' es obligatorio.'},\n        ],\n        'category_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CATEGORÍA') + ' es obligatorio.'},\n        ],\n        'published': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PUBLICADO') + ' es obligatorio.'},\n        ],\n        'from_date': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('DESDE') + ' es obligatorio.'},\n        ],\n        'to_date': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('HASTA') + ' es obligatorio.'},\n        ],\n        'accepted': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ACEPTADO') + ' es obligatorio.'},\n        ],\n        'promotion_date': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('FECHA DE PROMICIÓN') + ' es obligatorio.'},\n        ],\n        'promotion_image': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('IMÁGEN PROMOCIÓN') + ' es obligatorio.'},\n        ],\n        'content': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CONTENIDO') + ' es obligatorio.'},\n        ],\n        'code': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\n        ],\n        'status': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ESTADO') + ' es obligatorio.'},\n        ],\n        'tag_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ETIQUETAS') + ' es obligatorio.'},\n        ],\n        'comment_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('COMENTARIOS') + ' es obligatorio.'},\n        ],\n        'image_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('IMÁGENES') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public postsService: PostsService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setUserId\n\n    setUserId(event: any) {\n        this.postsService.post.user_id = event.value ? event.value.id : null;\n    }\n    // end setUserId\n\n\n    // set setCategoryId\n\n    setCategoryId(event: any) {\n        this.postsService.post.category_id = event.value ? event.value.id : null;\n    }\n    // end setCategoryId\n\n\n    // set setTagIds\n    setTagIds(event: any) {\n        let tagIds = null;\n        if (event.value.length) {\n            tagIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                tagIds.push(event.value[i].id);\n            }\n        }\n        this.postsService.post.tag_ids = tagIds;\n    }\n    // end setTagIds\n\n\n    // set setCommentIds\n    setCommentIds(event: any) {\n        let commentIds = null;\n        if (event.value.length) {\n            commentIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                commentIds.push(event.value[i].id);\n            }\n        }\n        this.postsService.post.comment_ids = commentIds;\n    }\n    // end setCommentIds\n\n\n    // set setImageIds\n    setImageIds(event: any) {\n        let imageIds = null;\n        if (event.value.length) {\n            imageIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                imageIds.push(event.value[i].id);\n            }\n        }\n        this.postsService.post.image_ids = imageIds;\n    }\n    // end setImageIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3RzLWxpc3QvcG9zdHMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { PostsService} from \"../posts.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-posts-list',\n    templateUrl: './posts-list.component.html',\n    styleUrls: ['./posts-list.component.scss'],\n})\nexport class PostsListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public postsService: PostsService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.postsService.getPosts();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PostsPage } from './posts.page';\nimport {PostsEditComponent} from \"./posts-edit/posts-edit.component\";\nimport {PostsCreateComponent} from \"./posts-create/posts-create.component\";\nimport {PostsListComponent} from \"./posts-list/posts-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PostsListComponent\n    },\n    {\n      path: 'create',\n      component: PostsCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: PostsEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class PostsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {PostsPageRoutingModule} from './posts-routing.module';\n\nimport { PostsPage} from './posts.page';\nimport { PostsListComponent} from \"./posts-list/posts-list.component\";\nimport { PostsCreateComponent} from \"./posts-create/posts-create.component\";\nimport { PostsDuplicateComponent} from \"./posts-duplicate/posts-duplicate.component\";\nimport { PostsEditComponent} from \"./posts-edit/posts-edit.component\";\nimport { PostsFormComponent} from \"./posts-form/posts-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        PostsPageRoutingModule\n    ],\n    declarations: [\n        PostsPage,\n        PostsListComponent,\n        PostsCreateComponent,\n        PostsDuplicateComponent,\n        PostsEditComponent,\n        PostsFormComponent,\n    ]\n})\nexport class PostsPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3RzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.page.html',\n  styleUrls: ['./posts.page.scss'],\n})\nexport class PostsPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { Post, PostLists } from \"./post\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PostsService {\n\n    public postsUrl = 'posts';\n    public postsFormValid = new BehaviorSubject<boolean>(false);\n\n    public posts: Post[] = [];\n    public post: Post = <Post>{};\n    public postLists: PostLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getPosts(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.postsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.posts = res.data;\n                    this.postLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editPost(id: any) {\n        this.api.get(this.postsUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.post = res.data.model;\n                    this.postLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updatePost() {\n        this.api.put(this.postsUrl + '/' + this.post.id, {\n            model: this.post,\n            pivots: {\n                tag: this.post.tags,\n                image: this.post.images,\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getPosts(1);\n            }\n        );\n    }\n\n    public createPost() {\n        this.api.get(this.postsUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.post = <Post>{};\n                    this.postLists = res.lists\n                }\n            );\n    }\n\n    public storePost() {\n        this.api.post(this.postsUrl, {\n            model: this.post,\n            pivots: {\n                tag: this.post.tags,\n                image: this.post.images,\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getPosts(1);\n            }\n        );\n    }\n\n    public async deletePost(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.postsUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getPosts(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"]}