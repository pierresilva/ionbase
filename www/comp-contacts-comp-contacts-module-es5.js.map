{"version":3,"sources":["webpack:///src/app/comp-contacts/comp-contacts-create/comp-contacts-create.component.html","webpack:///src/app/comp-contacts/comp-contacts-duplicate/comp-contacts-duplicate.component.html","webpack:///src/app/comp-contacts/comp-contacts-edit/comp-contacts-edit.component.html","webpack:///src/app/comp-contacts/comp-contacts-form/comp-contacts-form.component.html","webpack:///src/app/comp-contacts/comp-contacts-list/comp-contacts-list.component.html","webpack:///src/app/comp-contacts/comp-contacts.page.html","webpack:///src/app/comp-contacts/comp-contacts-create/comp-contacts-create.component.scss","webpack:///src/app/comp-contacts/comp-contacts-create/comp-contacts-create.component.ts","webpack:///src/app/comp-contacts/comp-contacts-duplicate/comp-contacts-duplicate.component.scss","webpack:///src/app/comp-contacts/comp-contacts-duplicate/comp-contacts-duplicate.component.ts","webpack:///src/app/comp-contacts/comp-contacts-edit/comp-contacts-edit.component.scss","webpack:///src/app/comp-contacts/comp-contacts-edit/comp-contacts-edit.component.ts","webpack:///src/app/comp-contacts/comp-contacts-form/comp-contacts-form.component.scss","webpack:///src/app/comp-contacts/comp-contacts-form/comp-contacts-form.component.ts","webpack:///src/app/comp-contacts/comp-contacts-list/comp-contacts-list.component.scss","webpack:///src/app/comp-contacts/comp-contacts-list/comp-contacts-list.component.ts","webpack:///src/app/comp-contacts/comp-contacts-routing.module.ts","webpack:///src/app/comp-contacts/comp-contacts.module.ts","webpack:///src/app/comp-contacts/comp-contacts.page.scss","webpack:///src/app/comp-contacts/comp-contacts.page.ts","webpack:///src/app/comp-contacts/comp-contacts.service.ts"],"names":["CompContactsCreateComponent","compContactsService","route","platform","splitPanel","id","formValid","clearPosts","show","next","compContactForm","compContactsForm","valueChanges","subscribe","data","compContactsFormValid","valid","console","log","createCompContact","compContact","selector","template","CompContactsDuplicateComponent","CompContactsEditComponent","model","snapshot","paramMap","get","editCompContact","CompContactsFormComponent","toTitlecase","validationMessages","type","message","transform","event","company_id","value","syst_position_id","CompContactsListComponent","api","loading","getCompContacts","content","scrollToTop","routes","path","component","CompContactsPageRoutingModule","imports","forChild","exports","CompContactsPageModule","declarations","CompContactsPage","CompContactsService","alert","toast","router","navigation","compContactsUrl","compContacts","compContactLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"comp-contacts-comp-contacts-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/comp-contacts'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"compContactsService.storeCompContact()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!compContactsService.compContactsFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'EMPRESAS CONTACTOS' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-comp-contacts-form #compContactForm [model]=\\\"compContactsService.compContact\\\"></app-comp-contacts-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  CompContacts duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/comp-contacts'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"compContactsService.updateCompContact()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!compContactsService.compContactsFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'EMPRESAS CONTACTOS' | titlecase}}: {{ compContactsService.compContact?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-comp-contacts-form #compContactForm [model]=\\\"compContactsService.compContact\\\"></app-comp-contacts-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #compContactsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- company_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'EMPRESA' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"company_id\\\"\\r\\n                          id=\\\"company_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.company\\\"\\r\\n                          [items]=\\\"compContactsService.compContactLists.Company\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setCompanyId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.company_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"compContactsForm.form.controls['company_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end company_id -->\\r\\n\\r\\n\\r\\n    <!-- syst_position_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'CARGO' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"syst_position_id\\\"\\r\\n                          id=\\\"syst_position_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.syst_position\\\"\\r\\n                          [items]=\\\"compContactsService.compContactLists.SystPosition\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CARGOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('CARGOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setSystPositionId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_position_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"compContactsForm.form.controls['syst_position_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end syst_position_id -->\\r\\n\\r\\n\\r\\n            <!-- name -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"name\\\"\\r\\n                            id=\\\"name-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"compContactsForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end name -->\\r\\n\\r\\n\\r\\n            <!-- phone -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TELÉFONO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.phone\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"phone\\\"\\r\\n                            id=\\\"phone-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.phone\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"compContactsForm.form.controls['phone']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end phone -->\\r\\n\\r\\n\\r\\n            <!-- email -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CORREO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.email\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"email\\\"\\r\\n                            id=\\\"email-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"compContactsForm.form.controls['email']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end email -->\\r\\n\\r\\n\\r\\n            <!-- main -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'PRINCIPAL' | titlecase }}</ion-label>\\r\\n                <ion-toggle name=\\\"main\\\"\\r\\n                            id=\\\"main-field\\\"\\r\\n                            slot=\\\"end\\\"\\r\\n                            [(ngModel)]=\\\"model.main\\\"></ion-toggle>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.main\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"compContactsForm.form.controls['main']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end main -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'EMPRESAS CONTACTOS' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"comp-contacts/create\\\"\\r\\n                 primaryText=\\\"Crear {{'EMPRESAS CONTACTOS' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                       [placeholder]=\\\"'Buscar ' + ('EMPRESAS CONTACTOS' | lowercase )\\\"\\r\\n                       (ionCancel)=\\\"this.compContactsService.searchValue = ''; compContactsService.getCompContacts()\\\"\\r\\n                       (keyup.enter)=\\\"compContactsService.getCompContacts()\\\"\\r\\n                       [(ngModel)]=\\\"compContactsService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && compContactsService.compContacts?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let compContact of compContactsService.compContacts; let index = index\\\">\\r\\n            <ion-list>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ compContact?.name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ compContact?.phone }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CORREO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ compContact?.email }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PRINCIPAL' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ compContact?.main  ? 'Si' : 'No' }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/companies/{{ compContact?.company?.id }}/edit\\\">{{ compContact?.company?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CARGOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/syst-positions/{{ compContact?.syst_position?.id }}/edit\\\">{{ compContact?.syst_position?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/comp-contacts/' + compContact?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"compContactsService.deleteCompContact(compContact?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !compContactsService.compContacts?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'EMPRESAS CONTACTOS' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/comp-contacts/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\r\\n                Crear {{'EMPRESAS CONTACTOS' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"compContactsService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"compContactsService.getCompContacts(compContactsService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"compContactsService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{compContactsService.meta.current_page}}\\r\\n                /{{compContactsService.meta.last_page}} {{compContactsService.meta.from}}-{{compContactsService.meta.to}}\\r\\n                /{{compContactsService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"compContactsService.getCompContacts(compContactsService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"compContactsService.meta.current_page == compContactsService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"EMPRESAS CONTACTOS\\\"></app-main-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/comp-contacts/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'EMPRESAS CONTACTOS'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/comp-contacts/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'EMPRESAS CONTACTOS' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtY29udGFjdHMvY29tcC1jb250YWN0cy1jcmVhdGUvY29tcC1jb250YWN0cy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {CompContactsService} from \"../comp-contacts.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {CompContact} from \"../comp-contact\";\r\nimport {CompContactsFormComponent} from \"../comp-contacts-form/comp-contacts-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-comp-contacts-create',\r\n    templateUrl: './comp-contacts-create.component.html',\r\n    styleUrls: ['./comp-contacts-create.component.scss']\r\n})\r\nexport class CompContactsCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('compContactForm') compContactForm: CompContactsFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public compContactsService: CompContactsService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.compContactForm.compContactsForm.valueChanges.subscribe((data) => {\r\n            this.compContactsService.compContactsFormValid.next(this.compContactForm.compContactsForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.compContactsService.createCompContact();\r\n        this.compContactsService.compContact = <CompContact>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtY29udGFjdHMvY29tcC1jb250YWN0cy1kdXBsaWNhdGUvY29tcC1jb250YWN0cy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-comp-contacts-duplicate',\r\n  templateUrl: './comp-contacts-duplicate.component.html',\r\n  styleUrls: ['./comp-contacts-duplicate.component.scss'],\r\n})\r\nexport class CompContactsDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtY29udGFjdHMvY29tcC1jb250YWN0cy1lZGl0L2NvbXAtY29udGFjdHMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {CompContactsService} from \"../comp-contacts.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {CompContact} from \"../comp-contact\";\r\nimport {CompContactsFormComponent} from \"../comp-contacts-form/comp-contacts-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-comp-contacts-edit',\r\n  templateUrl: './comp-contacts-edit.component.html',\r\n  styleUrls: ['./comp-contacts-edit.component.scss']\r\n})\r\nexport class CompContactsEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('compContactForm') compContactForm: CompContactsFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: CompContact = null;\r\n\r\n  constructor(\r\n      public compContactsService: CompContactsService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.compContactsService.editCompContact(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.compContactForm.compContactsForm.valueChanges.subscribe((data) => {\r\n          this.compContactsService.compContactsFormValid.next(this.compContactForm.compContactsForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtY29udGFjdHMvY29tcC1jb250YWN0cy1mb3JtL2NvbXAtY29udGFjdHMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {CompContact} from \"../comp-contact\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {CompContactsService} from \"../comp-contacts.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-comp-contacts-form',\r\n    templateUrl: './comp-contacts-form.component.html',\r\n    styleUrls: ['./comp-contacts-form.component.scss']\r\n})\r\nexport class CompContactsFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: CompContact = <CompContact>{};\r\n\r\n    @ViewChild('compContactsForm') compContactsForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'company_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESA') + ' es obligatorio.'},\r\n        ],\r\n        'syst_position_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CARGO') + ' es obligatorio.'},\r\n        ],\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'phone': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO') + ' es obligatorio.'},\r\n        ],\r\n        'email': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CORREO') + ' es obligatorio.'},\r\n        ],\r\n        'main': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PRINCIPAL') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public compContactsService: CompContactsService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setCompanyId\r\n\r\n    setCompanyId(event: any) {\r\n        this.compContactsService.compContact.company_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setCompanyId\r\n\r\n\r\n    // set setSystPositionId\r\n\r\n    setSystPositionId(event: any) {\r\n        this.compContactsService.compContact.syst_position_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setSystPositionId\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtY29udGFjdHMvY29tcC1jb250YWN0cy1saXN0L2NvbXAtY29udGFjdHMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { CompContactsService} from \"../comp-contacts.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-comp-contacts-list',\r\n    templateUrl: './comp-contacts-list.component.html',\r\n    styleUrls: ['./comp-contacts-list.component.scss'],\r\n})\r\nexport class CompContactsListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public compContactsService: CompContactsService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.compContactsService.getCompContacts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CompContactsPage } from './comp-contacts.page';\r\nimport {CompContactsEditComponent} from \"./comp-contacts-edit/comp-contacts-edit.component\";\r\nimport {CompContactsCreateComponent} from \"./comp-contacts-create/comp-contacts-create.component\";\r\nimport {CompContactsListComponent} from \"./comp-contacts-list/comp-contacts-list.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CompContactsPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        component: CompContactsListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      component: CompContactsCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: CompContactsEditComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class CompContactsPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {CompContactsPageRoutingModule} from './comp-contacts-routing.module';\r\n\r\nimport { CompContactsPage} from './comp-contacts.page';\r\nimport { CompContactsListComponent} from \"./comp-contacts-list/comp-contacts-list.component\";\r\nimport { CompContactsCreateComponent} from \"./comp-contacts-create/comp-contacts-create.component\";\r\nimport { CompContactsDuplicateComponent} from \"./comp-contacts-duplicate/comp-contacts-duplicate.component\";\r\nimport { CompContactsEditComponent} from \"./comp-contacts-edit/comp-contacts-edit.component\";\r\nimport { CompContactsFormComponent} from \"./comp-contacts-form/comp-contacts-form.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        CompContactsPageRoutingModule\r\n    ],\r\n    declarations: [\r\n        CompContactsPage,\r\n        CompContactsListComponent,\r\n        CompContactsCreateComponent,\r\n        CompContactsDuplicateComponent,\r\n        CompContactsEditComponent,\r\n        CompContactsFormComponent,\r\n    ]\r\n})\r\nexport class CompContactsPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXAtY29udGFjdHMvY29tcC1jb250YWN0cy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-comp-contacts',\r\n  templateUrl: './comp-contacts.page.html',\r\n  styleUrls: ['./comp-contacts.page.scss'],\r\n})\r\nexport class CompContactsPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport { CompContact, CompContactLists } from \"./comp-contact\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CompContactsService {\r\n\r\n    public compContactsUrl = 'comp-contacts';\r\n    public compContactsFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public compContacts: CompContact[] = [];\r\n    public compContact: CompContact = <CompContact>{};\r\n    public compContactLists: CompContactLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n\r\n    public getCompContacts(page: any = this.page, perPage: any = this.perPage) {\r\n\r\n        this.api.get(this.compContactsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.compContacts = res.data;\r\n                    this.compContactLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editCompContact(id: any) {\r\n        this.api.get(this.compContactsUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.compContact = res.data.model;\r\n                    this.compContactLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateCompContact() {\r\n        this.api.put(this.compContactsUrl + '/' + this.compContact.id, {\r\n            model: this.compContact,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getCompContacts(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createCompContact() {\r\n        this.api.get(this.compContactsUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.compContact = <CompContact>{};\r\n                    this.compContactLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeCompContact() {\r\n        this.api.post(this.compContactsUrl, {\r\n            model: this.compContact,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getCompContacts(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteCompContact(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.compContactsUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getCompContacts(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n}\r\n"]}