{"version":3,"sources":["./src/app/oper-machines/oper-machines-create/oper-machines-create.component.html","./src/app/oper-machines/oper-machines-duplicate/oper-machines-duplicate.component.html","./src/app/oper-machines/oper-machines-edit/oper-machines-edit.component.html","./src/app/oper-machines/oper-machines-form/oper-machines-form.component.html","./src/app/oper-machines/oper-machines-list/oper-machines-list.component.html","./src/app/oper-machines/oper-machines.page.html","./src/app/oper-machines/oper-machines-create/oper-machines-create.component.scss","./src/app/oper-machines/oper-machines-create/oper-machines-create.component.ts","./src/app/oper-machines/oper-machines-duplicate/oper-machines-duplicate.component.scss","./src/app/oper-machines/oper-machines-duplicate/oper-machines-duplicate.component.ts","./src/app/oper-machines/oper-machines-edit/oper-machines-edit.component.scss","./src/app/oper-machines/oper-machines-edit/oper-machines-edit.component.ts","./src/app/oper-machines/oper-machines-form/oper-machines-form.component.scss","./src/app/oper-machines/oper-machines-form/oper-machines-form.component.ts","./src/app/oper-machines/oper-machines-list/oper-machines-list.component.scss","./src/app/oper-machines/oper-machines-list/oper-machines-list.component.ts","./src/app/oper-machines/oper-machines-routing.module.ts","./src/app/oper-machines/oper-machines.module.ts","./src/app/oper-machines/oper-machines.page.scss","./src/app/oper-machines/oper-machines.page.ts","./src/app/oper-machines/oper-machines.service.ts"],"names":[],"mappings":"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","file":"oper-machines-oper-machines-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-machines'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operMachinesService.storeOperMachine()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operMachinesService.operMachinesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'OPERATIVIDAD MAQUINARIA' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-oper-machines-form #operMachineForm [model]=\\\"operMachinesService.operMachine\\\"></app-oper-machines-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  OperMachines duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-machines'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operMachinesService.updateOperMachine()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operMachinesService.operMachinesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'OPERATIVIDAD MAQUINARIA' | titlecase}}: {{ operMachinesService.operMachine?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-oper-machines-form #operMachineForm [model]=\\\"operMachinesService.operMachine\\\"></app-oper-machines-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #operMachinesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- hous_unit_area_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'UNIDADESHABITACIONALESAREA' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"hous_unit_area_id\\\"\\n                          id=\\\"hous_unit_area_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.hous_unit_area\\\"\\n                          [items]=\\\"operMachinesService.operMachineLists.HousUnitArea\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('UNIDADES HABITACIONALES AREAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('UNIDADES HABITACIONALES AREAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setHousUnitAreaId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.hous_unit_area_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['hous_unit_area_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end hous_unit_area_id -->\\n\\n\\n    <!-- oper_contractor_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'CONTRATISTASOPERATIVO' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_contractor_id\\\"\\n                          id=\\\"oper_contractor_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.oper_contractor\\\"\\n                          [items]=\\\"operMachinesService.operMachineLists.OperContractor\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CONTRATISTAS OPERATIVOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('CONTRATISTAS OPERATIVOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperContractorId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_contractor_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['oper_contractor_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_contractor_id -->\\n\\n\\n    <!-- oper_preventive_maintenance_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'OPERATIVIDAD MTTO PREVENTIVOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_preventive_maintenance_ids\\\"\\n                          id=\\\"oper_preventive_maintenance_ids-field\\\"\\n                          [(ngModel)]=\\\"model.oper_preventive_maintenances\\\"\\n                          [items]=\\\"operMachinesService.operMachineLists.OperPreventiveMaintenance\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('OPERATIVIDAD MTTO PREVENTIVOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('OPERATIVIDAD MTTO PREVENTIVOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperPreventiveMaintenanceIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_preventive_maintenance_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['oper_preventive_maintenance_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_preventive_maintenance_ids -->\\n\\n\\n    <!-- oper_replacement_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'OPERATIVIDAD REPUESTOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_replacement_ids\\\"\\n                          id=\\\"oper_replacement_ids-field\\\"\\n                          [(ngModel)]=\\\"model.oper_replacements\\\"\\n                          [items]=\\\"operMachinesService.operMachineLists.OperReplacement\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('OPERATIVIDAD REPUESTOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('OPERATIVIDAD REPUESTOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperReplacementIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_replacement_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['oper_replacement_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_replacement_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- contract_expiration_date -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'FECHA VENCIMIENTO CONTRATO' | titlecase }}</ion-label>\\n                <ion-datetime name=\\\"contract_expiration_date\\\"\\n                              id=\\\"contract_expiration_date-field\\\"\\n                              [doneText]=\\\"'Seleccionar'\\\"\\n                              [cancelText]=\\\"'Cancelar'\\\"\\n                              [(ngModel)]=\\\"model.contract_expiration_date\\\"\\n                              displayFormat=\\\"DD/MM/YYYY\\\"></ion-datetime>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.contract_expiration_date\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['contract_expiration_date']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end contract_expiration_date -->\\n\\n\\n            <!-- contract_monthly_price -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'VALOR MENSUAL' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.contract_monthly_price\\\"\\n                            type=\\\"number\\\"\\n                            name=\\\"contract_monthly_price\\\"\\n                            id=\\\"contract_monthly_price-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.contract_monthly_price\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['contract_monthly_price']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end contract_monthly_price -->\\n\\n\\n            <!-- monthly_periodicity -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'PERIODICIDAD MENSUAL' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.monthly_periodicity\\\"\\n                            type=\\\"number\\\"\\n                            name=\\\"monthly_periodicity\\\"\\n                            id=\\\"monthly_periodicity-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.monthly_periodicity\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operMachinesForm.form.controls['monthly_periodicity']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end monthly_periodicity -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'OPERATIVIDAD MAQUINARIA' | titlecase}}\\\"\\n                 primaryLink=\\\"oper-machines/create\\\"\\n                 primaryText=\\\"Crear {{'OPERATIVIDAD MAQUINARIA' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('OPERATIVIDAD MAQUINARIA' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.operMachinesService.searchValue = ''; operMachinesService.getOperMachines()\\\"\\n                       (keyup.enter)=\\\"operMachinesService.getOperMachines()\\\"\\n                       [(ngModel)]=\\\"operMachinesService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operMachinesService.operMachines?.length\\\">\\n        <ion-card *ngFor=\\\"let operMachine of operMachinesService.operMachines; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operMachine?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'FECHA VENCIMIENTO CONTRATO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operMachine?.contract_expiration_date | dateFormat:'DD/MM/YYYY' }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'VALOR MENSUAL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operMachine?.contract_monthly_price }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PERIODICIDAD MENSUAL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operMachine?.monthly_periodicity }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'UNIDADES HABITACIONALES AREAS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/hous-unit-areas/{{ operMachine?.hous_unit_area?.id }}/edit\\\">{{ operMachine?.hous_unit_area?.name }}</a></div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CONTRATISTAS OPERATIVOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/oper-contractors/{{ operMachine?.oper_contractor?.id }}/edit\\\">{{ operMachine?.oper_contractor?.name }}</a></div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'OPERATIVIDAD MTTO PREVENTIVOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"operMachine?.oper_preventive_maintenances?.length\\\">\\n                                <ng-container *ngFor=\\\"let operPreventiveMaintenance of operMachine?.oper_preventive_maintenances; let last = last\\\">\\n                                    <a routerLink=\\\"/oper-preventive-maintenances/{{ operPreventiveMaintenance?.id }}/edit\\\">{{ operPreventiveMaintenance?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'OPERATIVIDAD REPUESTOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"operMachine?.oper_replacements?.length\\\">\\n                                <ng-container *ngFor=\\\"let operReplacement of operMachine?.oper_replacements; let last = last\\\">\\n                                    <a routerLink=\\\"/oper-replacements/{{ operReplacement?.id }}/edit\\\">{{ operReplacement?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/oper-machines/' + operMachine?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"operMachinesService.deleteOperMachine(operMachine?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operMachinesService.operMachines?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'OPERATIVIDAD MAQUINARIA' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/oper-machines/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'OPERATIVIDAD MAQUINARIA' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"operMachinesService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"operMachinesService.getOperMachines(operMachinesService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"operMachinesService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{operMachinesService.meta.current_page}}\\n                /{{operMachinesService.meta.last_page}} {{operMachinesService.meta.from}}-{{operMachinesService.meta.to}}\\n                /{{operMachinesService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"operMachinesService.getOperMachines(operMachinesService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"operMachinesService.meta.current_page == operMachinesService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"OPERATIVIDAD MAQUINARIA\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-machines/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'OPERATIVIDAD MAQUINARIA'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-machines/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'OPERATIVIDAD MAQUINARIA' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1jcmVhdGUvb3Blci1tYWNoaW5lcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {OperMachinesService} from \"../oper-machines.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperMachine} from \"../oper-machine\";\nimport {OperMachinesFormComponent} from \"../oper-machines-form/oper-machines-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-oper-machines-create',\n    templateUrl: './oper-machines-create.component.html',\n    styleUrls: ['./oper-machines-create.component.scss']\n})\nexport class OperMachinesCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operMachineForm') operMachineForm: OperMachinesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public operMachinesService: OperMachinesService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ionViewWillEnter() {\n       this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.operMachineForm.operMachinesForm.valueChanges.subscribe((data) => {\n            this.operMachinesService.operMachinesFormValid.next(this.operMachineForm.operMachinesForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.operMachinesService.createOperMachine();\n        this.operMachinesService.operMachine = <OperMachine>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1kdXBsaWNhdGUvb3Blci1tYWNoaW5lcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-oper-machines-duplicate',\n  templateUrl: './oper-machines-duplicate.component.html',\n  styleUrls: ['./oper-machines-duplicate.component.scss'],\n})\nexport class OperMachinesDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1lZGl0L29wZXItbWFjaGluZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {OperMachinesService} from \"../oper-machines.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperMachine} from \"../oper-machine\";\nimport {OperMachinesFormComponent} from \"../oper-machines-form/oper-machines-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-oper-machines-edit',\n  templateUrl: './oper-machines-edit.component.html',\n  styleUrls: ['./oper-machines-edit.component.scss']\n})\nexport class OperMachinesEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operMachineForm') operMachineForm: OperMachinesFormComponent;\n\n    public id: any = null;\n    public model: OperMachine = null;\n\n  constructor(\n      public operMachinesService: OperMachinesService,\n      public route: ActivatedRoute,\n      public platform: Platform,\n      public splitPanel: SplitPanelService,\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.operMachinesService.editOperMachine(this.id);\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n  ngAfterViewInit() {\n      this.operMachineForm.operMachinesForm.valueChanges.subscribe((data) => {\n          this.operMachinesService.operMachinesFormValid.next(this.operMachineForm.operMachinesForm.valid);\n      });\n  }\n\n}\n","export default \"/* generated section */\\n/* end generated section */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3Blci1tYWNoaW5lcy9vcGVyLW1hY2hpbmVzLWZvcm0vb3Blci1tYWNoaW5lcy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFBO0FBRUEsMEJBQUEiLCJmaWxlIjoic3JjL2FwcC9vcGVyLW1hY2hpbmVzL29wZXItbWFjaGluZXMtZm9ybS9vcGVyLW1hY2hpbmVzLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnZW5lcmF0ZWQgc2VjdGlvbiAqL1xuXG4vKiBlbmQgZ2VuZXJhdGVkIHNlY3Rpb24gKi9cbiJdfQ== */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {OperMachine} from \"../oper-machine\";\nimport {FormGroup} from \"@angular/forms\";\nimport {OperMachinesService} from \"../oper-machines.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-oper-machines-form',\n    templateUrl: './oper-machines-form.component.html',\n    styleUrls: ['./oper-machines-form.component.scss']\n})\nexport class OperMachinesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: OperMachine = <OperMachine>{};\n\n    @ViewChild('operMachinesForm') operMachinesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'hous_unit_area_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('AREA') + ' es obligatorio.'},\n        ],\n        'oper_contractor_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CONTRATISTA') + ' es obligatorio.'},\n        ],\n        'contract_expiration_date': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('FECHA VENCIMIENTO CONTRATO') + ' es obligatorio.'},\n        ],\n        'contract_monthly_price': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('VALOR MENSUAL') + ' es obligatorio.'},\n        ],\n        'monthly_periodicity': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERIODICIDAD MENSUAL') + ' es obligatorio.'},\n        ],\n        'oper_preventive_maintenance_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('OPERATIVIDAD MTTO PREVENTIVOS') + ' es obligatorio.'},\n        ],\n        'oper_replacement_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('OPERATIVIDAD REPUESTOS') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public operMachinesService: OperMachinesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setHousUnitAreaId\n\n    setHousUnitAreaId(event: any) {\n        this.operMachinesService.operMachine.hous_unit_area_id = event.value ? event.value.id : null;\n    }\n    // end setHousUnitAreaId\n\n\n    // set setOperContractorId\n\n    setOperContractorId(event: any) {\n        this.operMachinesService.operMachine.oper_contractor_id = event.value ? event.value.id : null;\n    }\n    // end setOperContractorId\n\n\n    // set setOperPreventiveMaintenanceIds\n    setOperPreventiveMaintenanceIds(event: any) {\n        let operPreventiveMaintenanceIds = null;\n        if (event.value.length) {\n            operPreventiveMaintenanceIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                operPreventiveMaintenanceIds.push(event.value[i].id);\n            }\n        }\n        this.operMachinesService.operMachine.oper_preventive_maintenance_ids = operPreventiveMaintenanceIds;\n    }\n    // end setOperPreventiveMaintenanceIds\n\n\n    // set setOperReplacementIds\n    setOperReplacementIds(event: any) {\n        let operReplacementIds = null;\n        if (event.value.length) {\n            operReplacementIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                operReplacementIds.push(event.value[i].id);\n            }\n        }\n        this.operMachinesService.operMachine.oper_replacement_ids = operReplacementIds;\n    }\n    // end setOperReplacementIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy1saXN0L29wZXItbWFjaGluZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { OperMachinesService} from \"../oper-machines.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-oper-machines-list',\n    templateUrl: './oper-machines-list.component.html',\n    styleUrls: ['./oper-machines-list.component.scss'],\n})\nexport class OperMachinesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public operMachinesService: OperMachinesService,\n        public api: ApiService,\n        public loading: LoadingService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.operMachinesService.getOperMachines();\n    }\n\n    ionViewWillEnter() {\n     this.splitPanel.show.next(true);\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperMachinesPage } from './oper-machines.page';\nimport {OperMachinesEditComponent} from \"./oper-machines-edit/oper-machines-edit.component\";\nimport {OperMachinesCreateComponent} from \"./oper-machines-create/oper-machines-create.component\";\nimport {OperMachinesListComponent} from \"./oper-machines-list/oper-machines-list.component\";\n\nconst routes: Routes = [\n// generated section\n    {\n        path: '',\n        data: {\n            title: 'OPERATIVIDAD MAQUINARIA',\n            roles: ['admin'],\n            // permissions: []\n        },\n        component: OperMachinesPage\n    },\n    {\n        path: 'list',\n        data: {\n            title: 'OPERATIVIDAD MAQUINARIA',\n            roles: ['admin'],\n            // permissions: []\n        },\n        component: OperMachinesListComponent\n    },\n    {\n      path: 'create',\n      data: {\n          title: 'OPERATIVIDAD MAQUINARIA',\n          roles: ['admin'],\n          // permissions: []\n      },\n      component: OperMachinesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        data: {\n            title: 'OPERATIVIDAD MAQUINARIA',\n            roles: ['admin'],\n            // permissions: []\n        },\n        component: OperMachinesEditComponent\n    },\n];\n// end generated section\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class OperMachinesPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {OperMachinesPageRoutingModule} from './oper-machines-routing.module';\n\nimport { OperMachinesPage} from './oper-machines.page';\nimport { OperMachinesListComponent} from \"./oper-machines-list/oper-machines-list.component\";\nimport { OperMachinesCreateComponent} from \"./oper-machines-create/oper-machines-create.component\";\nimport { OperMachinesDuplicateComponent} from \"./oper-machines-duplicate/oper-machines-duplicate.component\";\nimport { OperMachinesEditComponent} from \"./oper-machines-edit/oper-machines-edit.component\";\nimport { OperMachinesFormComponent} from \"./oper-machines-form/oper-machines-form.component\";\n\n@NgModule({\n    imports: [\n    // imports generated section\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        OperMachinesPageRoutingModule\n    // end imports generated section\n    ],\n    declarations: [\n    // declarations generated section\n        OperMachinesPage,\n        OperMachinesListComponent,\n        OperMachinesCreateComponent,\n        OperMachinesDuplicateComponent,\n        OperMachinesEditComponent,\n        OperMachinesFormComponent,\n    // end declarations generated section\n    ]\n})\nexport class OperMachinesPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItbWFjaGluZXMvb3Blci1tYWNoaW5lcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-oper-machines',\n  templateUrl: './oper-machines.page.html',\n  styleUrls: ['./oper-machines.page.scss'],\n})\nexport class OperMachinesPage implements OnInit {\n\n  constructor(\n    public splitPanel: SplitPanelService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { OperMachine, OperMachineLists } from \"./oper-machine\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OperMachinesService {\n\n    public operMachinesUrl = 'oper-machines';\n    public operMachinesFormValid = new BehaviorSubject<boolean>(false);\n\n    public operMachines: OperMachine[] = [];\n    public operMachine: OperMachine = <OperMachine>{};\n    public operMachineLists: OperMachineLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n// generated section\n    public getOperMachines(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.operMachinesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.operMachines = res.data;\n                    this.operMachineLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editOperMachine(id: any) {\n        this.api.get(this.operMachinesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.operMachine = res.data.model;\n                    this.operMachineLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateOperMachine() {\n        this.api.put(this.operMachinesUrl + '/' + this.operMachine.id, {\n            model: this.operMachine,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperMachines(1);\n            }\n        );\n    }\n\n    public createOperMachine() {\n        this.api.get(this.operMachinesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.operMachine = <OperMachine>{};\n                    this.operMachineLists = res.lists\n                }\n            );\n    }\n\n    public storeOperMachine() {\n        this.api.post(this.operMachinesUrl, {\n            model: this.operMachine,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperMachines(1);\n            }\n        );\n    }\n\n    public async deleteOperMachine(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.operMachinesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getOperMachines(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n// end generated section\n\n}\n"],"sourceRoot":"webpack:///"}