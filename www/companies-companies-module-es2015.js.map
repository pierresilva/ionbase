{"version":3,"sources":["./src/app/companies/companies-create/companies-create.component.html","./src/app/companies/companies-duplicate/companies-duplicate.component.html","./src/app/companies/companies-edit/companies-edit.component.html","./src/app/companies/companies-form/companies-form.component.html","./src/app/companies/companies-list/companies-list.component.html","./src/app/companies/companies.page.html","./src/app/companies/companies-create/companies-create.component.scss","./src/app/companies/companies-create/companies-create.component.ts","./src/app/companies/companies-duplicate/companies-duplicate.component.scss","./src/app/companies/companies-duplicate/companies-duplicate.component.ts","./src/app/companies/companies-edit/companies-edit.component.scss","./src/app/companies/companies-edit/companies-edit.component.ts","./src/app/companies/companies-form/companies-form.component.scss","./src/app/companies/companies-form/companies-form.component.ts","./src/app/companies/companies-list/companies-list.component.scss","./src/app/companies/companies-list/companies-list.component.ts","./src/app/companies/companies-routing.module.ts","./src/app/companies/companies.module.ts","./src/app/companies/companies.page.scss","./src/app/companies/companies.page.ts","./src/app/companies/companies.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,+/BAAg8B,wBAAwB,oOAAoO,E;;;;;;;;;;;;ACA3sC;AAAe,0GAA2C,E;;;;;;;;;;;;ACA1D;AAAe,igCAAk8B,wBAAwB,IAAI,kCAAkC,wOAAwO,E;;;;;;;;;;;;ACAvvC;AAAe,mOAAoK,uCAAuC,m0CAAm0C,sBAAsB,+LAA+L,sCAAsC,g1CAAg1C,sBAAsB,iMAAiM,oCAAoC,20CAA20C,sBAAsB,wMAAwM,oDAAoD,65CAA65C,sBAAsB,oNAAoN,wBAAwB,ymBAAymB,sBAAsB,iOAAiO,wBAAwB,ymBAAymB,sBAAsB,gOAAgO,qBAAqB,omBAAomB,sBAAsB,wOAAwO,4CAA4C,ipBAAipB,sBAAsB,qPAAqP,4CAA4C,qqBAAqqB,sBAAsB,6OAA6O,0BAA0B,wjBAAwjB,sBAAsB,iOAAiO,2BAA2B,2gBAA2gB,sBAAsB,gIAAgI,E;;;;;;;;;;;;ACA9kZ;AAAe,2FAA4B,wBAAwB,8FAA8F,wBAAwB,yXAAyX,0WAA0W,qKAAqK,wBAAwB,qEAAqE,iBAAiB,+JAA+J,wBAAwB,qEAAqE,iBAAiB,+JAA+J,qBAAqB,qEAAqE,gBAAgB,+JAA+J,4CAA4C,qEAAqE,yBAAyB,+JAA+J,4CAA4C,qEAAqE,6BAA6B,+JAA+J,0BAA0B,qEAAqE,iBAAiB,+JAA+J,2BAA2B,qEAAqE,gCAAgC,+JAA+J,uCAAuC,qPAAqP,wFAAwF,iBAAiB,UAAU,mBAAmB,0TAA0T,sCAAsC,6PAA6P,2FAA2F,mBAAmB,UAAU,qBAAqB,0TAA0T,oCAAoC,2PAA2P,0FAA0F,mBAAmB,UAAU,qBAAqB,0TAA0T,oDAAoD,kRAAkR,kGAAkG,0BAA0B,UAAU,4BAA4B,y4CAAy4C,wBAAwB,0JAA0J,wBAAwB,2nBAA2nB,8GAA8G,oCAAoC,qBAAqB,iCAAiC,GAAG,4BAA4B,GAAG,0BAA0B,qBAAqB,6BAA6B,6aAA6a,E;;;;;;;;;;;;ACA5iR;AAAe,4UAA6Q,aAAa,eAAe,qBAAqB,yBAAyB,mSAAmS,2BAA2B,+TAA+T,aAAa,eAAe,qBAAqB,yBAAyB,iSAAiS,0BAA0B,wLAAwL,E;;;;;;;;;;;;ACAhiD;AAAe,6GAA8C,uLAAuL,E;;;;;;;;;;;;;;;;;;;;ACA1K;AACpB;AACP;AAGL;IAO7B,wBAAwB,SAAxB,wBAAwB;IAOjC,YACW,gBAAkC,EAClC,KAAqB,EACrB,QAAkB;QAFlB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAN7B,OAAE,GAAQ,IAAI,CAAC;QACR,cAAS,GAAG,KAAK,CAAC;IAQzB,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,eAAe;QACX,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC3D,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACN,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAY,EAAE,CAAC;IAChD,CAAC;CAEJ;;YA1CO,mEAAgB;YAChB,8DAAc;YAGb,uDAAQ;;;0BASZ,uDAAS,SAAC,aAAa;;AAFf,wBAAwB;IALpC,+DAAS,CAAC;QACP,QAAQ,EAAE,sBAAsB;QAChC,sQAAgD;;KAEnD,CAAC;GACW,wBAAwB,CA+BpC;AA/BoC;;;;;;;;;;;;;ACZrC;AAAe,6GAA8C,+LAA+L,E;;;;;;;;;;;;;;;;;ACA1M;IAOrC,2BAA2B,SAA3B,2BAA2B;IAEtC,gBAAgB,CAAC;IAEjB,QAAQ,KAAI,CAAC;CAEd;;AANY,2BAA2B;IALvC,+DAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,+QAAmD;;KAEpD,CAAC;GACW,2BAA2B,CAMvC;AANuC;;;;;;;;;;;;;ACPxC;AAAe,6GAA8C,+KAA+K,E;;;;;;;;;;;;;;;;;;;;ACAlK;AACpB;AACP;AAGL;IAO7B,sBAAsB,SAAtB,sBAAsB;IAOjC,YACW,gBAAkC,EAClC,KAAqB,EACrB,QAAkB;QAFlB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QANpB,OAAE,GAAQ,IAAI,CAAC;QACf,UAAK,GAAY,IAAI,CAAC;IAM3B,CAAC;IAEL,QAAQ;QACJ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,eAAe;QACX,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC3D,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;IACP,CAAC;CAEF;;YAnCO,mEAAgB;YAChB,8DAAc;YAGb,uDAAQ;;;0BASZ,uDAAS,SAAC,aAAa;;AAFf,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,gQAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAwBlC;AAxBkC;;;;;;;;;;;;;ACZnC;AAAe,6GAA8C,+KAA+K,E;;;;;;;;;;;;;;;;;;;ACA3J;AAG3B;AACR;IAOjC,sBAAsB,SAAtB,sBAAsB;IA0C/B,YACW,gBAAkC,EACjC,WAA0B;QAD3B,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,gBAAW,GAAX,WAAW,CAAe;QA1CtB,UAAK,GAAqB,EAAE,CAAC;QAItC,uBAAkB,GAAG;YACxB,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,kBAAkB,EAAC;aACvG;YACD,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,kBAAkB,EAAC;aACvG;YACD,KAAK,EAAE;gBACH,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,kBAAkB,EAAC;aACpG;YACD,cAAc,EAAE;gBACZ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,4BAA4B,CAAC,GAAG,kBAAkB,EAAC;aAC3H;YACD,kBAAkB,EAAE;gBAChB,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,4BAA4B,CAAC,GAAG,kBAAkB,EAAC;aAC3H;YACD,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,kBAAkB,EAAC;aACzG;YACD,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,kBAAkB,EAAC;aAC1G;YACD,gBAAgB,EAAE;gBACd,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,uBAAuB,CAAC,GAAG,kBAAkB,EAAC;aACtH;YACD,kBAAkB,EAAE;gBAChB,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,sBAAsB,CAAC,GAAG,kBAAkB,EAAC;aACrH;YACD,kBAAkB,EAAE;gBAChB,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC,GAAG,kBAAkB,EAAC;aACnH;YACD,yBAAyB,EAAE;gBACvB,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,oCAAoC,CAAC,GAAG,kBAAkB,EAAC;aACnI;SACJ,CAAC;IAOF,CAAC;IAED,QAAQ;IACR,CAAC;IAED,eAAe;IACf,CAAC;IAGD,sBAAsB;IACtB,eAAe,CAAC,KAAU;QACtB,IAAI,YAAY,GAAG,IAAI,CAAC;QACxB,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;YACpB,YAAY,GAAG,EAAE,CAAC;YAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACxC;SACJ;QACD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,cAAc,GAAG,YAAY,CAAC;IAChE,CAAC;IACD,sBAAsB;IAGtB,wBAAwB;IACxB,iBAAiB,CAAC,KAAU;QACxB,IAAI,cAAc,GAAG,IAAI,CAAC;QAC1B,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;YACpB,cAAc,GAAG,EAAE,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aAC1C;SACJ;QACD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,gBAAgB,GAAG,cAAc,CAAC;IACpE,CAAC;IACD,wBAAwB;IAGxB,wBAAwB;IACxB,iBAAiB,CAAC,KAAU;QACxB,IAAI,cAAc,GAAG,IAAI,CAAC;QAC1B,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;YACpB,cAAc,GAAG,EAAE,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aAC1C;SACJ;QACD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,gBAAgB,GAAG,cAAc,CAAC;IACpE,CAAC;IACD,wBAAwB;IAGxB,+BAA+B;IAC/B,wBAAwB,CAAC,KAAU;QAC/B,IAAI,qBAAqB,GAAG,IAAI,CAAC;QACjC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;YACpB,qBAAqB,GAAG,EAAE,CAAC;YAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACjD;SACJ;QACD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,uBAAuB,GAAG,qBAAqB,CAAC;IAClF,CAAC;CAIJ;;YAxHO,mEAAgB;YAChB,6DAAa;;;oBAShB,mDAAK,SAAC,OAAO;4BAEb,uDAAS,SAAC,eAAe;;AAJjB,sBAAsB;IALlC,+DAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;QAC9B,gQAA8C;;KAEjD,CAAC;GACW,sBAAsB,CAgHlC;AAhHkC;;;;;;;;;;;;;ACXnC;AAAe,6GAA8C,+KAA+K,E;;;;;;;;;;;;;;;;;;;;;ACAjL;AACJ;AACO;AACQ;AAC5B;IAO7B,sBAAsB,SAAtB,sBAAsB;IAM/B,YACW,gBAAkC,EAClC,GAAe,EACf,OAAuB;QAFvB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,QAAG,GAAH,GAAG,CAAY;QACf,YAAO,GAAP,OAAO,CAAgB;IAElC,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;CAEJ;;YA/BQ,mEAAgB;YACjB,uEAAU;YACV,+EAAc;;;sBAUjB,uDAAS,SAAC,yDAAU,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC;;AAF7B,sBAAsB;IALlC,+DAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;QAC9B,gQAA8C;;KAEjD,CAAC;GACW,sBAAsB,CAqBlC;AArBkC;;;;;;;;;;;;;;;;;;;;;;;ACXM;AACc;AAEN;AACgC;AACM;AACN;AAEjF,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KAC3B;IACD;QACI,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,+FAAsB;KACpC;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,qGAAwB;KACpC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,+FAAsB;KACpC;CACJ,CAAC;IAQW,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IANtC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE;YACP,4DAAY;SACb;KACF,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACM;AACF;AAEA;AAEW;AAEgB;AAEtB;AACkC;AACM;AACS;AACf;AACA;IAmBrE,mBAAmB,SAAnB,mBAAmB;CAC/B;AADY,mBAAmB;IAjB/B,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kEAAY;YACZ,oFAA0B;SAC7B;QACD,YAAY,EAAE;YACV,6DAAa;YACb,+FAAsB;YACtB,qGAAwB;YACxB,+GAA2B;YAC3B,gGAAsB;YACtB,gGAAsB;SACzB;KACJ,CAAC;GACW,mBAAmB,CAC/B;AAD+B;;;;;;;;;;;;;AClChC;AAAe,6GAA8C,+IAA+I,E;;;;;;;;;;;;;;;;;ACA1J;IAOrC,aAAa,SAAb,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,6NAAoC;;KAErC,CAAC;GACW,aAAa,CAOzB;AAPyB;;;;;;;;;;;;;;;;;;;;;;;;ACPe;AACF;AACoB;AAGI;AACA;AACS;AACnC;IAOxB,gBAAgB,SAAhB,gBAAgB;IAkBzB,YACW,GAAe,EACf,KAAmB,EACnB,KAAmB,EACnB,MAAc,EACb,UAA6B;QAJ9B,QAAG,GAAH,GAAG,CAAY;QACf,UAAK,GAAL,KAAK,CAAc;QACnB,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAQ;QACb,eAAU,GAAV,UAAU,CAAmB;QArBlC,iBAAY,GAAG,WAAW,CAAC;QAC3B,uBAAkB,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;QAEzD,cAAS,GAAc,EAAE,CAAC;QAC1B,YAAO,GAAqB,EAAE,CAAC;QAC/B,iBAAY,GAAiB,EAAE,CAAC;QAEhC,gBAAW,GAAG,EAAE,CAAC;QACjB,YAAO,GAAG,EAAE,CAAC;QAEb,SAAI,GAAS,IAAI,CAAC;QAElB,SAAI,GAAG,CAAC,CAAC;QAET,iBAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAS/D,CAAC;IAEM,YAAY,CAAC,OAAY,IAAI,CAAC,IAAI,EAAE,UAAe,IAAI,CAAC,OAAO;QAElE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,QAAQ,GAAG,IAAI,GAAG,WAAW,GAAG,OAAO,GAAG,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC;aAC1G,SAAS,CACN,CAAC,GAAQ,EAAE,EAAE;YACT,aAAa;YACb,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC1D,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC;YAC9B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACzB,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE;YACT,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CACJ,CAAC;IACV,CAAC;IAEM,WAAW,CAAC,EAAO;QACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,EAAE,GAAG,OAAO,CAAC;aAC/C,SAAS,CACN,CAAC,GAAQ,EAAE,EAAE;YACT,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YAC9B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC;QAClC,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE;YACT,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CACJ,CAAC;IACV,CAAC;IAEM,aAAa;QAChB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;YACpD,KAAK,EAAE,IAAI,CAAC,OAAO;YACnB,MAAM,EAAE,EACP;SACJ,CAAC,CAAC,SAAS,CACR,CAAC,GAAQ,EAAE,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CACJ,CAAC;IACN,CAAC;IAEM,aAAa;QAChB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;aACtC,SAAS,CACN,CAAC,GAAQ,EAAE,EAAE;YACT,IAAI,CAAC,OAAO,GAAY,EAAE,CAAC;YAC3B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK;QACjC,CAAC,CACJ,CAAC;IACV,CAAC;IAEM,YAAY;QACf,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YAC7B,KAAK,EAAE,IAAI,CAAC,OAAO;YACnB,MAAM,EAAE,EACP;SACJ,CAAC,CAAC,SAAS,CACR,CAAC,GAAQ,EAAE,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CACJ,CAAC;IACN,CAAC;IAEY,aAAa,CAAC,EAAO;;YAC9B,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY,CACzC,yBAAyB,CAC5B,CAAC;YACF,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC;qBAC5C,SAAS,CACN,CAAC,GAAQ,EAAE,EAAE;oBACT,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;oBACxD,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBACzB,CAAC,CACJ,CAAC;aACT;iBAAM;gBACH,OAAO;aACV;QACL,CAAC;KAAA;CAEJ;;YA7HO,uEAAU;YAGV,2EAAY;YACZ,2EAAY;YALZ,sDAAM;YAMN,qFAAiB;;AAQZ,gBAAgB;IAH5B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,gBAAgB,CAgH5B;AAhH4B","file":"companies-companies-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/companies'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"companiesService.storeCompany()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!companiesService.companiesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'EMPRESAS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-companies-form #companyForm [model]=\\\"companiesService.company\\\"></app-companies-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Companies duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/companies'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"companiesService.updateCompany()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!companiesService.companiesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'EMPRESAS' | titlecase}}: {{ companiesService.company?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-companies-form #companyForm [model]=\\\"companiesService.company\\\"></app-companies-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #companiesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- comp_phone_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'TELÉFONOS DE EMPRESAS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"comp_phone_ids\\\"\\n                          id=\\\"comp_phone_ids-field\\\"\\n                          [(ngModel)]=\\\"model.comp_phones\\\"\\n                          [items]=\\\"companiesService.companyLists.CompPhone\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('TELÉFONOS DE EMPRESAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('TELÉFONOS DE EMPRESAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setCompPhoneIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_phone_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['comp_phone_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end comp_phone_ids -->\\n\\n\\n    <!-- comp_address_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'EMPRESAS DIRECCIONES' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"comp_address_ids\\\"\\n                          id=\\\"comp_address_ids-field\\\"\\n                          [(ngModel)]=\\\"model.comp_addresses\\\"\\n                          [items]=\\\"companiesService.companyLists.CompAddress\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS DIRECCIONES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS DIRECCIONES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setCompAddressIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_address_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['comp_address_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end comp_address_ids -->\\n\\n\\n    <!-- comp_contact_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'EMPRESAS CONTACTOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"comp_contact_ids\\\"\\n                          id=\\\"comp_contact_ids-field\\\"\\n                          [(ngModel)]=\\\"model.comp_contacts\\\"\\n                          [items]=\\\"companiesService.companyLists.CompContact\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS CONTACTOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS CONTACTOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setCompContactIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_contact_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['comp_contact_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end comp_contact_ids -->\\n\\n\\n    <!-- comp_responsability_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'EMPRESAS RESPONSABILIDADES LEGALES' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"comp_responsability_ids\\\"\\n                          id=\\\"comp_responsability_ids-field\\\"\\n                          [(ngModel)]=\\\"model.comp_responsabilities\\\"\\n                          [items]=\\\"companiesService.companyLists.CompResponsability\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS RESPONSABILIDADES LEGALES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS RESPONSABILIDADES LEGALES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setCompResponsabilityIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_responsability_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['comp_responsability_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end comp_responsability_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- code -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"code\\\"\\n                            id=\\\"code-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['code']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end code -->\\n\\n\\n            <!-- nit -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NIT' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.nit\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"nit\\\"\\n                            id=\\\"nit-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.nit\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['nit']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end nit -->\\n\\n\\n            <!-- manager_name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE REPRESENTANTE LEGAL' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.manager_name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"manager_name\\\"\\n                            id=\\\"manager_name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.manager_name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['manager_name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end manager_name -->\\n\\n\\n            <!-- manager_document -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CÉDULA REPRESENTANTE LEGAL' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.manager_document\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"manager_document\\\"\\n                            id=\\\"manager_document-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.manager_document\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['manager_document']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end manager_document -->\\n\\n\\n            <!-- logo -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'LOGOTIPO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.logo\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"logo\\\"\\n                            id=\\\"logo-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.logo\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['logo']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end logo -->\\n\\n\\n            <!-- main -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'PRINCIPAL' | titlecase }}</ion-label>\\n                <ion-toggle name=\\\"main\\\"\\n                            id=\\\"main-field\\\"\\n                            slot=\\\"end\\\"\\n                            [(ngModel)]=\\\"model.main\\\"></ion-toggle>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.main\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['main']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end main -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'EMPRESAS' | titlecase}}\\\"\\n                 primaryLink=\\\"companies/create\\\"\\n                 primaryText=\\\"Crear {{'EMPRESAS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('EMPRESAS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.companiesService.searchValue = ''; companiesService.getCompanies()\\\"\\n                       (keyup.enter)=\\\"companiesService.getCompanies()\\\"\\n                       [(ngModel)]=\\\"companiesService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && companiesService.companies?.length\\\">\\n        <ion-card *ngFor=\\\"let company of companiesService.companies; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company?.code }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NIT' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company?.nit }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE REPRESENTANTE LEGAL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company?.manager_name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÉDULA REPRESENTANTE LEGAL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company?.manager_document }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'LOGOTIPO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company?.logo }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PRINCIPAL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ company?.main  ? 'Si' : 'No' }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONOS DE EMPRESAS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"company?.comp_phones?.length\\\">\\n                                <ng-container *ngFor=\\\"let compPhone of company?.comp_phones; let last = last\\\">\\n                                    <a routerLink=\\\"/comp-phones/{{ compPhone?.id }}/edit\\\">{{ compPhone?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS DIRECCIONES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"company?.comp_addresses?.length\\\">\\n                                <ng-container *ngFor=\\\"let compAddress of company?.comp_addresses; let last = last\\\">\\n                                    <a routerLink=\\\"/comp-addresses/{{ compAddress?.id }}/edit\\\">{{ compAddress?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS CONTACTOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"company?.comp_contacts?.length\\\">\\n                                <ng-container *ngFor=\\\"let compContact of company?.comp_contacts; let last = last\\\">\\n                                    <a routerLink=\\\"/comp-contacts/{{ compContact?.id }}/edit\\\">{{ compContact?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS RESPONSABILIDADES LEGALES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"company?.comp_responsabilities?.length\\\">\\n                                <ng-container *ngFor=\\\"let compResponsability of company?.comp_responsabilities; let last = last\\\">\\n                                    <a routerLink=\\\"/comp-responsabilities/{{ compResponsability?.id }}/edit\\\">{{ compResponsability?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/companies/' + company?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"companiesService.deleteCompany(company?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !companiesService.companies?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'EMPRESAS' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/companies/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'EMPRESAS' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"companiesService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"companiesService.getCompanies(companiesService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"companiesService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{companiesService.meta.current_page}}\\n                /{{companiesService.meta.last_page}} {{companiesService.meta.from}}-{{companiesService.meta.to}}\\n                /{{companiesService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"companiesService.getCompanies(companiesService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"companiesService.meta.current_page == companiesService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"EMPRESAS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/companies/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'EMPRESAS'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/companies/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'EMPRESAS' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtY3JlYXRlL2NvbXBhbmllcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {CompaniesService} from \"../companies.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Company} from \"../company\";\nimport {CompaniesFormComponent} from \"../companies-form/companies-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n    selector: 'app-companies-create',\n    templateUrl: './companies-create.component.html',\n    styleUrls: ['./companies-create.component.scss']\n})\nexport class CompaniesCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('companyForm') companyForm: CompaniesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public companiesService: CompaniesService,\n        public route: ActivatedRoute,\n        public platform: Platform\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.companyForm.companiesForm.valueChanges.subscribe((data) => {\n            this.companiesService.companiesFormValid.next(this.companyForm.companiesForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.companiesService.createCompany();\n        this.companiesService.company = <Company>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtZHVwbGljYXRlL2NvbXBhbmllcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-companies-duplicate',\n  templateUrl: './companies-duplicate.component.html',\n  styleUrls: ['./companies-duplicate.component.scss'],\n})\nexport class CompaniesDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtZWRpdC9jb21wYW5pZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {CompaniesService} from \"../companies.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Company} from \"../company\";\nimport {CompaniesFormComponent} from \"../companies-form/companies-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-companies-edit',\n  templateUrl: './companies-edit.component.html',\n  styleUrls: ['./companies-edit.component.scss']\n})\nexport class CompaniesEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('companyForm') companyForm: CompaniesFormComponent;\n\n    public id: any = null;\n    public model: Company = null;\n\n  constructor(\n      public companiesService: CompaniesService,\n      public route: ActivatedRoute,\n      public platform: Platform\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.companiesService.editCompany(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.companyForm.companiesForm.valueChanges.subscribe((data) => {\n          this.companiesService.companiesFormValid.next(this.companyForm.companiesForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtZm9ybS9jb21wYW5pZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {Company} from \"../company\";\nimport {FormGroup} from \"@angular/forms\";\nimport {CompaniesService} from \"../companies.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-companies-form',\n    templateUrl: './companies-form.component.html',\n    styleUrls: ['./companies-form.component.scss']\n})\nexport class CompaniesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: Company = <Company>{};\n\n    @ViewChild('companiesForm') companiesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'code': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\n        ],\n        'nit': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NIT') + ' es obligatorio.'},\n        ],\n        'manager_name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE REPRESENTANTE LEGAL') + ' es obligatorio.'},\n        ],\n        'manager_document': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÉDULA REPRESENTANTE LEGAL') + ' es obligatorio.'},\n        ],\n        'logo': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('LOGOTIPO') + ' es obligatorio.'},\n        ],\n        'main': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PRINCIPAL') + ' es obligatorio.'},\n        ],\n        'comp_phone_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONOS DE EMPRESAS') + ' es obligatorio.'},\n        ],\n        'comp_address_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESAS DIRECCIONES') + ' es obligatorio.'},\n        ],\n        'comp_contact_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESAS CONTACTOS') + ' es obligatorio.'},\n        ],\n        'comp_responsability_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESAS RESPONSABILIDADES LEGALES') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public companiesService: CompaniesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setCompPhoneIds\n    setCompPhoneIds(event: any) {\n        let compPhoneIds = null;\n        if (event.value.length) {\n            compPhoneIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                compPhoneIds.push(event.value[i].id);\n            }\n        }\n        this.companiesService.company.comp_phone_ids = compPhoneIds;\n    }\n    // end setCompPhoneIds\n\n\n    // set setCompAddressIds\n    setCompAddressIds(event: any) {\n        let compAddressIds = null;\n        if (event.value.length) {\n            compAddressIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                compAddressIds.push(event.value[i].id);\n            }\n        }\n        this.companiesService.company.comp_address_ids = compAddressIds;\n    }\n    // end setCompAddressIds\n\n\n    // set setCompContactIds\n    setCompContactIds(event: any) {\n        let compContactIds = null;\n        if (event.value.length) {\n            compContactIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                compContactIds.push(event.value[i].id);\n            }\n        }\n        this.companiesService.company.comp_contact_ids = compContactIds;\n    }\n    // end setCompContactIds\n\n\n    // set setCompResponsabilityIds\n    setCompResponsabilityIds(event: any) {\n        let compResponsabilityIds = null;\n        if (event.value.length) {\n            compResponsabilityIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                compResponsabilityIds.push(event.value[i].id);\n            }\n        }\n        this.companiesService.company.comp_responsability_ids = compResponsabilityIds;\n    }\n    // end setCompResponsabilityIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtbGlzdC9jb21wYW5pZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { CompaniesService} from \"../companies.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-companies-list',\n    templateUrl: './companies-list.component.html',\n    styleUrls: ['./companies-list.component.scss'],\n})\nexport class CompaniesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public companiesService: CompaniesService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.companiesService.getCompanies();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CompaniesPage } from './companies.page';\nimport {CompaniesEditComponent} from \"./companies-edit/companies-edit.component\";\nimport {CompaniesCreateComponent} from \"./companies-create/companies-create.component\";\nimport {CompaniesListComponent} from \"./companies-list/companies-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CompaniesPage\n    },\n    {\n        path: 'list',\n        component: CompaniesListComponent\n    },\n    {\n      path: 'create',\n      component: CompaniesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: CompaniesEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class CompaniesPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {CompaniesPageRoutingModule} from './companies-routing.module';\n\nimport { CompaniesPage} from './companies.page';\nimport { CompaniesListComponent} from \"./companies-list/companies-list.component\";\nimport { CompaniesCreateComponent} from \"./companies-create/companies-create.component\";\nimport { CompaniesDuplicateComponent} from \"./companies-duplicate/companies-duplicate.component\";\nimport { CompaniesEditComponent} from \"./companies-edit/companies-edit.component\";\nimport { CompaniesFormComponent} from \"./companies-form/companies-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        CompaniesPageRoutingModule\n    ],\n    declarations: [\n        CompaniesPage,\n        CompaniesListComponent,\n        CompaniesCreateComponent,\n        CompaniesDuplicateComponent,\n        CompaniesEditComponent,\n        CompaniesFormComponent,\n    ]\n})\nexport class CompaniesPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-companies',\n  templateUrl: './companies.page.html',\n  styleUrls: ['./companies.page.scss'],\n})\nexport class CompaniesPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { Company, CompanyLists } from \"./company\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CompaniesService {\n\n    public companiesUrl = 'companies';\n    public companiesFormValid = new BehaviorSubject<boolean>(false);\n\n    public companies: Company[] = [];\n    public company: Company = <Company>{};\n    public companyLists: CompanyLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getCompanies(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.companiesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.companies = res.data;\n                    this.companyLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editCompany(id: any) {\n        this.api.get(this.companiesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.company = res.data.model;\n                    this.companyLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateCompany() {\n        this.api.put(this.companiesUrl + '/' + this.company.id, {\n            model: this.company,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getCompanies(1);\n            }\n        );\n    }\n\n    public createCompany() {\n        this.api.get(this.companiesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.company = <Company>{};\n                    this.companyLists = res.lists\n                }\n            );\n    }\n\n    public storeCompany() {\n        this.api.post(this.companiesUrl, {\n            model: this.company,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getCompanies(1);\n            }\n        );\n    }\n\n    public async deleteCompany(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.companiesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getCompanies(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}