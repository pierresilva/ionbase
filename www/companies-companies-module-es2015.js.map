{"version":3,"sources":["./src/app/companies/companies-create/companies-create.component.html","./src/app/companies/companies-duplicate/companies-duplicate.component.html","./src/app/companies/companies-edit/companies-edit.component.html","./src/app/companies/companies-form/companies-form.component.html","./src/app/companies/companies-list/companies-list.component.html","./src/app/companies/companies.page.html","./src/app/companies/companies-create/companies-create.component.scss","./src/app/companies/companies-create/companies-create.component.ts","./src/app/companies/companies-duplicate/companies-duplicate.component.scss","./src/app/companies/companies-duplicate/companies-duplicate.component.ts","./src/app/companies/companies-edit/companies-edit.component.scss","./src/app/companies/companies-edit/companies-edit.component.ts","./src/app/companies/companies-form/companies-form.component.scss","./src/app/companies/companies-form/companies-form.component.ts","./src/app/companies/companies-list/companies-list.component.scss","./src/app/companies/companies-list/companies-list.component.ts","./src/app/companies/companies-routing.module.ts","./src/app/companies/companies.module.ts","./src/app/companies/companies.page.scss","./src/app/companies/companies.page.ts","./src/app/companies/companies.service.ts"],"names":[],"mappings":"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","file":"companies-companies-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/companies'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"companiesService.storeCompany()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!companiesService.companiesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'EMPRESAS' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-companies-form #companyForm [model]=\\\"companiesService.company\\\"></app-companies-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  Companies duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/companies'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"companiesService.updateCompany()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!companiesService.companiesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'EMPRESAS' | titlecase}}: {{ companiesService.company?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-companies-form #companyForm [model]=\\\"companiesService.company\\\"></app-companies-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #companiesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- comp_phone_ids -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'TELÉFONOS DE EMPRESAS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"comp_phone_ids\\\"\\r\\n                          id=\\\"comp_phone_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.comp_phones\\\"\\r\\n                          [items]=\\\"companiesService.companyLists.CompPhone\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('TELÉFONOS DE EMPRESAS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('TELÉFONOS DE EMPRESAS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setCompPhoneIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_phone_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['comp_phone_ids']?.hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end comp_phone_ids -->\\r\\n\\r\\n\\r\\n    <!-- comp_address_ids -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'EMPRESAS DIRECCIONES' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"comp_address_ids\\\"\\r\\n                          id=\\\"comp_address_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.comp_addresses\\\"\\r\\n                          [items]=\\\"companiesService.companyLists.CompAddress\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS DIRECCIONES' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS DIRECCIONES' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setCompAddressIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_address_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['comp_address_ids']?.hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end comp_address_ids -->\\r\\n\\r\\n\\r\\n    <!-- comp_contact_ids -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'EMPRESAS CONTACTOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"comp_contact_ids\\\"\\r\\n                          id=\\\"comp_contact_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.comp_contacts\\\"\\r\\n                          [items]=\\\"companiesService.companyLists.CompContact\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS CONTACTOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS CONTACTOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setCompContactIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_contact_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['comp_contact_ids']?.hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end comp_contact_ids -->\\r\\n\\r\\n\\r\\n    <!-- comp_responsability_ids -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'EMPRESAS RESPONSABILIDADES LEGALES' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"comp_responsability_ids\\\"\\r\\n                          id=\\\"comp_responsability_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.comp_responsabilities\\\"\\r\\n                          [items]=\\\"companiesService.companyLists.CompResponsability\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('EMPRESAS RESPONSABILIDADES LEGALES' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('EMPRESAS RESPONSABILIDADES LEGALES' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setCompResponsabilityIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.comp_responsability_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['comp_responsability_ids']?.hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end comp_responsability_ids -->\\r\\n\\r\\n\\r\\n            <!-- name -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"name\\\"\\r\\n                            id=\\\"name-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end name -->\\r\\n\\r\\n\\r\\n            <!-- code -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"code\\\"\\r\\n                            id=\\\"code-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['code']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end code -->\\r\\n\\r\\n\\r\\n            <!-- nit -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NIT' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.nit\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"nit\\\"\\r\\n                            id=\\\"nit-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.nit\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['nit']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end nit -->\\r\\n\\r\\n\\r\\n            <!-- manager_name -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NOMBRE REPRESENTANTE LEGAL' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.manager_name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"manager_name\\\"\\r\\n                            id=\\\"manager_name-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.manager_name\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['manager_name']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end manager_name -->\\r\\n\\r\\n\\r\\n            <!-- manager_document -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CÉDULA REPRESENTANTE LEGAL' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.manager_document\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"manager_document\\\"\\r\\n                            id=\\\"manager_document-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.manager_document\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['manager_document']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end manager_document -->\\r\\n\\r\\n\\r\\n            <!-- logo -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'LOGOTIPO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.logo\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"logo\\\"\\r\\n                            id=\\\"logo-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.logo\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['logo']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end logo -->\\r\\n\\r\\n\\r\\n            <!-- main -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'PRINCIPAL' | titlecase }}</ion-label>\\r\\n                <ion-toggle name=\\\"main\\\"\\r\\n                            id=\\\"main-field\\\"\\r\\n                            slot=\\\"end\\\"\\r\\n                            [(ngModel)]=\\\"model.main\\\"></ion-toggle>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.main\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"companiesForm.form.controls['main']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end main -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'EMPRESAS' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"companies/create\\\"\\r\\n                 primaryText=\\\"Crear {{'EMPRESAS' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                       [placeholder]=\\\"'Buscar ' + ('EMPRESAS' | lowercase )\\\"\\r\\n                       (ionCancel)=\\\"this.companiesService.searchValue = ''; companiesService.getCompanies()\\\"\\r\\n                       (keyup.enter)=\\\"companiesService.getCompanies()\\\"\\r\\n                       [(ngModel)]=\\\"companiesService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && companiesService.companies?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let company of companiesService.companies; let index = index\\\">\\r\\n            <ion-list>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ company?.name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ company?.code }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NIT' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ company?.nit }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE REPRESENTANTE LEGAL' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ company?.manager_name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÉDULA REPRESENTANTE LEGAL' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ company?.manager_document }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'LOGOTIPO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ company?.logo }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PRINCIPAL' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ company?.main  ? 'Si' : 'No' }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONOS DE EMPRESAS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"company?.comp_phones?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let compPhone of company?.comp_phones; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/comp-phones/{{ compPhone?.id }}/edit\\\">{{ compPhone?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS DIRECCIONES' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"company?.comp_addresses?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let compAddress of company?.comp_addresses; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/comp-addresses/{{ compAddress?.id }}/edit\\\">{{ compAddress?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS CONTACTOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"company?.comp_contacts?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let compContact of company?.comp_contacts; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/comp-contacts/{{ compContact?.id }}/edit\\\">{{ compContact?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMPRESAS RESPONSABILIDADES LEGALES' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"company?.comp_responsabilities?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let compResponsability of company?.comp_responsabilities; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/comp-responsabilities/{{ compResponsability?.id }}/edit\\\">{{ compResponsability?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/companies/' + company?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"companiesService.deleteCompany(company?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !companiesService.companies?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'EMPRESAS' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/companies/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\r\\n                Crear {{'EMPRESAS' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"companiesService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"companiesService.getCompanies(companiesService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"companiesService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{companiesService.meta.current_page}}\\r\\n                /{{companiesService.meta.last_page}} {{companiesService.meta.from}}-{{companiesService.meta.to}}\\r\\n                /{{companiesService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"companiesService.getCompanies(companiesService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"companiesService.meta.current_page == companiesService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"EMPRESAS\\\"></app-main-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/companies/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'EMPRESAS'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/companies/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'EMPRESAS' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtY3JlYXRlL2NvbXBhbmllcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {CompaniesService} from \"../companies.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {Company} from \"../company\";\r\nimport {CompaniesFormComponent} from \"../companies-form/companies-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-companies-create',\r\n    templateUrl: './companies-create.component.html',\r\n    styleUrls: ['./companies-create.component.scss']\r\n})\r\nexport class CompaniesCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('companyForm') companyForm: CompaniesFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public companiesService: CompaniesService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.companyForm.companiesForm.valueChanges.subscribe((data) => {\r\n            this.companiesService.companiesFormValid.next(this.companyForm.companiesForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.companiesService.createCompany();\r\n        this.companiesService.company = <Company>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtZHVwbGljYXRlL2NvbXBhbmllcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-companies-duplicate',\r\n  templateUrl: './companies-duplicate.component.html',\r\n  styleUrls: ['./companies-duplicate.component.scss'],\r\n})\r\nexport class CompaniesDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtZWRpdC9jb21wYW5pZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {CompaniesService} from \"../companies.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {Company} from \"../company\";\r\nimport {CompaniesFormComponent} from \"../companies-form/companies-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-companies-edit',\r\n  templateUrl: './companies-edit.component.html',\r\n  styleUrls: ['./companies-edit.component.scss']\r\n})\r\nexport class CompaniesEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('companyForm') companyForm: CompaniesFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: Company = null;\r\n\r\n  constructor(\r\n      public companiesService: CompaniesService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.companiesService.editCompany(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.companyForm.companiesForm.valueChanges.subscribe((data) => {\r\n          this.companiesService.companiesFormValid.next(this.companyForm.companiesForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtZm9ybS9jb21wYW5pZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {Company} from \"../company\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {CompaniesService} from \"../companies.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-companies-form',\r\n    templateUrl: './companies-form.component.html',\r\n    styleUrls: ['./companies-form.component.scss']\r\n})\r\nexport class CompaniesFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: Company = <Company>{};\r\n\r\n    @ViewChild('companiesForm') companiesForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'code': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\r\n        ],\r\n        'nit': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NIT') + ' es obligatorio.'},\r\n        ],\r\n        'manager_name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE REPRESENTANTE LEGAL') + ' es obligatorio.'},\r\n        ],\r\n        'manager_document': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÉDULA REPRESENTANTE LEGAL') + ' es obligatorio.'},\r\n        ],\r\n        'logo': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('LOGOTIPO') + ' es obligatorio.'},\r\n        ],\r\n        'main': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PRINCIPAL') + ' es obligatorio.'},\r\n        ],\r\n        'comp_phone_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONOS DE EMPRESAS') + ' es obligatorio.'},\r\n        ],\r\n        'comp_address_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESAS DIRECCIONES') + ' es obligatorio.'},\r\n        ],\r\n        'comp_contact_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESAS CONTACTOS') + ' es obligatorio.'},\r\n        ],\r\n        'comp_responsability_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMPRESAS RESPONSABILIDADES LEGALES') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public companiesService: CompaniesService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setCompPhoneIds\r\n    setCompPhoneIds(event: any) {\r\n        let compPhoneIds = null;\r\n        if (event.value.length) {\r\n            compPhoneIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                compPhoneIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.companiesService.company.comp_phone_ids = compPhoneIds;\r\n    }\r\n    // end setCompPhoneIds\r\n\r\n\r\n    // set setCompAddressIds\r\n    setCompAddressIds(event: any) {\r\n        let compAddressIds = null;\r\n        if (event.value.length) {\r\n            compAddressIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                compAddressIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.companiesService.company.comp_address_ids = compAddressIds;\r\n    }\r\n    // end setCompAddressIds\r\n\r\n\r\n    // set setCompContactIds\r\n    setCompContactIds(event: any) {\r\n        let compContactIds = null;\r\n        if (event.value.length) {\r\n            compContactIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                compContactIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.companiesService.company.comp_contact_ids = compContactIds;\r\n    }\r\n    // end setCompContactIds\r\n\r\n\r\n    // set setCompResponsabilityIds\r\n    setCompResponsabilityIds(event: any) {\r\n        let compResponsabilityIds = null;\r\n        if (event.value.length) {\r\n            compResponsabilityIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                compResponsabilityIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.companiesService.company.comp_responsability_ids = compResponsabilityIds;\r\n    }\r\n    // end setCompResponsabilityIds\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMtbGlzdC9jb21wYW5pZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { CompaniesService} from \"../companies.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-companies-list',\r\n    templateUrl: './companies-list.component.html',\r\n    styleUrls: ['./companies-list.component.scss'],\r\n})\r\nexport class CompaniesListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public companiesService: CompaniesService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.companiesService.getCompanies();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CompaniesPage } from './companies.page';\r\nimport {CompaniesEditComponent} from \"./companies-edit/companies-edit.component\";\r\nimport {CompaniesCreateComponent} from \"./companies-create/companies-create.component\";\r\nimport {CompaniesListComponent} from \"./companies-list/companies-list.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CompaniesPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        component: CompaniesListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      component: CompaniesCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: CompaniesEditComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class CompaniesPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {CompaniesPageRoutingModule} from './companies-routing.module';\r\n\r\nimport { CompaniesPage} from './companies.page';\r\nimport { CompaniesListComponent} from \"./companies-list/companies-list.component\";\r\nimport { CompaniesCreateComponent} from \"./companies-create/companies-create.component\";\r\nimport { CompaniesDuplicateComponent} from \"./companies-duplicate/companies-duplicate.component\";\r\nimport { CompaniesEditComponent} from \"./companies-edit/companies-edit.component\";\r\nimport { CompaniesFormComponent} from \"./companies-form/companies-form.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        CompaniesPageRoutingModule\r\n    ],\r\n    declarations: [\r\n        CompaniesPage,\r\n        CompaniesListComponent,\r\n        CompaniesCreateComponent,\r\n        CompaniesDuplicateComponent,\r\n        CompaniesEditComponent,\r\n        CompaniesFormComponent,\r\n    ]\r\n})\r\nexport class CompaniesPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-companies',\r\n  templateUrl: './companies.page.html',\r\n  styleUrls: ['./companies.page.scss'],\r\n})\r\nexport class CompaniesPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport { Company, CompanyLists } from \"./company\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CompaniesService {\r\n\r\n    public companiesUrl = 'companies';\r\n    public companiesFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public companies: Company[] = [];\r\n    public company: Company = <Company>{};\r\n    public companyLists: CompanyLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n\r\n    public getCompanies(page: any = this.page, perPage: any = this.perPage) {\r\n\r\n        this.api.get(this.companiesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.companies = res.data;\r\n                    this.companyLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editCompany(id: any) {\r\n        this.api.get(this.companiesUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.company = res.data.model;\r\n                    this.companyLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateCompany() {\r\n        this.api.put(this.companiesUrl + '/' + this.company.id, {\r\n            model: this.company,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getCompanies(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createCompany() {\r\n        this.api.get(this.companiesUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.company = <Company>{};\r\n                    this.companyLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeCompany() {\r\n        this.api.post(this.companiesUrl, {\r\n            model: this.company,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getCompanies(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteCompany(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.companiesUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getCompanies(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}