{"version":3,"sources":["webpack:///src/app/files/files-create/files-create.component.html","webpack:///src/app/files/files-duplicate/files-duplicate.component.html","webpack:///src/app/files/files-edit/files-edit.component.html","webpack:///src/app/files/files-form/files-form.component.html","webpack:///src/app/files/files-list/files-list.component.html","webpack:///src/app/files/files.page.html","webpack:///src/app/files/files-create/files-create.component.scss","webpack:///src/app/files/files-create/files-create.component.ts","webpack:///src/app/files/files-duplicate/files-duplicate.component.scss","webpack:///src/app/files/files-duplicate/files-duplicate.component.ts","webpack:///src/app/files/files-edit/files-edit.component.scss","webpack:///src/app/files/files-edit/files-edit.component.ts","webpack:///src/app/files/files-form/files-form.component.scss","webpack:///src/app/files/files-form/files-form.component.ts","webpack:///src/app/files/files-list/files-list.component.scss","webpack:///src/app/files/files-list/files-list.component.ts","webpack:///src/app/files/files-routing.module.ts","webpack:///src/app/files/files.module.ts","webpack:///src/app/files/files.page.scss","webpack:///src/app/files/files.page.ts","webpack:///src/app/files/files.service.ts"],"names":["FilesCreateComponent","filesService","route","platform","splitPanel","id","formValid","clearPosts","show","next","fileForm","filesForm","valueChanges","subscribe","data","filesFormValid","valid","console","log","createFile","file","selector","template","FilesDuplicateComponent","FilesEditComponent","model","snapshot","paramMap","get","editFile","FilesFormComponent","toTitlecase","validationMessages","type","message","transform","FilesListComponent","api","loading","getFiles","content","scrollToTop","routes","path","component","FilesPageRoutingModule","imports","forChild","exports","FilesPageModule","declarations","FilesPage","FilesService","alert","toast","router","navigation","filesUrl","files","fileLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"files-files-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/files'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"filesService.storeFile()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!filesService.filesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'JUNTAS ARCHIVOS DE AGENDAS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-files-form #fileForm [model]=\\\"filesService.file\\\"></app-files-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  Files duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/files'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"filesService.updateFile()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!filesService.filesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'JUNTAS ARCHIVOS DE AGENDAS' | titlecase}}: {{ filesService.file?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-files-form #fileForm [model]=\\\"filesService.file\\\"></app-files-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #filesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"filesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- file -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'ARCHIVO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.file\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"file\\\"\\n                            id=\\\"file-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.file\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"filesForm.form.controls['file']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end file -->\\n\\n\\n            <!-- extension -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'EXTENSION' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.extension\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"extension\\\"\\n                            id=\\\"extension-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.extension\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"filesForm.form.controls['extension']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end extension -->\\n\\n\\n            <!-- mime -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'MIME' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.mime\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"mime\\\"\\n                            id=\\\"mime-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.mime\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"filesForm.form.controls['mime']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end mime -->\\n\\n\\n            <!-- url -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'URL' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.url\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"url\\\"\\n                            id=\\\"url-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.url\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"filesForm.form.controls['url']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end url -->\\n\\n\\n            <!-- fileable_id -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'ARCHIVABLE ID' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.fileable_id\\\"\\n                            type=\\\"number\\\"\\n                            name=\\\"fileable_id\\\"\\n                            id=\\\"fileable_id-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.fileable_id\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"filesForm.form.controls['fileable_id']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end fileable_id -->\\n\\n\\n            <!-- fileable_type -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'ARCHIVABLE TIPO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.fileable_type\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"fileable_type\\\"\\n                            id=\\\"fileable_type-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.fileable_type\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"filesForm.form.controls['fileable_type']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end fileable_type -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'JUNTAS ARCHIVOS DE AGENDAS' | titlecase}}\\\"\\n                 primaryLink=\\\"files/create\\\"\\n                 primaryText=\\\"Crear {{'JUNTAS ARCHIVOS DE AGENDAS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('JUNTAS ARCHIVOS DE AGENDAS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.filesService.searchValue = ''; filesService.getFiles()\\\"\\n                       (keyup.enter)=\\\"filesService.getFiles()\\\"\\n                       [(ngModel)]=\\\"filesService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && filesService.files?.length\\\">\\n        <ion-card *ngFor=\\\"let file of filesService.files; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ file?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'ARCHIVO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ file?.file }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EXTENSION' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ file?.extension }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'MIME' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ file?.mime }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'URL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ file?.url }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'ARCHIVABLE ID' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ file?.fileable_id }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'ARCHIVABLE TIPO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ file?.fileable_type }}</div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/files/' + file?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"filesService.deleteFile(file?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !filesService.files?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'JUNTAS ARCHIVOS DE AGENDAS' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/files/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'JUNTAS ARCHIVOS DE AGENDAS' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"filesService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"filesService.getFiles(filesService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"filesService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{filesService.meta.current_page}}\\n                /{{filesService.meta.last_page}} {{filesService.meta.from}}-{{filesService.meta.to}}\\n                /{{filesService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"filesService.getFiles(filesService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"filesService.meta.current_page == filesService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"JUNTAS ARCHIVOS DE AGENDAS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/files/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'JUNTAS ARCHIVOS DE AGENDAS'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/files/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'JUNTAS ARCHIVOS DE AGENDAS' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGVzL2ZpbGVzLWNyZWF0ZS9maWxlcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {FilesService} from \"../files.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {File} from \"../file\";\nimport {FilesFormComponent} from \"../files-form/files-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-files-create',\n    templateUrl: './files-create.component.html',\n    styleUrls: ['./files-create.component.scss']\n})\nexport class FilesCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('fileForm') fileForm: FilesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public filesService: FilesService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ionViewWillEnter() {\n       this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.fileForm.filesForm.valueChanges.subscribe((data) => {\n            this.filesService.filesFormValid.next(this.fileForm.filesForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.filesService.createFile();\n        this.filesService.file = <File>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGVzL2ZpbGVzLWR1cGxpY2F0ZS9maWxlcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-files-duplicate',\n  templateUrl: './files-duplicate.component.html',\n  styleUrls: ['./files-duplicate.component.scss'],\n})\nexport class FilesDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGVzL2ZpbGVzLWVkaXQvZmlsZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {FilesService} from \"../files.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {File} from \"../file\";\nimport {FilesFormComponent} from \"../files-form/files-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-files-edit',\n  templateUrl: './files-edit.component.html',\n  styleUrls: ['./files-edit.component.scss']\n})\nexport class FilesEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('fileForm') fileForm: FilesFormComponent;\n\n    public id: any = null;\n    public model: File = null;\n\n  constructor(\n      public filesService: FilesService,\n      public route: ActivatedRoute,\n      public platform: Platform,\n      public splitPanel: SplitPanelService,\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.filesService.editFile(this.id);\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n  ngAfterViewInit() {\n      this.fileForm.filesForm.valueChanges.subscribe((data) => {\n          this.filesService.filesFormValid.next(this.fileForm.filesForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGVzL2ZpbGVzLWZvcm0vZmlsZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {File} from \"../file\";\nimport {FormGroup} from \"@angular/forms\";\nimport {FilesService} from \"../files.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-files-form',\n    templateUrl: './files-form.component.html',\n    styleUrls: ['./files-form.component.scss']\n})\nexport class FilesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: File = <File>{};\n\n    @ViewChild('filesForm') filesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'file': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ARCHIVO') + ' es obligatorio.'},\n        ],\n        'extension': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EXTENSION') + ' es obligatorio.'},\n        ],\n        'mime': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('MIME') + ' es obligatorio.'},\n        ],\n        'url': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('URL') + ' es obligatorio.'},\n        ],\n        'fileable_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ARCHIVABLE ID') + ' es obligatorio.'},\n        ],\n        'fileable_type': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ARCHIVABLE TIPO') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public filesService: FilesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGVzL2ZpbGVzLWxpc3QvZmlsZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { FilesService} from \"../files.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-files-list',\n    templateUrl: './files-list.component.html',\n    styleUrls: ['./files-list.component.scss'],\n})\nexport class FilesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public filesService: FilesService,\n        public api: ApiService,\n        public loading: LoadingService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.filesService.getFiles();\n    }\n\n    ionViewWillEnter() {\n     this.splitPanel.show.next(true);\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FilesPage } from './files.page';\nimport {FilesEditComponent} from \"./files-edit/files-edit.component\";\nimport {FilesCreateComponent} from \"./files-create/files-create.component\";\nimport {FilesListComponent} from \"./files-list/files-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FilesPage\n    },\n    {\n        path: 'list',\n        component: FilesListComponent\n    },\n    {\n      path: 'create',\n      component: FilesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: FilesEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class FilesPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {FilesPageRoutingModule} from './files-routing.module';\n\nimport { FilesPage} from './files.page';\nimport { FilesListComponent} from \"./files-list/files-list.component\";\nimport { FilesCreateComponent} from \"./files-create/files-create.component\";\nimport { FilesDuplicateComponent} from \"./files-duplicate/files-duplicate.component\";\nimport { FilesEditComponent} from \"./files-edit/files-edit.component\";\nimport { FilesFormComponent} from \"./files-form/files-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        FilesPageRoutingModule\n    ],\n    declarations: [\n        FilesPage,\n        FilesListComponent,\n        FilesCreateComponent,\n        FilesDuplicateComponent,\n        FilesEditComponent,\n        FilesFormComponent,\n    ]\n})\nexport class FilesPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGVzL2ZpbGVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-files',\n  templateUrl: './files.page.html',\n  styleUrls: ['./files.page.scss'],\n})\nexport class FilesPage implements OnInit {\n\n  constructor(\n    public splitPanel: SplitPanelService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { File, FileLists } from \"./file\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilesService {\n\n    public filesUrl = 'files';\n    public filesFormValid = new BehaviorSubject<boolean>(false);\n\n    public files: File[] = [];\n    public file: File = <File>{};\n    public fileLists: FileLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getFiles(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.filesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.files = res.data;\n                    this.fileLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editFile(id: any) {\n        this.api.get(this.filesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.file = res.data.model;\n                    this.fileLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateFile() {\n        this.api.put(this.filesUrl + '/' + this.file.id, {\n            model: this.file,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getFiles(1);\n            }\n        );\n    }\n\n    public createFile() {\n        this.api.get(this.filesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.file = <File>{};\n                    this.fileLists = res.lists\n                }\n            );\n    }\n\n    public storeFile() {\n        this.api.post(this.filesUrl, {\n            model: this.file,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getFiles(1);\n            }\n        );\n    }\n\n    public async deleteFile(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.filesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getFiles(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"]}