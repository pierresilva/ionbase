{"version":3,"sources":["webpack:///src/app/oper-replacements/oper-replacements-create/oper-replacements-create.component.html","webpack:///src/app/oper-replacements/oper-replacements-duplicate/oper-replacements-duplicate.component.html","webpack:///src/app/oper-replacements/oper-replacements-edit/oper-replacements-edit.component.html","webpack:///src/app/oper-replacements/oper-replacements-form/oper-replacements-form.component.html","webpack:///src/app/oper-replacements/oper-replacements-list/oper-replacements-list.component.html","webpack:///src/app/oper-replacements/oper-replacements.page.html","webpack:///src/app/oper-replacements/oper-replacements-create/oper-replacements-create.component.scss","webpack:///src/app/oper-replacements/oper-replacements-create/oper-replacements-create.component.ts","webpack:///src/app/oper-replacements/oper-replacements-duplicate/oper-replacements-duplicate.component.scss","webpack:///src/app/oper-replacements/oper-replacements-duplicate/oper-replacements-duplicate.component.ts","webpack:///src/app/oper-replacements/oper-replacements-edit/oper-replacements-edit.component.scss","webpack:///src/app/oper-replacements/oper-replacements-edit/oper-replacements-edit.component.ts","webpack:///src/app/oper-replacements/oper-replacements-form/oper-replacements-form.component.scss","webpack:///src/app/oper-replacements/oper-replacements-form/oper-replacements-form.component.ts","webpack:///src/app/oper-replacements/oper-replacements-list/oper-replacements-list.component.scss","webpack:///src/app/oper-replacements/oper-replacements-list/oper-replacements-list.component.ts","webpack:///src/app/oper-replacements/oper-replacements-routing.module.ts","webpack:///src/app/oper-replacements/oper-replacements.module.ts","webpack:///src/app/oper-replacements/oper-replacements.page.scss","webpack:///src/app/oper-replacements/oper-replacements.page.ts","webpack:///src/app/oper-replacements/oper-replacements.service.ts"],"names":["OperReplacementsCreateComponent","operReplacementsService","route","platform","splitPanel","id","formValid","clearPosts","show","next","operReplacementForm","operReplacementsForm","valueChanges","subscribe","data","operReplacementsFormValid","valid","console","log","createOperReplacement","operReplacement","selector","template","OperReplacementsDuplicateComponent","OperReplacementsEditComponent","model","snapshot","paramMap","get","editOperReplacement","OperReplacementsFormComponent","toTitlecase","validationMessages","type","message","transform","event","oper_machine_id","value","oper_contractor_id","OperReplacementsListComponent","api","loading","getOperReplacements","content","scrollToTop","routes","path","title","roles","component","OperReplacementsPageRoutingModule","imports","forChild","exports","OperReplacementsPageModule","declarations","OperReplacementsPage","OperReplacementsService","alert","toast","router","navigation","operReplacementsUrl","operReplacements","operReplacementLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"oper-replacements-oper-replacements-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-replacements'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operReplacementsService.storeOperReplacement()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operReplacementsService.operReplacementsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'OPERATIVIDAD REPUESTOS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-oper-replacements-form #operReplacementForm [model]=\\\"operReplacementsService.operReplacement\\\"></app-oper-replacements-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  OperReplacements duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-replacements'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operReplacementsService.updateOperReplacement()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operReplacementsService.operReplacementsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'OPERATIVIDAD REPUESTOS' | titlecase}}: {{ operReplacementsService.operReplacement?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-oper-replacements-form #operReplacementForm [model]=\\\"operReplacementsService.operReplacement\\\"></app-oper-replacements-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #operReplacementsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- oper_machine_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'MAQUINARIA' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_machine_id\\\"\\n                          id=\\\"oper_machine_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.oper_machine\\\"\\n                          [items]=\\\"operReplacementsService.operReplacementLists.OperMachine\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('MAQUINARIA' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('MAQUINARIA' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperMachineId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_machine_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operReplacementsForm.form.controls['oper_machine_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_machine_id -->\\n\\n\\n    <!-- oper_contractor_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'CONTRATISTA' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_contractor_id\\\"\\n                          id=\\\"oper_contractor_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.oper_contractor\\\"\\n                          [items]=\\\"operReplacementsService.operReplacementLists.OperContractor\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CONTRATISTA' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('CONTRATISTA' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperContractorId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_contractor_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operReplacementsForm.form.controls['oper_contractor_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_contractor_id -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operReplacementsForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- date -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'FECHA' | titlecase }}</ion-label>\\n                <ion-datetime name=\\\"date\\\"\\n                              id=\\\"date-field\\\"\\n                              [doneText]=\\\"'Seleccionar'\\\"\\n                              [cancelText]=\\\"'Cancelar'\\\"\\n                              [(ngModel)]=\\\"model.date\\\"\\n                              displayFormat=\\\"DD/MM/YYYY\\\"></ion-datetime>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.date\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operReplacementsForm.form.controls['date']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end date -->\\n\\n\\n            <!-- time -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'HORA' | titlecase }}</ion-label>\\n                <ion-datetime name=\\\"time\\\"\\n                              id=\\\"time-field\\\"\\n                              [doneText]=\\\"'Seleccionar'\\\"\\n                              [cancelText]=\\\"'Cancelar'\\\"\\n                              [(ngModel)]=\\\"model.time\\\"\\n                              displayFormat=\\\"HH:mm\\\"></ion-datetime>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.time\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operReplacementsForm.form.controls['time']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end time -->\\n\\n\\n            <!-- warranty -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'GARANTIA' | titlecase }}</ion-label>\\n                <ion-textarea [(ngModel)]=\\\"model.warranty\\\"\\n                              name=\\\"warranty\\\"\\n                              id=\\\"warranty-field\\\"\\n                              rows=\\\"6\\\"\\n                              placeholder=\\\"\\\"></ion-textarea>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.warranty\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operReplacementsForm.form.controls['warranty']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end warranty -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'OPERATIVIDAD REPUESTOS' | titlecase}}\\\"\\n                 primaryLink=\\\"oper-replacements/create\\\"\\n                 primaryText=\\\"Crear {{'OPERATIVIDAD REPUESTOS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('OPERATIVIDAD REPUESTOS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.operReplacementsService.searchValue = ''; operReplacementsService.getOperReplacements()\\\"\\n                       (keyup.enter)=\\\"operReplacementsService.getOperReplacements()\\\"\\n                       [(ngModel)]=\\\"operReplacementsService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operReplacementsService.operReplacements?.length\\\">\\n        <ion-card *ngFor=\\\"let operReplacement of operReplacementsService.operReplacements; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operReplacement?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'FECHA' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operReplacement?.date | dateFormat:'DD/MM/YYYY' }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'HORA' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operReplacement?.time | dateFormat:'HH:mm' }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'GARANTIA' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operReplacement?.warranty }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'OPERATIVIDAD MAQUINARIA' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/oper-machines/{{ operReplacement?.oper_machine?.id }}/edit\\\">{{ operReplacement?.oper_machine?.name }}</a></div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CONTRATISTAS OPERATIVOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/oper-contractors/{{ operReplacement?.oper_contractor?.id }}/edit\\\">{{ operReplacement?.oper_contractor?.name }}</a></div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/oper-replacements/' + operReplacement?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"operReplacementsService.deleteOperReplacement(operReplacement?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operReplacementsService.operReplacements?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'OPERATIVIDAD REPUESTOS' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/oper-replacements/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'OPERATIVIDAD REPUESTOS' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"operReplacementsService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"operReplacementsService.getOperReplacements(operReplacementsService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"operReplacementsService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{operReplacementsService.meta.current_page}}\\n                /{{operReplacementsService.meta.last_page}} {{operReplacementsService.meta.from}}-{{operReplacementsService.meta.to}}\\n                /{{operReplacementsService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"operReplacementsService.getOperReplacements(operReplacementsService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"operReplacementsService.meta.current_page == operReplacementsService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"OPERATIVIDAD REPUESTOS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-replacements/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'OPERATIVIDAD REPUESTOS'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-replacements/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'OPERATIVIDAD REPUESTOS' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItcmVwbGFjZW1lbnRzL29wZXItcmVwbGFjZW1lbnRzLWNyZWF0ZS9vcGVyLXJlcGxhY2VtZW50cy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {OperReplacementsService} from \"../oper-replacements.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperReplacement} from \"../oper-replacement\";\nimport {OperReplacementsFormComponent} from \"../oper-replacements-form/oper-replacements-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-oper-replacements-create',\n    templateUrl: './oper-replacements-create.component.html',\n    styleUrls: ['./oper-replacements-create.component.scss']\n})\nexport class OperReplacementsCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operReplacementForm') operReplacementForm: OperReplacementsFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public operReplacementsService: OperReplacementsService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ionViewWillEnter() {\n       this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.operReplacementForm.operReplacementsForm.valueChanges.subscribe((data) => {\n            this.operReplacementsService.operReplacementsFormValid.next(this.operReplacementForm.operReplacementsForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.operReplacementsService.createOperReplacement();\n        this.operReplacementsService.operReplacement = <OperReplacement>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItcmVwbGFjZW1lbnRzL29wZXItcmVwbGFjZW1lbnRzLWR1cGxpY2F0ZS9vcGVyLXJlcGxhY2VtZW50cy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-oper-replacements-duplicate',\n  templateUrl: './oper-replacements-duplicate.component.html',\n  styleUrls: ['./oper-replacements-duplicate.component.scss'],\n})\nexport class OperReplacementsDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItcmVwbGFjZW1lbnRzL29wZXItcmVwbGFjZW1lbnRzLWVkaXQvb3Blci1yZXBsYWNlbWVudHMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {OperReplacementsService} from \"../oper-replacements.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperReplacement} from \"../oper-replacement\";\nimport {OperReplacementsFormComponent} from \"../oper-replacements-form/oper-replacements-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-oper-replacements-edit',\n  templateUrl: './oper-replacements-edit.component.html',\n  styleUrls: ['./oper-replacements-edit.component.scss']\n})\nexport class OperReplacementsEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operReplacementForm') operReplacementForm: OperReplacementsFormComponent;\n\n    public id: any = null;\n    public model: OperReplacement = null;\n\n  constructor(\n      public operReplacementsService: OperReplacementsService,\n      public route: ActivatedRoute,\n      public platform: Platform,\n      public splitPanel: SplitPanelService,\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.operReplacementsService.editOperReplacement(this.id);\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n  ngAfterViewInit() {\n      this.operReplacementForm.operReplacementsForm.valueChanges.subscribe((data) => {\n          this.operReplacementsService.operReplacementsFormValid.next(this.operReplacementForm.operReplacementsForm.valid);\n      });\n  }\n\n}\n","export default \"/* generated section */\\n/* end generated section */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3Blci1yZXBsYWNlbWVudHMvb3Blci1yZXBsYWNlbWVudHMtZm9ybS9vcGVyLXJlcGxhY2VtZW50cy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFBO0FBRUEsMEJBQUEiLCJmaWxlIjoic3JjL2FwcC9vcGVyLXJlcGxhY2VtZW50cy9vcGVyLXJlcGxhY2VtZW50cy1mb3JtL29wZXItcmVwbGFjZW1lbnRzLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnZW5lcmF0ZWQgc2VjdGlvbiAqL1xuXG4vKiBlbmQgZ2VuZXJhdGVkIHNlY3Rpb24gKi9cbiJdfQ== */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {OperReplacement} from \"../oper-replacement\";\nimport {FormGroup} from \"@angular/forms\";\nimport {OperReplacementsService} from \"../oper-replacements.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-oper-replacements-form',\n    templateUrl: './oper-replacements-form.component.html',\n    styleUrls: ['./oper-replacements-form.component.scss']\n})\nexport class OperReplacementsFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: OperReplacement = <OperReplacement>{};\n\n    @ViewChild('operReplacementsForm') operReplacementsForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'oper_machine_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('MAQUINA') + ' es obligatorio.'},\n        ],\n        'oper_contractor_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CONTRATISTA') + ' es obligatorio.'},\n        ],\n        'date': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('FECHA') + ' es obligatorio.'},\n        ],\n        'time': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('HORA') + ' es obligatorio.'},\n        ],\n        'warranty': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('GARANTIA') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public operReplacementsService: OperReplacementsService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setOperMachineId\n\n    setOperMachineId(event: any) {\n        this.operReplacementsService.operReplacement.oper_machine_id = event.value ? event.value.id : null;\n    }\n    // end setOperMachineId\n\n\n    // set setOperContractorId\n\n    setOperContractorId(event: any) {\n        this.operReplacementsService.operReplacement.oper_contractor_id = event.value ? event.value.id : null;\n    }\n    // end setOperContractorId\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItcmVwbGFjZW1lbnRzL29wZXItcmVwbGFjZW1lbnRzLWxpc3Qvb3Blci1yZXBsYWNlbWVudHMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { OperReplacementsService} from \"../oper-replacements.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-oper-replacements-list',\n    templateUrl: './oper-replacements-list.component.html',\n    styleUrls: ['./oper-replacements-list.component.scss'],\n})\nexport class OperReplacementsListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public operReplacementsService: OperReplacementsService,\n        public api: ApiService,\n        public loading: LoadingService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.operReplacementsService.getOperReplacements();\n    }\n\n    ionViewWillEnter() {\n     this.splitPanel.show.next(true);\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperReplacementsPage } from './oper-replacements.page';\nimport {OperReplacementsEditComponent} from \"./oper-replacements-edit/oper-replacements-edit.component\";\nimport {OperReplacementsCreateComponent} from \"./oper-replacements-create/oper-replacements-create.component\";\nimport {OperReplacementsListComponent} from \"./oper-replacements-list/oper-replacements-list.component\";\n\nconst routes: Routes = [\n// generated section\n    {\n        path: '',\n        data: {\n            title: 'OPERATIVIDAD REPUESTOS',\n            roles: ['admin'],\n            // permissions: []\n        },\n        component: OperReplacementsPage\n    },\n    {\n        path: 'list',\n        data: {\n            title: 'OPERATIVIDAD REPUESTOS',\n            roles: ['admin'],\n            // permissions: []\n        },\n        component: OperReplacementsListComponent\n    },\n    {\n      path: 'create',\n      data: {\n          title: 'OPERATIVIDAD REPUESTOS',\n          roles: ['admin'],\n          // permissions: []\n      },\n      component: OperReplacementsCreateComponent\n    },\n    {\n        path: ':id/edit',\n        data: {\n            title: 'OPERATIVIDAD REPUESTOS',\n            roles: ['admin'],\n            // permissions: []\n        },\n        component: OperReplacementsEditComponent\n    },\n];\n// end generated section\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class OperReplacementsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {OperReplacementsPageRoutingModule} from './oper-replacements-routing.module';\n\nimport { OperReplacementsPage} from './oper-replacements.page';\nimport { OperReplacementsListComponent} from \"./oper-replacements-list/oper-replacements-list.component\";\nimport { OperReplacementsCreateComponent} from \"./oper-replacements-create/oper-replacements-create.component\";\nimport { OperReplacementsDuplicateComponent} from \"./oper-replacements-duplicate/oper-replacements-duplicate.component\";\nimport { OperReplacementsEditComponent} from \"./oper-replacements-edit/oper-replacements-edit.component\";\nimport { OperReplacementsFormComponent} from \"./oper-replacements-form/oper-replacements-form.component\";\n\n@NgModule({\n    imports: [\n    // imports generated section\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        OperReplacementsPageRoutingModule\n    // end imports generated section\n    ],\n    declarations: [\n    // declarations generated section\n        OperReplacementsPage,\n        OperReplacementsListComponent,\n        OperReplacementsCreateComponent,\n        OperReplacementsDuplicateComponent,\n        OperReplacementsEditComponent,\n        OperReplacementsFormComponent,\n    // end declarations generated section\n    ]\n})\nexport class OperReplacementsPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItcmVwbGFjZW1lbnRzL29wZXItcmVwbGFjZW1lbnRzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-oper-replacements',\n  templateUrl: './oper-replacements.page.html',\n  styleUrls: ['./oper-replacements.page.scss'],\n})\nexport class OperReplacementsPage implements OnInit {\n\n  constructor(\n    public splitPanel: SplitPanelService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { OperReplacement, OperReplacementLists } from \"./oper-replacement\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OperReplacementsService {\n\n    public operReplacementsUrl = 'oper-replacements';\n    public operReplacementsFormValid = new BehaviorSubject<boolean>(false);\n\n    public operReplacements: OperReplacement[] = [];\n    public operReplacement: OperReplacement = <OperReplacement>{};\n    public operReplacementLists: OperReplacementLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n// generated section\n    public getOperReplacements(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.operReplacementsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.operReplacements = res.data;\n                    this.operReplacementLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editOperReplacement(id: any) {\n        this.api.get(this.operReplacementsUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.operReplacement = res.data.model;\n                    this.operReplacementLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateOperReplacement() {\n        this.api.put(this.operReplacementsUrl + '/' + this.operReplacement.id, {\n            model: this.operReplacement,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperReplacements(1);\n            }\n        );\n    }\n\n    public createOperReplacement() {\n        this.api.get(this.operReplacementsUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.operReplacement = <OperReplacement>{};\n                    this.operReplacementLists = res.lists\n                }\n            );\n    }\n\n    public storeOperReplacement() {\n        this.api.post(this.operReplacementsUrl, {\n            model: this.operReplacement,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperReplacements(1);\n            }\n        );\n    }\n\n    public async deleteOperReplacement(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.operReplacementsUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getOperReplacements(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n// end generated section\n\n}\n"]}