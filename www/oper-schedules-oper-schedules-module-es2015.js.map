{"version":3,"sources":["./src/app/oper-schedules/oper-schedule-contractor-io/oper-schedule-contractor-io.component.html","./src/app/oper-schedules/oper-schedule-contractor-list/oper-schedule-contractor-list.component.html","./src/app/oper-schedules/oper-schedules-create/oper-schedules-create.component.html","./src/app/oper-schedules/oper-schedules-duplicate/oper-schedules-duplicate.component.html","./src/app/oper-schedules/oper-schedules-edit/oper-schedules-edit.component.html","./src/app/oper-schedules/oper-schedules-form/oper-schedules-form.component.html","./src/app/oper-schedules/oper-schedules-list/oper-schedules-list.component.html","./src/app/oper-schedules/oper-schedules.page.html","./src/app/oper-schedules/oper-schedule-contractor-io/oper-schedule-contractor-io.component.scss","./src/app/oper-schedules/oper-schedule-contractor-io/oper-schedule-contractor-io.component.ts","./src/app/oper-schedules/oper-schedule-contractor-list/oper-schedule-contractor-list.component.scss","./src/app/oper-schedules/oper-schedule-contractor-list/oper-schedule-contractor-list.component.ts","./src/app/oper-schedules/oper-schedules-create/oper-schedules-create.component.scss","./src/app/oper-schedules/oper-schedules-create/oper-schedules-create.component.ts","./src/app/oper-schedules/oper-schedules-duplicate/oper-schedules-duplicate.component.scss","./src/app/oper-schedules/oper-schedules-duplicate/oper-schedules-duplicate.component.ts","./src/app/oper-schedules/oper-schedules-edit/oper-schedules-edit.component.scss","./src/app/oper-schedules/oper-schedules-edit/oper-schedules-edit.component.ts","./src/app/oper-schedules/oper-schedules-form/oper-schedules-form.component.scss","./src/app/oper-schedules/oper-schedules-form/oper-schedules-form.component.ts","./src/app/oper-schedules/oper-schedules-list/oper-schedules-list.component.scss","./src/app/oper-schedules/oper-schedules-list/oper-schedules-list.component.ts","./src/app/oper-schedules/oper-schedules-routing.module.ts","./src/app/oper-schedules/oper-schedules.module.ts","./src/app/oper-schedules/oper-schedules.page.scss","./src/app/oper-schedules/oper-schedules.page.ts","./src/app/oper-schedules/oper-schedules.service.ts"],"names":[],"mappings":"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","file":"oper-schedules-oper-schedules-module-es2015.js","sourcesContent":["export default \"<app-main-header title=\\\"Movimientos Operativos\\\"></app-main-header>\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n    <zxing-scanner *ngIf=\\\"browserScanner\\\"\\r\\n                   [(device)]=\\\"currentDevice\\\"\\r\\n                   [formats]=\\\"formatsEnabled\\\"\\r\\n                   (scanError)=\\\"onCodeError($event)\\\"\\r\\n                   (scanSuccess)=\\\"onCodeResult($event)\\\"></zxing-scanner>\\r\\n\\r\\n    <div class=\\\"ion-text-center\\\">\\r\\n        <ion-button (click)=\\\"scan()\\\"\\r\\n                    *ngIf=\\\"!browserScanner\\\"\\r\\n                    fill=\\\"clear\\\">Escanear QR\\r\\n            <ion-icon slot=\\\"end\\\" name=\\\"qr-code-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n    </div>\\r\\n    <pre>\\r\\n{{barcodeData | json}}\\r\\n    </pre>\\r\\n</ion-content>\\r\\n\";","export default \"<app-main-header title=\\\"Mi Agenda\\\"></app-main-header>\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n    <ion-list *ngIf=\\\"operSchedulesService?.operSchedules?.length\\\">\\r\\n        <ion-item *ngFor=\\\"let operSchedule of operSchedulesService?.operSchedules\\\">\\r\\n            <ion-label>\\r\\n                <h2>{{operSchedule?.name}}</h2>\\r\\n                <h3>{{ (operSchedule?.time_start) | dateFormat:'HH:mm'}} - {{(operSchedule?.time_end) | dateFormat:'HH:mm'}}</h3>\\r\\n                <p>{{operSchedule?.oper_sector?.name}}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n    </ion-list>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/oper-schedules'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"operSchedulesService.storeOperSchedule()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!operSchedulesService.operSchedulesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'OPERATRIVIDAD AGENDAS' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-oper-schedules-form #operScheduleForm [model]=\\\"operSchedulesService.operSchedule\\\"></app-oper-schedules-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  OperSchedules duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/oper-schedules'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"operSchedulesService.updateOperSchedule()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!operSchedulesService.operSchedulesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'OPERATRIVIDAD AGENDAS' | titlecase}}: {{ operSchedulesService.operSchedule?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-oper-schedules-form #operScheduleForm [model]=\\\"operSchedulesService.operSchedule\\\"></app-oper-schedules-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #operSchedulesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- hous_unit_area_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'UNIDADES HABITACIONALES AREA' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"hous_unit_area_id\\\"\\r\\n                          id=\\\"hous_unit_area_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.hous_unit_area\\\"\\r\\n                          [items]=\\\"operSchedulesService.operScheduleLists.HousUnitArea\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('UNIDADES HABITACIONALES AREAS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('UNIDADES HABITACIONALES AREAS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setHousUnitAreaId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.hous_unit_area_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['hous_unit_area_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end hous_unit_area_id -->\\r\\n\\r\\n\\r\\n    <!-- oper_sector_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'SECTOR' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_sector_id\\\"\\r\\n                          id=\\\"oper_sector_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_sector\\\"\\r\\n                          [items]=\\\"operSchedulesService.operScheduleLists.OperSector\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('SECTORES' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('SECTORES' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperSectorId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_sector_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['oper_sector_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end oper_sector_id -->\\r\\n\\r\\n\\r\\n    <!-- oper_contractor_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'CONTRATISTA' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_contractor_id\\\"\\r\\n                          id=\\\"oper_contractor_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_contractor\\\"\\r\\n                          [items]=\\\"operSchedulesService.operScheduleLists.OperContractor\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CONTRATISTA' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('CONTRATISTA' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperContractorId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_contractor_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['oper_contractor_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end oper_contractor_id -->\\r\\n\\r\\n\\r\\n    <!-- oper_movement_ids -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'MOVIMIENTOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_movement_ids\\\"\\r\\n                          id=\\\"oper_movement_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_movements\\\"\\r\\n                          [items]=\\\"operSchedulesService.operScheduleLists.OperMovement\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('MOVIMIENTOS OPERATIVOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('MOVIMIENTOS OPERATIVOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperMovementIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_movement_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['oper_movement_ids']?.hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end oper_movement_ids -->\\r\\n\\r\\n\\r\\n            <!-- name -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"name\\\"\\r\\n                            id=\\\"name-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end name -->\\r\\n\\r\\n\\r\\n            <!-- required_time -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TIEMPO REQUERIDO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.required_time\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            name=\\\"required_time\\\"\\r\\n                            id=\\\"required_time-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.required_time\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['required_time']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end required_time -->\\r\\n\\r\\n\\r\\n            <!-- supervisor_email -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'EMAIL DEL SUPERVISOR' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.supervisor_email\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"supervisor_email\\\"\\r\\n                            id=\\\"supervisor_email-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.supervisor_email\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['supervisor_email']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end supervisor_email -->\\r\\n\\r\\n\\r\\n            <!-- area_phone -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TELÉFONO DEL AREA' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.area_phone\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"area_phone\\\"\\r\\n                            id=\\\"area_phone-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.area_phone\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['area_phone']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end area_phone -->\\r\\n\\r\\n\\r\\n            <!-- time_start -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'HORA INICIAL' | titlecase }}</ion-label>\\r\\n                <ion-datetime name=\\\"time_start\\\"\\r\\n                              id=\\\"time_start-field\\\"\\r\\n                              [doneText]=\\\"'Seleccionar'\\\"\\r\\n                              [cancelText]=\\\"'Cancelar'\\\"\\r\\n                              [(ngModel)]=\\\"model.time_start\\\"\\r\\n                              displayFormat=\\\"HH:mm\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.time_start\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['time_start']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end time_start -->\\r\\n\\r\\n\\r\\n            <!-- time_end -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'HORA FINAL' | titlecase }}</ion-label>\\r\\n                <ion-datetime name=\\\"time_end\\\"\\r\\n                              id=\\\"time_end-field\\\"\\r\\n                              [doneText]=\\\"'Seleccionar'\\\"\\r\\n                              [cancelText]=\\\"'Cancelar'\\\"\\r\\n                              [(ngModel)]=\\\"model.time_end\\\"\\r\\n                              displayFormat=\\\"HH:mm\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.time_end\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['time_end']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end time_end -->\\r\\n\\r\\n\\r\\n            <!-- periodicity -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'PERIODICIDAD' | titlecase }}</ion-label>\\r\\n                <ion-select [(ngModel)]=\\\"model.periodicity\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            name=\\\"periodicity\\\"\\r\\n                            id=\\\"periodicity-field\\\"\\r\\n                            okText=\\\"Seleccionar\\\"\\r\\n                            cancelText=\\\"Cancelar\\\">\\r\\n                    <ion-select-option value=\\\"\\\">{{ 'Ninguno' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"daily\\\">{{ 'Diario' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"weekly\\\">{{ 'Semanal' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"monthly\\\">{{ 'Mensual' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"bimonthly\\\">{{ 'Bimensual' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"quarterly\\\">{{ 'Trimestral' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"biannual\\\">{{ 'Semestral' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"annual\\\">{{ 'Anual' | titlecase }}</ion-select-option>\\r\\n            </ion-select>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.periodicity\\\">\\r\\n                <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['periodicity']?.hasError(validation.type)\\\">\\r\\n                    {{ validation.message }}\\r\\n                </div>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n        <!-- end periodicity -->\\r\\n\\r\\n\\r\\n            <!-- repass -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'REQUIERE REPASAR' | titlecase }}</ion-label>\\r\\n                <ion-toggle name=\\\"repass\\\"\\r\\n                            id=\\\"repass-field\\\"\\r\\n                            slot=\\\"end\\\"\\r\\n                            [(ngModel)]=\\\"model.repass\\\"></ion-toggle>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.repass\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['repass']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end repass -->\\r\\n\\r\\n\\r\\n            <!-- next -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'SIGUIENTE EN' | titlecase }}</ion-label>\\r\\n                <ion-datetime name=\\\"next\\\"\\r\\n                              id=\\\"next-field\\\"\\r\\n                              [doneText]=\\\"'Seleccionar'\\\"\\r\\n                              [cancelText]=\\\"'Cancelar'\\\"\\r\\n                              [(ngModel)]=\\\"model.next\\\"\\r\\n                              displayFormat=\\\"DD/MM/YYYY\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.next\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['next']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end next -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'OPERATRIVIDAD AGENDAS' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"oper-schedules/create\\\"\\r\\n                 primaryText=\\\"Crear {{'OPERATRIVIDAD AGENDAS' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                       [placeholder]=\\\"'Buscar ' + ('OPERATRIVIDAD AGENDAS' | lowercase )\\\"\\r\\n                       (ionCancel)=\\\"this.operSchedulesService.searchValue = ''; operSchedulesService.getOperSchedules()\\\"\\r\\n                       (keyup.enter)=\\\"operSchedulesService.getOperSchedules()\\\"\\r\\n                       [(ngModel)]=\\\"operSchedulesService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operSchedulesService.operSchedules?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let operSchedule of operSchedulesService.operSchedules; let index = index\\\">\\r\\n            <ion-list>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TIEMPO REQUERIDO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.required_time }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMAIL DEL SUPOERVISOR' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.supervisor_email }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO DEL AREA' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.area_phone }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'HORA INICIAL' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.time_start | dateFormat:'HH:mm' }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'HORA FINAL' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.time_end | dateFormat:'HH:mm' }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PERIODICIDAD' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.periodicity | status }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'REQUIERE REPASAR' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.repass  ? 'Si' : 'No' }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'SIGUIENTE EN' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.next | dateFormat:'DD/MM/YYYY' }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'UNIDADES HABITACIONALES AREAS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/hous-unit-areas/{{ operSchedule?.hous_unit_area?.id }}/edit\\\">{{ operSchedule?.hous_unit_area?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'OPERATIVIDAD SECTORES' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/oper-sectors/{{ operSchedule?.oper_sector?.id }}/edit\\\">{{ operSchedule?.oper_sector?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CONTRATISTAS OPERATIVOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/oper-contractors/{{ operSchedule?.oper_contractor?.id }}/edit\\\">{{ operSchedule?.oper_contractor?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'MOVIMIENTOS OPERATIVOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"operSchedule?.oper_movements?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let operMovement of operSchedule?.oper_movements; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/oper-movements/{{ operMovement?.id }}/edit\\\">{{ operMovement?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/oper-schedules/' + operSchedule?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"operSchedulesService.deleteOperSchedule(operSchedule?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operSchedulesService.operSchedules?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'OPERATRIVIDAD EGENDAS' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/oper-schedules/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\r\\n                Crear {{'OPERATRIVIDAD AGENDAS' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"operSchedulesService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"operSchedulesService.getOperSchedules(operSchedulesService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"operSchedulesService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{operSchedulesService.meta.current_page}}\\r\\n                /{{operSchedulesService.meta.last_page}} {{operSchedulesService.meta.from}}-{{operSchedulesService.meta.to}}\\r\\n                /{{operSchedulesService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"operSchedulesService.getOperSchedules(operSchedulesService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"operSchedulesService.meta.current_page == operSchedulesService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"{{'OPERATRIVIDAD AGENDAS' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"oper-schedules/create\\\"\\r\\n                 primaryText=\\\"Crear {{'OPERATRIVIDAD AGENDAS' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/oper-schedules/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'OPERATRIVIDAD AGENDAS'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/oper-schedules/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'OPERATRIVIDAD AGENDAS' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGUtY29udHJhY3Rvci1pby9vcGVyLXNjaGVkdWxlLWNvbnRyYWN0b3ItaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {OperSchedulesService} from \"../oper-schedules.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\nimport {BarcodeScanner} from '@ionic-native/barcode-scanner/ngx';\r\nimport {Platform} from \"@ionic/angular\";\r\nimport {BarcodeFormat} from \"@zxing/library\";\r\n\r\n@Component({\r\n  selector: 'app-oper-schedule-contractor-io',\r\n  templateUrl: './oper-schedule-contractor-io.component.html',\r\n  styleUrls: ['./oper-schedule-contractor-io.component.scss'],\r\n})\r\nexport class OperScheduleContractorIoComponent implements OnInit {\r\n\r\n  public barcodeData: any;\r\n  public browserScanner = false;\r\n  public currentDevice: MediaDeviceInfo = null;\r\n  public formatsEnabled: BarcodeFormat[] = [\r\n    BarcodeFormat.CODE_128,\r\n    BarcodeFormat.DATA_MATRIX,\r\n    BarcodeFormat.EAN_13,\r\n    BarcodeFormat.QR_CODE,\r\n    BarcodeFormat.PDF_417,\r\n  ];\r\n\r\n  constructor(\r\n      public operSchedulesService: OperSchedulesService,\r\n      public api: ApiService,\r\n      public loading: LoadingService,\r\n      public splitPanel: SplitPanelService,\r\n      private barcodeScanner: BarcodeScanner,\r\n      public platform: Platform,\r\n  ) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  scan() {\r\n    if (this.platform.is('desktop')) {\r\n      this.desktopScan();\r\n    }\r\n    if (this.platform.is('mobile')) {\r\n      this.mobileScan();\r\n    }\r\n  }\r\n\r\n  mobileScan() {\r\n    this.barcodeScanner.scan().then(barcodeData => {\r\n      console.log('Barcode data', barcodeData);\r\n      this.barcodeData = barcodeData;\r\n    }).catch(err => {\r\n      console.log('Error', err);\r\n    });\r\n  }\r\n\r\n  desktopScan() {\r\n    this.browserScanner = true;\r\n  }\r\n\r\n  onCodeResult(resultString: string) {\r\n    this.barcodeData = {\r\n      canceled: null,\r\n      text: resultString,\r\n      format: null,\r\n    }\r\n    this.browserScanner = false;\r\n    console.log(this.barcodeData);\r\n  }\r\n\r\n  onCodeError(err: any = null) {\r\n    this.barcodeData = {\r\n      canceled: null,\r\n      text: null,\r\n      format: null,\r\n    }\r\n    this.browserScanner = false;\r\n    console.log(err);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGUtY29udHJhY3Rvci1saXN0L29wZXItc2NoZWR1bGUtY29udHJhY3Rvci1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport {OperSchedulesService} from \"../oper-schedules.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\nimport {AuthService} from \"../../@shared/services/auth.service\";\r\n\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-oper-schedule-contractor-list',\r\n  templateUrl: './oper-schedule-contractor-list.component.html',\r\n  styleUrls: ['./oper-schedule-contractor-list.component.scss'],\r\n})\r\nexport class OperScheduleContractorListComponent implements OnInit {\r\n\r\n  userId: any = null;\r\n\r\n  date: any = moment().format('YYYY-MM-DD');\r\n\r\n  constructor(\r\n      public operSchedulesService: OperSchedulesService,\r\n      public api: ApiService,\r\n      public loading: LoadingService,\r\n      public splitPanel: SplitPanelService,\r\n      public auth: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n\r\n    this.userId = this.auth.getUser('id');\r\n\r\n    console.log(this.userId);\r\n\r\n    this.operSchedulesService.getOperSchedules(this.operSchedulesService.page, this.operSchedulesService.perPage, this.userId, this.date, true);\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWNyZWF0ZS9vcGVyLXNjaGVkdWxlcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {OperSchedulesService} from \"../oper-schedules.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {OperSchedule} from \"../oper-schedule\";\r\nimport {OperSchedulesFormComponent} from \"../oper-schedules-form/oper-schedules-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-oper-schedules-create',\r\n    templateUrl: './oper-schedules-create.component.html',\r\n    styleUrls: ['./oper-schedules-create.component.scss']\r\n})\r\nexport class OperSchedulesCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('operScheduleForm') operScheduleForm: OperSchedulesFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public operSchedulesService: OperSchedulesService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.operScheduleForm.operSchedulesForm.valueChanges.subscribe((data) => {\r\n            this.operSchedulesService.operSchedulesFormValid.next(this.operScheduleForm.operSchedulesForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.operSchedulesService.createOperSchedule();\r\n        this.operSchedulesService.operSchedule = <OperSchedule>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWR1cGxpY2F0ZS9vcGVyLXNjaGVkdWxlcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-oper-schedules-duplicate',\r\n  templateUrl: './oper-schedules-duplicate.component.html',\r\n  styleUrls: ['./oper-schedules-duplicate.component.scss'],\r\n})\r\nexport class OperSchedulesDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWVkaXQvb3Blci1zY2hlZHVsZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {OperSchedulesService} from \"../oper-schedules.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {OperSchedule} from \"../oper-schedule\";\r\nimport {OperSchedulesFormComponent} from \"../oper-schedules-form/oper-schedules-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-oper-schedules-edit',\r\n  templateUrl: './oper-schedules-edit.component.html',\r\n  styleUrls: ['./oper-schedules-edit.component.scss']\r\n})\r\nexport class OperSchedulesEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('operScheduleForm') operScheduleForm: OperSchedulesFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: OperSchedule = null;\r\n\r\n  constructor(\r\n      public operSchedulesService: OperSchedulesService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.operSchedulesService.editOperSchedule(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.operScheduleForm.operSchedulesForm.valueChanges.subscribe((data) => {\r\n          this.operSchedulesService.operSchedulesFormValid.next(this.operScheduleForm.operSchedulesForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"/* generated section */\\n/* end generated section */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3Blci1zY2hlZHVsZXMvb3Blci1zY2hlZHVsZXMtZm9ybS9vcGVyLXNjaGVkdWxlcy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFBO0FBRUEsMEJBQUEiLCJmaWxlIjoic3JjL2FwcC9vcGVyLXNjaGVkdWxlcy9vcGVyLXNjaGVkdWxlcy1mb3JtL29wZXItc2NoZWR1bGVzLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnZW5lcmF0ZWQgc2VjdGlvbiAqL1xyXG5cclxuLyogZW5kIGdlbmVyYXRlZCBzZWN0aW9uICovXHJcbiJdfQ== */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {OperSchedule} from \"../oper-schedule\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {OperSchedulesService} from \"../oper-schedules.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-oper-schedules-form',\r\n    templateUrl: './oper-schedules-form.component.html',\r\n    styleUrls: ['./oper-schedules-form.component.scss']\r\n})\r\nexport class OperSchedulesFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: OperSchedule = <OperSchedule>{};\r\n\r\n    @ViewChild('operSchedulesForm') operSchedulesForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'hous_unit_area_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('housUnitArea - NAME') + ' es obligatorio.'},\r\n        ],\r\n        'oper_sector_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('SECTOR') + ' es obligatorio.'},\r\n        ],\r\n        'oper_contractor_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('operContractor - NAME') + ' es obligatorio.'},\r\n        ],\r\n        'required_time': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TIEMPO REQUERIDO') + ' es obligatorio.'},\r\n        ],\r\n        'supervisor_email': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMAIL DEL SUPOERVISOR') + ' es obligatorio.'},\r\n        ],\r\n        'area_phone': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO DEL AREA') + ' es obligatorio.'},\r\n        ],\r\n        'time_start': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('HORA INICIAL') + ' es obligatorio.'},\r\n        ],\r\n        'time_end': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('HORA FINAL') + ' es obligatorio.'},\r\n        ],\r\n        'periodicity': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERIODICIDAD') + ' es obligatorio.'},\r\n        ],\r\n        'repass': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('REQUIERE REPASAR') + ' es obligatorio.'},\r\n        ],\r\n        'next': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('SIGUIENTE EN') + ' es obligatorio.'},\r\n        ],\r\n        'oper_movement_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('MOVIMIENTOS OPERATIVOS') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public operSchedulesService: OperSchedulesService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setHousUnitAreaId\r\n\r\n    setHousUnitAreaId(event: any) {\r\n        this.operSchedulesService.operSchedule.hous_unit_area_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setHousUnitAreaId\r\n\r\n\r\n    // set setOperSectorId\r\n\r\n    setOperSectorId(event: any) {\r\n        this.operSchedulesService.operSchedule.oper_sector_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setOperSectorId\r\n\r\n\r\n    // set setOperContractorId\r\n\r\n    setOperContractorId(event: any) {\r\n        this.operSchedulesService.operSchedule.oper_contractor_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setOperContractorId\r\n\r\n\r\n    // set setOperMovementIds\r\n    setOperMovementIds(event: any) {\r\n        let operMovementIds = null;\r\n        if (event.value.length) {\r\n            operMovementIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                operMovementIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.operSchedulesService.operSchedule.oper_movement_ids = operMovementIds;\r\n    }\r\n    // end setOperMovementIds\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWxpc3Qvb3Blci1zY2hlZHVsZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { OperSchedulesService} from \"../oper-schedules.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-oper-schedules-list',\r\n    templateUrl: './oper-schedules-list.component.html',\r\n    styleUrls: ['./oper-schedules-list.component.scss'],\r\n})\r\nexport class OperSchedulesListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public operSchedulesService: OperSchedulesService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.operSchedulesService.getOperSchedules();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OperSchedulesPage } from './oper-schedules.page';\r\nimport {OperSchedulesEditComponent} from \"./oper-schedules-edit/oper-schedules-edit.component\";\r\nimport {OperSchedulesCreateComponent} from \"./oper-schedules-create/oper-schedules-create.component\";\r\nimport {OperSchedulesListComponent} from \"./oper-schedules-list/oper-schedules-list.component\";\r\nimport {OperScheduleContractorIoComponent} from \"./oper-schedule-contractor-io/oper-schedule-contractor-io.component\";\r\nimport {OperScheduleContractorListComponent} from \"./oper-schedule-contractor-list/oper-schedule-contractor-list.component\";\r\nimport {AuthGuard} from \"../@shared/guards/auth.guard\";\r\n\r\nconst routes: Routes = [\r\n// generated section\r\n    {\r\n        path: '',\r\n        data: {\r\n            title: 'OPERATRIVIDAD AGENDAS',\r\n            roles: ['admin'],\r\n            // permissions: []\r\n        },\r\n        component: OperSchedulesPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        data: {\r\n            title: 'OPERATRIVIDAD AGENDAS',\r\n            roles: ['admin'],\r\n            // permissions: []\r\n        },\r\n        component: OperSchedulesListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      data: {\r\n          title: 'OPERATRIVIDAD AGENDAS',\r\n          roles: ['admin'],\r\n          // permissions: []\r\n      },\r\n      component: OperSchedulesCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        data: {\r\n            title: 'OPERATRIVIDAD AGENDAS',\r\n            roles: ['admin'],\r\n            // permissions: []\r\n        },\r\n        component: OperSchedulesEditComponent\r\n    },\r\n    {\r\n        path: 'movement',\r\n        data: {\r\n            title: 'Movimientos operativos'\r\n        },\r\n        component: OperScheduleContractorIoComponent,\r\n    },\r\n    {\r\n        path: 'own',\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n            title: 'Mi Agenda',\r\n            roles: ['admin', 'servicios-generales', 'servicios-seguridad'],\r\n        },\r\n        component: OperScheduleContractorListComponent,\r\n    }\r\n];\r\n// end generated section\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class OperSchedulesPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {OperSchedulesPageRoutingModule} from './oper-schedules-routing.module';\r\n\r\nimport { OperSchedulesPage} from './oper-schedules.page';\r\nimport { OperSchedulesListComponent} from \"./oper-schedules-list/oper-schedules-list.component\";\r\nimport { OperSchedulesCreateComponent} from \"./oper-schedules-create/oper-schedules-create.component\";\r\nimport { OperSchedulesDuplicateComponent} from \"./oper-schedules-duplicate/oper-schedules-duplicate.component\";\r\nimport { OperSchedulesEditComponent} from \"./oper-schedules-edit/oper-schedules-edit.component\";\r\nimport { OperSchedulesFormComponent} from \"./oper-schedules-form/oper-schedules-form.component\";\r\nimport {OperScheduleContractorIoComponent} from \"./oper-schedule-contractor-io/oper-schedule-contractor-io.component\";\r\nimport {OperScheduleContractorListComponent} from \"./oper-schedule-contractor-list/oper-schedule-contractor-list.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n    // imports generated section\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        OperSchedulesPageRoutingModule\r\n    // end imports generated section\r\n    ],\r\n    declarations: [\r\n    // declarations generated section\r\n        OperSchedulesPage,\r\n        OperSchedulesListComponent,\r\n        OperSchedulesCreateComponent,\r\n        OperSchedulesDuplicateComponent,\r\n        OperSchedulesEditComponent,\r\n        OperSchedulesFormComponent,\r\n    // end declarations generated section\r\n        OperScheduleContractorIoComponent,\r\n        OperScheduleContractorListComponent,\r\n    ]\r\n})\r\nexport class OperSchedulesPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-oper-schedules',\r\n  templateUrl: './oper-schedules.page.html',\r\n  styleUrls: ['./oper-schedules.page.scss'],\r\n})\r\nexport class OperSchedulesPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport { OperSchedule, OperScheduleLists } from \"./oper-schedule\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OperSchedulesService {\r\n\r\n    public operSchedulesUrl = 'oper-schedules';\r\n    public operSchedulesFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public operSchedules: OperSchedule[] = [];\r\n    public operSchedule: OperSchedule = <OperSchedule>{};\r\n    public operScheduleLists: OperScheduleLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n// generated section\r\n    public getOperSchedules(page: any = this.page, perPage: any = this.perPage, userId = null, date = null, own = null) {\r\n\r\n        this.api.get(\r\n            this.operSchedulesUrl + '?page=' +\r\n            page + '&perPage=' + perPage +\r\n            '&q[name:cont]=' + this.searchValue +\r\n            (userId ? '&q[operContractor.user_id:id]=' + userId : '') +\r\n            (date ? '&q[next:cont]=' + date : '') +\r\n            (own ? '&q[s]=time_start:asc' : '')\r\n        )\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.operSchedules = res.data;\r\n                    this.operScheduleLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editOperSchedule(id: any) {\r\n        this.api.get(this.operSchedulesUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.operSchedule = res.data.model;\r\n                    this.operScheduleLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateOperSchedule() {\r\n        this.api.put(this.operSchedulesUrl + '/' + this.operSchedule.id, {\r\n            model: this.operSchedule,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getOperSchedules(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createOperSchedule() {\r\n        this.api.get(this.operSchedulesUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.operSchedule = <OperSchedule>{};\r\n                    this.operScheduleLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeOperSchedule() {\r\n        this.api.post(this.operSchedulesUrl, {\r\n            model: this.operSchedule,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getOperSchedules(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteOperSchedule(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.operSchedulesUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getOperSchedules(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n// end generated section\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}