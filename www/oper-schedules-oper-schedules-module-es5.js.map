{"version":3,"sources":["webpack:///src/app/oper-schedules/oper-schedule-contractor-io/oper-schedule-contractor-io.component.html","webpack:///src/app/oper-schedules/oper-schedule-contractor-list/oper-schedule-contractor-list.component.html","webpack:///src/app/oper-schedules/oper-schedules-create/oper-schedules-create.component.html","webpack:///src/app/oper-schedules/oper-schedules-duplicate/oper-schedules-duplicate.component.html","webpack:///src/app/oper-schedules/oper-schedules-edit/oper-schedules-edit.component.html","webpack:///src/app/oper-schedules/oper-schedules-form/oper-schedules-form.component.html","webpack:///src/app/oper-schedules/oper-schedules-list/oper-schedules-list.component.html","webpack:///src/app/oper-schedules/oper-schedules.page.html","webpack:///src/app/oper-schedules/oper-schedule-contractor-io/oper-schedule-contractor-io.component.scss","webpack:///src/app/oper-schedules/oper-schedule-contractor-io/oper-schedule-contractor-io.component.ts","webpack:///src/app/oper-schedules/oper-schedule-contractor-list/oper-schedule-contractor-list.component.scss","webpack:///src/app/oper-schedules/oper-schedule-contractor-list/oper-schedule-contractor-list.component.ts","webpack:///src/app/oper-schedules/oper-schedules-create/oper-schedules-create.component.scss","webpack:///src/app/oper-schedules/oper-schedules-create/oper-schedules-create.component.ts","webpack:///src/app/oper-schedules/oper-schedules-duplicate/oper-schedules-duplicate.component.scss","webpack:///src/app/oper-schedules/oper-schedules-duplicate/oper-schedules-duplicate.component.ts","webpack:///src/app/oper-schedules/oper-schedules-edit/oper-schedules-edit.component.scss","webpack:///src/app/oper-schedules/oper-schedules-edit/oper-schedules-edit.component.ts","webpack:///src/app/oper-schedules/oper-schedules-form/oper-schedules-form.component.scss","webpack:///src/app/oper-schedules/oper-schedules-form/oper-schedules-form.component.ts","webpack:///src/app/oper-schedules/oper-schedules-list/oper-schedules-list.component.scss","webpack:///src/app/oper-schedules/oper-schedules-list/oper-schedules-list.component.ts","webpack:///src/app/oper-schedules/oper-schedules-routing.module.ts","webpack:///src/app/oper-schedules/oper-schedules.module.ts","webpack:///src/app/oper-schedules/oper-schedules.page.scss","webpack:///src/app/oper-schedules/oper-schedules.page.ts","webpack:///src/app/oper-schedules/oper-schedules.service.ts"],"names":["OperScheduleContractorIoComponent","operSchedulesService","api","loading","splitPanel","barcodeScanner","platform","browserScanner","currentDevice","formatsEnabled","CODE_128","DATA_MATRIX","EAN_13","QR_CODE","PDF_417","show","next","is","desktopScan","mobileScan","scan","then","barcodeData","console","log","err","resultString","canceled","text","format","selector","template","OperScheduleContractorListComponent","auth","userId","date","getUser","getOperSchedules","page","perPage","OperSchedulesCreateComponent","route","id","formValid","clearPosts","operScheduleForm","operSchedulesForm","valueChanges","subscribe","data","operSchedulesFormValid","valid","createOperSchedule","operSchedule","OperSchedulesDuplicateComponent","OperSchedulesEditComponent","model","snapshot","paramMap","get","editOperSchedule","OperSchedulesFormComponent","toTitlecase","validationMessages","type","message","transform","event","hous_unit_area_id","value","oper_sector_id","oper_contractor_id","operMovementIds","length","i","push","oper_movement_ids","OperSchedulesListComponent","content","scrollToTop","routes","path","title","roles","component","canActivate","OperSchedulesPageRoutingModule","imports","forChild","exports","OperSchedulesPageModule","declarations","OperSchedulesPage","OperSchedulesService","alert","toast","router","navigation","operSchedulesUrl","operSchedules","operScheduleLists","searchValue","meta","pagesContent","document","getElementById","own","res","lists","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"oper-schedules-oper-schedules-module-es5.js","sourcesContent":["export default \"<app-main-header title=\\\"Movimientos Operativos\\\"></app-main-header>\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n    <zxing-scanner *ngIf=\\\"browserScanner\\\"\\r\\n                   [(device)]=\\\"currentDevice\\\"\\r\\n                   [formats]=\\\"formatsEnabled\\\"\\r\\n                   (scanError)=\\\"onCodeError($event)\\\"\\r\\n                   (scanSuccess)=\\\"onCodeResult($event)\\\"></zxing-scanner>\\r\\n\\r\\n    <div class=\\\"ion-text-center\\\">\\r\\n        <ion-button (click)=\\\"scan()\\\"\\r\\n                    *ngIf=\\\"!browserScanner\\\"\\r\\n                    fill=\\\"clear\\\">Escanear QR\\r\\n            <ion-icon slot=\\\"end\\\" name=\\\"qr-code-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n    </div>\\r\\n    <pre>\\r\\n{{barcodeData | json}}\\r\\n    </pre>\\r\\n</ion-content>\\r\\n\";","export default \"<app-main-header title=\\\"Mi Agenda\\\"></app-main-header>\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n    <ion-list *ngIf=\\\"operSchedulesService?.operSchedules?.length\\\">\\r\\n        <ion-item *ngFor=\\\"let operSchedule of operSchedulesService?.operSchedules\\\">\\r\\n            <ion-label>\\r\\n                <h2>{{operSchedule?.name}}</h2>\\r\\n                <h3>{{ (operSchedule?.time_start) | dateFormat:'HH:mm'}} - {{(operSchedule?.time_end) | dateFormat:'HH:mm'}}</h3>\\r\\n                <p>{{operSchedule?.oper_sector?.name}}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n    </ion-list>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/oper-schedules'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"operSchedulesService.storeOperSchedule()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!operSchedulesService.operSchedulesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'OPERATRIVIDAD AGENDAS' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-oper-schedules-form #operScheduleForm [model]=\\\"operSchedulesService.operSchedule\\\"></app-oper-schedules-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  OperSchedules duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/oper-schedules'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"operSchedulesService.updateOperSchedule()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!operSchedulesService.operSchedulesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'OPERATRIVIDAD AGENDAS' | titlecase}}: {{ operSchedulesService.operSchedule?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-oper-schedules-form #operScheduleForm [model]=\\\"operSchedulesService.operSchedule\\\"></app-oper-schedules-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #operSchedulesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- hous_unit_area_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'UNIDADES HABITACIONALES AREA' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"hous_unit_area_id\\\"\\r\\n                          id=\\\"hous_unit_area_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.hous_unit_area\\\"\\r\\n                          [items]=\\\"operSchedulesService.operScheduleLists.HousUnitArea\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('UNIDADES HABITACIONALES AREAS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('UNIDADES HABITACIONALES AREAS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setHousUnitAreaId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.hous_unit_area_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['hous_unit_area_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end hous_unit_area_id -->\\r\\n\\r\\n\\r\\n    <!-- oper_sector_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'SECTOR' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_sector_id\\\"\\r\\n                          id=\\\"oper_sector_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_sector\\\"\\r\\n                          [items]=\\\"operSchedulesService.operScheduleLists.OperSector\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('SECTORES' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('SECTORES' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperSectorId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_sector_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['oper_sector_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end oper_sector_id -->\\r\\n\\r\\n\\r\\n    <!-- oper_contractor_id -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'CONTRATISTA' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_contractor_id\\\"\\r\\n                          id=\\\"oper_contractor_id-field\\\"\\r\\n                          [required]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_contractor\\\"\\r\\n                          [items]=\\\"operSchedulesService.operScheduleLists.OperContractor\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CONTRATISTA' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('CONTRATISTA' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperContractorId($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_contractor_id\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['oper_contractor_id']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end oper_contractor_id -->\\r\\n\\r\\n\\r\\n    <!-- oper_movement_ids -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'MOVIMIENTOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"oper_movement_ids\\\"\\r\\n                          id=\\\"oper_movement_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.oper_movements\\\"\\r\\n                          [items]=\\\"operSchedulesService.operScheduleLists.OperMovement\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('MOVIMIENTOS OPERATIVOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('MOVIMIENTOS OPERATIVOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setOperMovementIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_movement_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['oper_movement_ids']?.hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end oper_movement_ids -->\\r\\n\\r\\n\\r\\n            <!-- name -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"name\\\"\\r\\n                            id=\\\"name-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end name -->\\r\\n\\r\\n\\r\\n            <!-- required_time -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TIEMPO REQUERIDO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.required_time\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            name=\\\"required_time\\\"\\r\\n                            id=\\\"required_time-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.required_time\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['required_time']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end required_time -->\\r\\n\\r\\n\\r\\n            <!-- supervisor_email -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'EMAIL DEL SUPERVISOR' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.supervisor_email\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"supervisor_email\\\"\\r\\n                            id=\\\"supervisor_email-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.supervisor_email\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['supervisor_email']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end supervisor_email -->\\r\\n\\r\\n\\r\\n            <!-- area_phone -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'TELÉFONO DEL AREA' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.area_phone\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"area_phone\\\"\\r\\n                            id=\\\"area_phone-field\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.area_phone\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['area_phone']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end area_phone -->\\r\\n\\r\\n\\r\\n            <!-- time_start -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'HORA INICIAL' | titlecase }}</ion-label>\\r\\n                <ion-datetime name=\\\"time_start\\\"\\r\\n                              id=\\\"time_start-field\\\"\\r\\n                              [doneText]=\\\"'Seleccionar'\\\"\\r\\n                              [cancelText]=\\\"'Cancelar'\\\"\\r\\n                              [(ngModel)]=\\\"model.time_start\\\"\\r\\n                              displayFormat=\\\"HH:mm\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.time_start\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['time_start']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end time_start -->\\r\\n\\r\\n\\r\\n            <!-- time_end -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'HORA FINAL' | titlecase }}</ion-label>\\r\\n                <ion-datetime name=\\\"time_end\\\"\\r\\n                              id=\\\"time_end-field\\\"\\r\\n                              [doneText]=\\\"'Seleccionar'\\\"\\r\\n                              [cancelText]=\\\"'Cancelar'\\\"\\r\\n                              [(ngModel)]=\\\"model.time_end\\\"\\r\\n                              displayFormat=\\\"HH:mm\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.time_end\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['time_end']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end time_end -->\\r\\n\\r\\n\\r\\n            <!-- periodicity -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'PERIODICIDAD' | titlecase }}</ion-label>\\r\\n                <ion-select [(ngModel)]=\\\"model.periodicity\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            name=\\\"periodicity\\\"\\r\\n                            id=\\\"periodicity-field\\\"\\r\\n                            okText=\\\"Seleccionar\\\"\\r\\n                            cancelText=\\\"Cancelar\\\">\\r\\n                    <ion-select-option value=\\\"\\\">{{ 'Ninguno' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"daily\\\">{{ 'Diario' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"weekly\\\">{{ 'Semanal' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"monthly\\\">{{ 'Mensual' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"bimonthly\\\">{{ 'Bimensual' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"quarterly\\\">{{ 'Trimestral' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"biannual\\\">{{ 'Semestral' | titlecase }}</ion-select-option>\\r\\n                    <ion-select-option value=\\\"annual\\\">{{ 'Anual' | titlecase }}</ion-select-option>\\r\\n            </ion-select>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.periodicity\\\">\\r\\n                <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['periodicity']?.hasError(validation.type)\\\">\\r\\n                    {{ validation.message }}\\r\\n                </div>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n        <!-- end periodicity -->\\r\\n\\r\\n\\r\\n            <!-- repass -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'REQUIERE REPASAR' | titlecase }}</ion-label>\\r\\n                <ion-toggle name=\\\"repass\\\"\\r\\n                            id=\\\"repass-field\\\"\\r\\n                            slot=\\\"end\\\"\\r\\n                            [(ngModel)]=\\\"model.repass\\\"></ion-toggle>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.repass\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['repass']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end repass -->\\r\\n\\r\\n\\r\\n            <!-- next -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'SIGUIENTE EN' | titlecase }}</ion-label>\\r\\n                <ion-datetime name=\\\"next\\\"\\r\\n                              id=\\\"next-field\\\"\\r\\n                              [doneText]=\\\"'Seleccionar'\\\"\\r\\n                              [cancelText]=\\\"'Cancelar'\\\"\\r\\n                              [(ngModel)]=\\\"model.next\\\"\\r\\n                              displayFormat=\\\"DD/MM/YYYY\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.next\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['next']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end next -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'OPERATRIVIDAD AGENDAS' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"oper-schedules/create\\\"\\r\\n                 primaryText=\\\"Crear {{'OPERATRIVIDAD AGENDAS' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                       [placeholder]=\\\"'Buscar ' + ('OPERATRIVIDAD AGENDAS' | lowercase )\\\"\\r\\n                       (ionCancel)=\\\"this.operSchedulesService.searchValue = ''; operSchedulesService.getOperSchedules()\\\"\\r\\n                       (keyup.enter)=\\\"operSchedulesService.getOperSchedules()\\\"\\r\\n                       [(ngModel)]=\\\"operSchedulesService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operSchedulesService.operSchedules?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let operSchedule of operSchedulesService.operSchedules; let index = index\\\">\\r\\n            <ion-list>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TIEMPO REQUERIDO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.required_time }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMAIL DEL SUPOERVISOR' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.supervisor_email }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO DEL AREA' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.area_phone }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'HORA INICIAL' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.time_start | dateFormat:'HH:mm' }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'HORA FINAL' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.time_end | dateFormat:'HH:mm' }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PERIODICIDAD' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.periodicity | status }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'REQUIERE REPASAR' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.repass  ? 'Si' : 'No' }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'SIGUIENTE EN' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.next | dateFormat:'DD/MM/YYYY' }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'UNIDADES HABITACIONALES AREAS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/hous-unit-areas/{{ operSchedule?.hous_unit_area?.id }}/edit\\\">{{ operSchedule?.hous_unit_area?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'OPERATIVIDAD SECTORES' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/oper-sectors/{{ operSchedule?.oper_sector?.id }}/edit\\\">{{ operSchedule?.oper_sector?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CONTRATISTAS OPERATIVOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/oper-contractors/{{ operSchedule?.oper_contractor?.id }}/edit\\\">{{ operSchedule?.oper_contractor?.name }}</a></div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'MOVIMIENTOS OPERATIVOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"operSchedule?.oper_movements?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let operMovement of operSchedule?.oper_movements; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/oper-movements/{{ operMovement?.id }}/edit\\\">{{ operMovement?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/oper-schedules/' + operSchedule?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"operSchedulesService.deleteOperSchedule(operSchedule?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operSchedulesService.operSchedules?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'OPERATRIVIDAD EGENDAS' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/oper-schedules/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\r\\n                Crear {{'OPERATRIVIDAD AGENDAS' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"operSchedulesService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"operSchedulesService.getOperSchedules(operSchedulesService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"operSchedulesService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{operSchedulesService.meta.current_page}}\\r\\n                /{{operSchedulesService.meta.last_page}} {{operSchedulesService.meta.from}}-{{operSchedulesService.meta.to}}\\r\\n                /{{operSchedulesService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"operSchedulesService.getOperSchedules(operSchedulesService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"operSchedulesService.meta.current_page == operSchedulesService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"{{'OPERATRIVIDAD AGENDAS' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"oper-schedules/create\\\"\\r\\n                 primaryText=\\\"Crear {{'OPERATRIVIDAD AGENDAS' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/oper-schedules/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'OPERATRIVIDAD AGENDAS'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/oper-schedules/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'OPERATRIVIDAD AGENDAS' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGUtY29udHJhY3Rvci1pby9vcGVyLXNjaGVkdWxlLWNvbnRyYWN0b3ItaW8uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {OperSchedulesService} from \"../oper-schedules.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\nimport {BarcodeScanner} from '@ionic-native/barcode-scanner/ngx';\r\nimport {Platform} from \"@ionic/angular\";\r\nimport {BarcodeFormat} from \"@zxing/library\";\r\n\r\n@Component({\r\n  selector: 'app-oper-schedule-contractor-io',\r\n  templateUrl: './oper-schedule-contractor-io.component.html',\r\n  styleUrls: ['./oper-schedule-contractor-io.component.scss'],\r\n})\r\nexport class OperScheduleContractorIoComponent implements OnInit {\r\n\r\n  public barcodeData: any;\r\n  public browserScanner = false;\r\n  public currentDevice: MediaDeviceInfo = null;\r\n  public formatsEnabled: BarcodeFormat[] = [\r\n    BarcodeFormat.CODE_128,\r\n    BarcodeFormat.DATA_MATRIX,\r\n    BarcodeFormat.EAN_13,\r\n    BarcodeFormat.QR_CODE,\r\n    BarcodeFormat.PDF_417,\r\n  ];\r\n\r\n  constructor(\r\n      public operSchedulesService: OperSchedulesService,\r\n      public api: ApiService,\r\n      public loading: LoadingService,\r\n      public splitPanel: SplitPanelService,\r\n      private barcodeScanner: BarcodeScanner,\r\n      public platform: Platform,\r\n  ) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  scan() {\r\n    if (this.platform.is('desktop')) {\r\n      this.desktopScan();\r\n    }\r\n    if (this.platform.is('mobile')) {\r\n      this.mobileScan();\r\n    }\r\n  }\r\n\r\n  mobileScan() {\r\n    this.barcodeScanner.scan().then(barcodeData => {\r\n      console.log('Barcode data', barcodeData);\r\n      this.barcodeData = barcodeData;\r\n    }).catch(err => {\r\n      console.log('Error', err);\r\n    });\r\n  }\r\n\r\n  desktopScan() {\r\n    this.browserScanner = true;\r\n  }\r\n\r\n  onCodeResult(resultString: string) {\r\n    this.barcodeData = {\r\n      canceled: null,\r\n      text: resultString,\r\n      format: null,\r\n    }\r\n    this.browserScanner = false;\r\n    console.log(this.barcodeData);\r\n  }\r\n\r\n  onCodeError(err: any = null) {\r\n    this.barcodeData = {\r\n      canceled: null,\r\n      text: null,\r\n      format: null,\r\n    }\r\n    this.browserScanner = false;\r\n    console.log(err);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGUtY29udHJhY3Rvci1saXN0L29wZXItc2NoZWR1bGUtY29udHJhY3Rvci1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport {OperSchedulesService} from \"../oper-schedules.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\nimport {AuthService} from \"../../@shared/services/auth.service\";\r\n\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-oper-schedule-contractor-list',\r\n  templateUrl: './oper-schedule-contractor-list.component.html',\r\n  styleUrls: ['./oper-schedule-contractor-list.component.scss'],\r\n})\r\nexport class OperScheduleContractorListComponent implements OnInit {\r\n\r\n  userId: any = null;\r\n\r\n  date: any = moment().format('YYYY-MM-DD');\r\n\r\n  constructor(\r\n      public operSchedulesService: OperSchedulesService,\r\n      public api: ApiService,\r\n      public loading: LoadingService,\r\n      public splitPanel: SplitPanelService,\r\n      public auth: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n\r\n    this.userId = this.auth.getUser('id');\r\n\r\n    console.log(this.userId);\r\n\r\n    this.operSchedulesService.getOperSchedules(this.operSchedulesService.page, this.operSchedulesService.perPage, this.userId, this.date, true);\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWNyZWF0ZS9vcGVyLXNjaGVkdWxlcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {OperSchedulesService} from \"../oper-schedules.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {OperSchedule} from \"../oper-schedule\";\r\nimport {OperSchedulesFormComponent} from \"../oper-schedules-form/oper-schedules-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-oper-schedules-create',\r\n    templateUrl: './oper-schedules-create.component.html',\r\n    styleUrls: ['./oper-schedules-create.component.scss']\r\n})\r\nexport class OperSchedulesCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('operScheduleForm') operScheduleForm: OperSchedulesFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public operSchedulesService: OperSchedulesService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.operScheduleForm.operSchedulesForm.valueChanges.subscribe((data) => {\r\n            this.operSchedulesService.operSchedulesFormValid.next(this.operScheduleForm.operSchedulesForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.operSchedulesService.createOperSchedule();\r\n        this.operSchedulesService.operSchedule = <OperSchedule>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWR1cGxpY2F0ZS9vcGVyLXNjaGVkdWxlcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-oper-schedules-duplicate',\r\n  templateUrl: './oper-schedules-duplicate.component.html',\r\n  styleUrls: ['./oper-schedules-duplicate.component.scss'],\r\n})\r\nexport class OperSchedulesDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWVkaXQvb3Blci1zY2hlZHVsZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {OperSchedulesService} from \"../oper-schedules.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {OperSchedule} from \"../oper-schedule\";\r\nimport {OperSchedulesFormComponent} from \"../oper-schedules-form/oper-schedules-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-oper-schedules-edit',\r\n  templateUrl: './oper-schedules-edit.component.html',\r\n  styleUrls: ['./oper-schedules-edit.component.scss']\r\n})\r\nexport class OperSchedulesEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('operScheduleForm') operScheduleForm: OperSchedulesFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: OperSchedule = null;\r\n\r\n  constructor(\r\n      public operSchedulesService: OperSchedulesService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.operSchedulesService.editOperSchedule(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.operScheduleForm.operSchedulesForm.valueChanges.subscribe((data) => {\r\n          this.operSchedulesService.operSchedulesFormValid.next(this.operScheduleForm.operSchedulesForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"/* generated section */\\n/* end generated section */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3Blci1zY2hlZHVsZXMvb3Blci1zY2hlZHVsZXMtZm9ybS9vcGVyLXNjaGVkdWxlcy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFBO0FBRUEsMEJBQUEiLCJmaWxlIjoic3JjL2FwcC9vcGVyLXNjaGVkdWxlcy9vcGVyLXNjaGVkdWxlcy1mb3JtL29wZXItc2NoZWR1bGVzLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnZW5lcmF0ZWQgc2VjdGlvbiAqL1xyXG5cclxuLyogZW5kIGdlbmVyYXRlZCBzZWN0aW9uICovXHJcbiJdfQ== */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {OperSchedule} from \"../oper-schedule\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {OperSchedulesService} from \"../oper-schedules.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-oper-schedules-form',\r\n    templateUrl: './oper-schedules-form.component.html',\r\n    styleUrls: ['./oper-schedules-form.component.scss']\r\n})\r\nexport class OperSchedulesFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: OperSchedule = <OperSchedule>{};\r\n\r\n    @ViewChild('operSchedulesForm') operSchedulesForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'hous_unit_area_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('housUnitArea - NAME') + ' es obligatorio.'},\r\n        ],\r\n        'oper_sector_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('SECTOR') + ' es obligatorio.'},\r\n        ],\r\n        'oper_contractor_id': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('operContractor - NAME') + ' es obligatorio.'},\r\n        ],\r\n        'required_time': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TIEMPO REQUERIDO') + ' es obligatorio.'},\r\n        ],\r\n        'supervisor_email': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMAIL DEL SUPOERVISOR') + ' es obligatorio.'},\r\n        ],\r\n        'area_phone': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO DEL AREA') + ' es obligatorio.'},\r\n        ],\r\n        'time_start': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('HORA INICIAL') + ' es obligatorio.'},\r\n        ],\r\n        'time_end': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('HORA FINAL') + ' es obligatorio.'},\r\n        ],\r\n        'periodicity': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERIODICIDAD') + ' es obligatorio.'},\r\n        ],\r\n        'repass': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('REQUIERE REPASAR') + ' es obligatorio.'},\r\n        ],\r\n        'next': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('SIGUIENTE EN') + ' es obligatorio.'},\r\n        ],\r\n        'oper_movement_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('MOVIMIENTOS OPERATIVOS') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public operSchedulesService: OperSchedulesService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setHousUnitAreaId\r\n\r\n    setHousUnitAreaId(event: any) {\r\n        this.operSchedulesService.operSchedule.hous_unit_area_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setHousUnitAreaId\r\n\r\n\r\n    // set setOperSectorId\r\n\r\n    setOperSectorId(event: any) {\r\n        this.operSchedulesService.operSchedule.oper_sector_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setOperSectorId\r\n\r\n\r\n    // set setOperContractorId\r\n\r\n    setOperContractorId(event: any) {\r\n        this.operSchedulesService.operSchedule.oper_contractor_id = event.value ? event.value.id : null;\r\n    }\r\n    // end setOperContractorId\r\n\r\n\r\n    // set setOperMovementIds\r\n    setOperMovementIds(event: any) {\r\n        let operMovementIds = null;\r\n        if (event.value.length) {\r\n            operMovementIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                operMovementIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.operSchedulesService.operSchedule.oper_movement_ids = operMovementIds;\r\n    }\r\n    // end setOperMovementIds\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWxpc3Qvb3Blci1zY2hlZHVsZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { OperSchedulesService} from \"../oper-schedules.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-oper-schedules-list',\r\n    templateUrl: './oper-schedules-list.component.html',\r\n    styleUrls: ['./oper-schedules-list.component.scss'],\r\n})\r\nexport class OperSchedulesListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public operSchedulesService: OperSchedulesService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.operSchedulesService.getOperSchedules();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OperSchedulesPage } from './oper-schedules.page';\r\nimport {OperSchedulesEditComponent} from \"./oper-schedules-edit/oper-schedules-edit.component\";\r\nimport {OperSchedulesCreateComponent} from \"./oper-schedules-create/oper-schedules-create.component\";\r\nimport {OperSchedulesListComponent} from \"./oper-schedules-list/oper-schedules-list.component\";\r\nimport {OperScheduleContractorIoComponent} from \"./oper-schedule-contractor-io/oper-schedule-contractor-io.component\";\r\nimport {OperScheduleContractorListComponent} from \"./oper-schedule-contractor-list/oper-schedule-contractor-list.component\";\r\nimport {AuthGuard} from \"../@shared/guards/auth.guard\";\r\n\r\nconst routes: Routes = [\r\n// generated section\r\n    {\r\n        path: '',\r\n        data: {\r\n            title: 'OPERATRIVIDAD AGENDAS',\r\n            roles: ['admin'],\r\n            // permissions: []\r\n        },\r\n        component: OperSchedulesPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        data: {\r\n            title: 'OPERATRIVIDAD AGENDAS',\r\n            roles: ['admin'],\r\n            // permissions: []\r\n        },\r\n        component: OperSchedulesListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      data: {\r\n          title: 'OPERATRIVIDAD AGENDAS',\r\n          roles: ['admin'],\r\n          // permissions: []\r\n      },\r\n      component: OperSchedulesCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        data: {\r\n            title: 'OPERATRIVIDAD AGENDAS',\r\n            roles: ['admin'],\r\n            // permissions: []\r\n        },\r\n        component: OperSchedulesEditComponent\r\n    },\r\n    {\r\n        path: 'movement',\r\n        data: {\r\n            title: 'Movimientos operativos'\r\n        },\r\n        component: OperScheduleContractorIoComponent,\r\n    },\r\n    {\r\n        path: 'own',\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n            title: 'Mi Agenda',\r\n            roles: ['admin', 'servicios-generales', 'servicios-seguridad'],\r\n        },\r\n        component: OperScheduleContractorListComponent,\r\n    }\r\n];\r\n// end generated section\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class OperSchedulesPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {OperSchedulesPageRoutingModule} from './oper-schedules-routing.module';\r\n\r\nimport { OperSchedulesPage} from './oper-schedules.page';\r\nimport { OperSchedulesListComponent} from \"./oper-schedules-list/oper-schedules-list.component\";\r\nimport { OperSchedulesCreateComponent} from \"./oper-schedules-create/oper-schedules-create.component\";\r\nimport { OperSchedulesDuplicateComponent} from \"./oper-schedules-duplicate/oper-schedules-duplicate.component\";\r\nimport { OperSchedulesEditComponent} from \"./oper-schedules-edit/oper-schedules-edit.component\";\r\nimport { OperSchedulesFormComponent} from \"./oper-schedules-form/oper-schedules-form.component\";\r\nimport {OperScheduleContractorIoComponent} from \"./oper-schedule-contractor-io/oper-schedule-contractor-io.component\";\r\nimport {OperScheduleContractorListComponent} from \"./oper-schedule-contractor-list/oper-schedule-contractor-list.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n    // imports generated section\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        OperSchedulesPageRoutingModule\r\n    // end imports generated section\r\n    ],\r\n    declarations: [\r\n    // declarations generated section\r\n        OperSchedulesPage,\r\n        OperSchedulesListComponent,\r\n        OperSchedulesCreateComponent,\r\n        OperSchedulesDuplicateComponent,\r\n        OperSchedulesEditComponent,\r\n        OperSchedulesFormComponent,\r\n    // end declarations generated section\r\n        OperScheduleContractorIoComponent,\r\n        OperScheduleContractorListComponent,\r\n    ]\r\n})\r\nexport class OperSchedulesPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-oper-schedules',\r\n  templateUrl: './oper-schedules.page.html',\r\n  styleUrls: ['./oper-schedules.page.scss'],\r\n})\r\nexport class OperSchedulesPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport { OperSchedule, OperScheduleLists } from \"./oper-schedule\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OperSchedulesService {\r\n\r\n    public operSchedulesUrl = 'oper-schedules';\r\n    public operSchedulesFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public operSchedules: OperSchedule[] = [];\r\n    public operSchedule: OperSchedule = <OperSchedule>{};\r\n    public operScheduleLists: OperScheduleLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n// generated section\r\n    public getOperSchedules(page: any = this.page, perPage: any = this.perPage, userId = null, date = null, own = null) {\r\n\r\n        this.api.get(\r\n            this.operSchedulesUrl + '?page=' +\r\n            page + '&perPage=' + perPage +\r\n            '&q[name:cont]=' + this.searchValue +\r\n            (userId ? '&q[operContractor.user_id:id]=' + userId : '') +\r\n            (date ? '&q[next:cont]=' + date : '') +\r\n            (own ? '&q[s]=time_start:asc' : '')\r\n        )\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.operSchedules = res.data;\r\n                    this.operScheduleLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editOperSchedule(id: any) {\r\n        this.api.get(this.operSchedulesUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.operSchedule = res.data.model;\r\n                    this.operScheduleLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateOperSchedule() {\r\n        this.api.put(this.operSchedulesUrl + '/' + this.operSchedule.id, {\r\n            model: this.operSchedule,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getOperSchedules(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createOperSchedule() {\r\n        this.api.get(this.operSchedulesUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.operSchedule = <OperSchedule>{};\r\n                    this.operScheduleLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeOperSchedule() {\r\n        this.api.post(this.operSchedulesUrl, {\r\n            model: this.operSchedule,\r\n            pivots: {\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getOperSchedules(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteOperSchedule(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.operSchedulesUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getOperSchedules(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n// end generated section\r\n\r\n}\r\n"]}