{"version":3,"sources":["webpack:///src/app/oper-schedules/oper-schedules-create/oper-schedules-create.component.html","webpack:///src/app/oper-schedules/oper-schedules-duplicate/oper-schedules-duplicate.component.html","webpack:///src/app/oper-schedules/oper-schedules-edit/oper-schedules-edit.component.html","webpack:///src/app/oper-schedules/oper-schedules-form/oper-schedules-form.component.html","webpack:///src/app/oper-schedules/oper-schedules-list/oper-schedules-list.component.html","webpack:///src/app/oper-schedules/oper-schedules.page.html","webpack:///src/app/oper-schedules/oper-schedules-create/oper-schedules-create.component.scss","webpack:///src/app/oper-schedules/oper-schedules-create/oper-schedules-create.component.ts","webpack:///src/app/oper-schedules/oper-schedules-duplicate/oper-schedules-duplicate.component.scss","webpack:///src/app/oper-schedules/oper-schedules-duplicate/oper-schedules-duplicate.component.ts","webpack:///src/app/oper-schedules/oper-schedules-edit/oper-schedules-edit.component.scss","webpack:///src/app/oper-schedules/oper-schedules-edit/oper-schedules-edit.component.ts","webpack:///src/app/oper-schedules/oper-schedules-form/oper-schedules-form.component.scss","webpack:///src/app/oper-schedules/oper-schedules-form/oper-schedules-form.component.ts","webpack:///src/app/oper-schedules/oper-schedules-list/oper-schedules-list.component.scss","webpack:///src/app/oper-schedules/oper-schedules-list/oper-schedules-list.component.ts","webpack:///src/app/oper-schedules/oper-schedules-routing.module.ts","webpack:///src/app/oper-schedules/oper-schedules.module.ts","webpack:///src/app/oper-schedules/oper-schedules.page.scss","webpack:///src/app/oper-schedules/oper-schedules.page.ts","webpack:///src/app/oper-schedules/oper-schedules.service.ts"],"names":["OperSchedulesCreateComponent","operSchedulesService","route","platform","splitPanel","id","formValid","clearPosts","show","next","operScheduleForm","operSchedulesForm","valueChanges","subscribe","data","operSchedulesFormValid","valid","console","log","createOperSchedule","operSchedule","selector","template","OperSchedulesDuplicateComponent","OperSchedulesEditComponent","model","snapshot","paramMap","get","editOperSchedule","OperSchedulesFormComponent","toTitlecase","validationMessages","type","message","transform","event","hous_unit_area_id","value","oper_sector_id","oper_contractor_id","operMovementIds","length","i","push","oper_movement_ids","OperSchedulesListComponent","api","loading","getOperSchedules","content","scrollToTop","routes","path","title","roles","component","OperSchedulesPageRoutingModule","imports","forChild","exports","OperSchedulesPageModule","declarations","OperSchedulesPage","OperSchedulesService","alert","toast","router","navigation","operSchedulesUrl","operSchedules","operScheduleLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFA,4BAA4B;AAOrC,8CACWC,oBADX,EAEWC,KAFX,EAGWC,QAHX,EAIWC,UAJX,EAIwC;AAAA;;AAH7B,eAAAH,oBAAA,GAAAA,oBAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AAPX,eAAAC,EAAA,GAAU,IAAV;AACO,eAAAC,SAAA,GAAY,KAAZ;AASN;;AAdoC;AAAA;AAAA,qCAgB7B;AACJ,iBAAKC,UAAL;AACH;AAlBoC;AAAA;AAAA,6CAoBlB;AAChB,iBAAKH,UAAL,CAAgBI,IAAhB,CAAqBC,IAArB,CAA0B,IAA1B;AACF;AAtBoC;AAAA;AAAA,4CAwBnB;AAAA;;AACd,iBAAKC,gBAAL,CAAsBC,iBAAtB,CAAwCC,YAAxC,CAAqDC,SAArD,CAA+D,UAACC,IAAD,EAAU;AACrE,mBAAI,CAACb,oBAAL,CAA0Bc,sBAA1B,CAAiDN,IAAjD,CAAsD,KAAI,CAACC,gBAAL,CAAsBC,iBAAtB,CAAwCK,KAA9F;AACH,aAFD;AAGH;AA5BoC;AAAA;AAAA,uCA8BxB;AACTC,mBAAO,CAACC,GAAR,CAAY,OAAZ;AACA,iBAAKjB,oBAAL,CAA0BkB,kBAA1B;AACA,iBAAKlB,oBAAL,CAA0BmB,YAA1B,GAAuD,EAAvD;AACH;AAlCoC;;AAAA;AAAA,S;;;;gBAZjC;;gBACA;;gBAGC;;gBACD;;;;;;gBASH,uD;AAAS,iBAAC,kBAAD;;;AAFDpB,kCAA4B,6DALxC,gEAAU;AACPqB,gBAAQ,EAAE,2BADH;AAEPC,gBAAQ,EAAR;AAAA;AAAA,gJAFO;;;;AAAA,OAAV,CAKwC,GAA5BtB,4BAA4B,CAA5B;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFuB,+BAA+B;AAE1C,mDAAc;AAAA;AAAG;;AAFyB;AAAA;AAAA,qCAI/B,CAAE;AAJ6B;;AAAA;AAAA,S;;;;;;AAA/BA,qCAA+B,6DAL3C,gEAAU;AACTF,gBAAQ,EAAE,8BADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,sJAFS;;;;AAAA,OAAV,CAK2C,GAA/BC,+BAA+B,CAA/B;;;;;;;;;;;;;;;;ACPb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaFC,0BAA0B;AAOrC,4CACWvB,oBADX,EAEWC,KAFX,EAGWC,QAHX,EAIWC,UAJX,EAIwC;AAAA;;AAH7B,eAAAH,oBAAA,GAAAA,oBAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AAPF,eAAAC,EAAA,GAAU,IAAV;AACA,eAAAoB,KAAA,GAAsB,IAAtB;AAOJ;;AAZgC;AAAA;AAAA,qCAc7B;AACJ,iBAAKpB,EAAL,GAAU,KAAKH,KAAL,CAAWwB,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAV;AACA,iBAAK3B,oBAAL,CAA0B4B,gBAA1B,CAA2C,KAAKxB,EAAhD;AACH;AAjBoC;AAAA;AAAA,6CAmBlB;AACjB,iBAAKD,UAAL,CAAgBI,IAAhB,CAAqBC,IAArB,CAA0B,IAA1B;AACD;AArBoC;AAAA;AAAA,4CAuBnB;AAAA;;AACd,iBAAKC,gBAAL,CAAsBC,iBAAtB,CAAwCC,YAAxC,CAAqDC,SAArD,CAA+D,UAACC,IAAD,EAAU;AACrE,oBAAI,CAACb,oBAAL,CAA0Bc,sBAA1B,CAAiDN,IAAjD,CAAsD,MAAI,CAACC,gBAAL,CAAsBC,iBAAtB,CAAwCK,KAA9F;AACH,aAFD;AAGH;AA3BoC;;AAAA;AAAA,S;;;;gBAZ/B;;gBACA;;gBAGC;;gBACD;;;;;;gBASH,uD;AAAS,iBAAC,kBAAD;;;AAFDQ,gCAA0B,6DALtC,gEAAU;AACTH,gBAAQ,EAAE,yBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,4IAFS;;;;AAAA,OAAV,CAKsC,GAA1BE,0BAA0B,CAA1B;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWFM,0BAA0B;AAgDnC,4CACW7B,oBADX,EAEY8B,WAFZ,EAEsC;AAAA;;AAD3B,eAAA9B,oBAAA,GAAAA,oBAAA;AACC,eAAA8B,WAAA,GAAAA,WAAA;AAhDI,eAAAN,KAAA,GAAoC,EAApC;AAIT,eAAAO,kBAAA,GAAqB;AACxB,oBAAQ,CACJ;AAACC,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,QAA3B,CAAd,GAAqD;AAAjF,aADI,CADgB;AAIxB,iCAAqB,CACjB;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,qBAA3B,CAAd,GAAkE;AAA9F,aADiB,CAJG;AAOxB,8BAAkB,CACd;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,QAA3B,CAAd,GAAqD;AAAjF,aADc,CAPM;AAUxB,kCAAsB,CAClB;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,uBAA3B,CAAd,GAAoE;AAAhG,aADkB,CAVE;AAaxB,6BAAiB,CACb;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,kBAA3B,CAAd,GAA+D;AAA3F,aADa,CAbO;AAgBxB,gCAAoB,CAChB;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,uBAA3B,CAAd,GAAoE;AAAhG,aADgB,CAhBI;AAmBxB,0BAAc,CACV;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,mBAA3B,CAAd,GAAgE;AAA5F,aADU,CAnBU;AAsBxB,0BAAc,CACV;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,cAA3B,CAAd,GAA2D;AAAvF,aADU,CAtBU;AAyBxB,wBAAY,CACR;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,YAA3B,CAAd,GAAyD;AAArF,aADQ,CAzBY;AA4BxB,2BAAe,CACX;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,cAA3B,CAAd,GAA2D;AAAvF,aADW,CA5BS;AA+BxB,sBAAU,CACN;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,kBAA3B,CAAd,GAA+D;AAA3F,aADM,CA/Bc;AAkCxB,oBAAQ,CACJ;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,cAA3B,CAAd,GAA2D;AAAvF,aADI,CAlCgB;AAqCxB,iCAAqB,CACjB;AAACF,kBAAI,EAAE,UAAP;AAAmBC,qBAAO,EAAE,cAAc,KAAKH,WAAL,CAAiBI,SAAjB,CAA2B,wBAA3B,CAAd,GAAqE;AAAjG,aADiB;AArCG,WAArB;AA+CN;;AArDkC;AAAA;AAAA,qCAuD3B,CACP;AAxDkC;AAAA;AAAA,4CA0DjB,CACjB,CA3DkC,CA8DnC;;AA9DmC;AAAA;AAAA,4CAgEjBC,KAhEiB,EAgEL;AAC1B,iBAAKnC,oBAAL,CAA0BmB,YAA1B,CAAuCiB,iBAAvC,GAA2DD,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYjC,EAA1B,GAA+B,IAA1F;AACH,WAlEkC,CAmEnC;AAGA;;AAtEmC;AAAA;AAAA,0CAwEnB+B,KAxEmB,EAwEP;AACxB,iBAAKnC,oBAAL,CAA0BmB,YAA1B,CAAuCmB,cAAvC,GAAwDH,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYjC,EAA1B,GAA+B,IAAvF;AACH,WA1EkC,CA2EnC;AAGA;;AA9EmC;AAAA;AAAA,8CAgFf+B,KAhFe,EAgFH;AAC5B,iBAAKnC,oBAAL,CAA0BmB,YAA1B,CAAuCoB,kBAAvC,GAA4DJ,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYjC,EAA1B,GAA+B,IAA3F;AACH,WAlFkC,CAmFnC;AAGA;;AAtFmC;AAAA;AAAA,6CAuFhB+B,KAvFgB,EAuFJ;AAC3B,gBAAIK,eAAe,GAAG,IAAtB;;AACA,gBAAIL,KAAK,CAACE,KAAN,CAAYI,MAAhB,EAAwB;AACpBD,6BAAe,GAAG,EAAlB;;AACA,mBAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACE,KAAN,CAAYI,MAAhC,EAAwCC,CAAC,EAAzC,EAA6C;AACzCF,+BAAe,CAACG,IAAhB,CAAqBR,KAAK,CAACE,KAAN,CAAYK,CAAZ,EAAetC,EAApC;AACH;AACJ;;AACD,iBAAKJ,oBAAL,CAA0BmB,YAA1B,CAAuCyB,iBAAvC,GAA2DJ,eAA3D;AACH;AAhGkC;;AAAA;AAAA,S;;;;gBAR/B;;gBACA;;;;;;gBASH,mD;AAAK,iBAAC,OAAD;;;gBAEL,uD;AAAS,iBAAC,mBAAD;;;AAJDX,gCAA0B,6DALtC,gEAAU;AACPT,gBAAQ,EAAE,yBADH;AAEPC,gBAAQ,EAAR;AAAA;AAAA,4IAFO;;;;AAAA,OAAV,CAKsC,GAA1BQ,0BAA0B,CAA1B;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFgB,0BAA0B;AAMnC,4CACW7C,oBADX,EAEW8C,GAFX,EAGWC,OAHX,EAIW5C,UAJX,EAIwC;AAAA;;AAH7B,eAAAH,oBAAA,GAAAA,oBAAA;AACA,eAAA8C,GAAA,GAAAA,GAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAA5C,UAAA,GAAAA,UAAA;AAEV;;AAZkC;AAAA;AAAA,qCAcxB;AACP,iBAAKH,oBAAL,CAA0BgD,gBAA1B;AACH;AAhBkC;AAAA;AAAA,6CAkBhB;AAClB,iBAAK7C,UAAL,CAAgBI,IAAhB,CAAqBC,IAArB,CAA0B,IAA1B;AACA;AApBkC;AAAA;AAAA,wCAsBd;AACjB,iBAAKyC,OAAL,CAAaC,WAAb,CAAyB,GAAzB;AACH;AAxBkC;;AAAA;AAAA,S;;;;gBAX9B;;gBACD;;gBACA;;gBAEA;;;;;;gBASH,uD;AAAS,iBAAC,yDAAD,EAAa;AAAC,sBAAQ;AAAT,WAAb;;;AAFDL,gCAA0B,6DALtC,gEAAU;AACPzB,gBAAQ,EAAE,yBADH;AAEPC,gBAAQ,EAAR;AAAA;AAAA,4IAFO;;;;AAAA,OAAV,CAKsC,GAA1BwB,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJb,UAAMM,MAAM,GAAW,CACvB;AACI;AACIC,YAAI,EAAE,EADV;AAEIvC,YAAI,EAAE;AACFwC,eAAK,EAAE,uBADL;AAEFC,eAAK,EAAE,CAAC,OAAD;AAFL,SAFV;AAOIC,iBAAS,EAAE;AAPf,OAFmB,EAWnB;AACIH,YAAI,EAAE,MADV;AAEIvC,YAAI,EAAE;AACFwC,eAAK,EAAE,uBADL;AAEFC,eAAK,EAAE,CAAC,OAAD;AAFL,SAFV;AAOIC,iBAAS,EAAE;AAPf,OAXmB,EAoBnB;AACEH,YAAI,EAAE,QADR;AAEEvC,YAAI,EAAE;AACFwC,eAAK,EAAE,uBADL;AAEFC,eAAK,EAAE,CAAC,OAAD;AAFL,SAFR;AAOEC,iBAAS,EAAE;AAPb,OApBmB,EA6BnB;AACIH,YAAI,EAAE,UADV;AAEIvC,YAAI,EAAE;AACFwC,eAAK,EAAE,uBADL;AAEFC,eAAK,EAAE,CAAC,OAAD;AAFL,SAFV;AAOIC,iBAAS,EAAE;AAPf,OA7BmB,CAAvB,C,CAuCA;;UAQaC,8BAA8B;AAAA;AAAA,O;;AAA9BA,oCAA8B,6DAN1C,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CACP,4DADO;AAFD,OAAT,CAM0C,GAA9BH,8BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCjBAI,uBAAuB;AAAA;AAAA,O;;AAAvBA,6BAAuB,6DArBnC,+DAAS;AACNH,eAAO,EAAE,CACT;AACI,oEAFK,EAGL,0DAHK,EAIL,0DAJK,EAKL,kEALK,EAML,6FANK,CAOT;AAPS,SADH;AAUNI,oBAAY,EAAE,CACd;AACI,8EAFU,EAGV,6GAHU,EAIV,mHAJU,EAKV,6HALU,EAMV,8GANU,EAOV,8GAPU;AAVR,OAAT,CAqBmC,GAAvBD,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACtCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCQFE,iBAAiB;AAE5B,mCACS3D,UADT,EACsC;AAAA;;AAA7B,eAAAA,UAAA,GAAAA,UAAA;AACJ;;AAJuB;AAAA;AAAA,qCAMjB,CAEV;AAR2B;AAAA;AAAA,6CAUT;AACjB,iBAAKA,UAAL,CAAgBI,IAAhB,CAAqBC,IAArB,CAA0B,IAA1B;AACD;AAZ2B;;AAAA;AAAA,S;;;;gBAPtB;;;;AAOKsD,uBAAiB,6DAL7B,gEAAU;AACT1C,gBAAQ,EAAE,oBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,8GAFS;;;;AAAA,OAAV,CAK6B,GAAjByC,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOAC,oBAAoB;AAkB7B,sCACWjB,GADX,EAEWkB,KAFX,EAGWC,KAHX,EAIWC,MAJX,EAKYC,UALZ,EAKyC;AAAA;;AAJ9B,eAAArB,GAAA,GAAAA,GAAA;AACA,eAAAkB,KAAA,GAAAA,KAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACC,eAAAC,UAAA,GAAAA,UAAA;AArBL,eAAAC,gBAAA,GAAmB,gBAAnB;AACA,eAAAtD,sBAAA,GAAyB,IAAI,oDAAJ,CAA6B,KAA7B,CAAzB;AAEA,eAAAuD,aAAA,GAAgC,EAAhC;AACA,eAAAlD,YAAA,GAA2C,EAA3C;AACA,eAAAmD,iBAAA,GAAuC,EAAvC;AAEA,eAAAC,WAAA,GAAc,EAAd;AACA,eAAAC,OAAA,GAAU,EAAV;AAEA,eAAAC,IAAA,GAAa,IAAb;AAEA,eAAAC,IAAA,GAAO,CAAP;AAEA,eAAAC,YAAA,GAAeC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAf;AASN,SAzB4B,CA0BjC;;;AA1BiC;AAAA;AAAA,6CA2B+C;AAAA;;AAAA,gBAApDH,IAAoD,uEAAxC,KAAKA,IAAmC;AAAA,gBAA7BF,OAA6B,uEAAd,KAAKA,OAAS;AAExE,iBAAK1B,GAAL,CAASnB,GAAT,CAAa,KAAKyC,gBAAL,GAAwB,QAAxB,GAAmCM,IAAnC,GAA0C,WAA1C,GAAwDF,OAAxD,GAAkE,gBAAlE,GAAqF,KAAKD,WAAvG,EACK3D,SADL,CAEQ,UAACkE,GAAD,EAAc;AACV;AACAF,sBAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyC3B,WAAzC,CAAqD,GAArD;AACA,oBAAI,CAACmB,aAAL,GAAqBS,GAAG,CAACjE,IAAzB;AACA,oBAAI,CAACyD,iBAAL,GAAyBQ,GAAG,CAACC,KAA7B;AACA,oBAAI,CAACN,IAAL,GAAYK,GAAG,CAACL,IAAhB;AACH,aART,EASQ,UAACO,GAAD,EAAc;AACVhE,qBAAO,CAACiE,KAAR,CAAcD,GAAd;AACH,aAXT;AAaH;AA1C4B;AAAA;AAAA,2CA4CL5E,EA5CK,EA4CI;AAAA;;AAC7B,iBAAK0C,GAAL,CAASnB,GAAT,CAAa,KAAKyC,gBAAL,GAAwB,GAAxB,GAA8BhE,EAA9B,GAAmC,OAAhD,EACKQ,SADL,CAEQ,UAACkE,GAAD,EAAc;AACV,oBAAI,CAAC3D,YAAL,GAAoB2D,GAAG,CAACjE,IAAJ,CAASW,KAA7B;AACA,oBAAI,CAAC8C,iBAAL,GAAyBQ,GAAG,CAACC,KAA7B;AACH,aALT,EAMQ,UAACC,GAAD,EAAc;AACVhE,qBAAO,CAACiE,KAAR,CAAcD,GAAd;AACH,aART;AAUH;AAvD4B;AAAA;AAAA,+CAyDD;AAAA;;AACxB,iBAAKlC,GAAL,CAASoC,GAAT,CAAa,KAAKd,gBAAL,GAAwB,GAAxB,GAA8B,KAAKjD,YAAL,CAAkBf,EAA7D,EAAiE;AAC7DoB,mBAAK,EAAE,KAAKL,YADiD;AAE7DgE,oBAAM,EAAE;AAFqD,aAAjE,EAIGvE,SAJH,CAKI,UAACkE,GAAD,EAAc;AACV,oBAAI,CAACb,KAAL,CAAWmB,OAAX,CAAmBN,GAAG,CAAC7C,OAAvB,EAAgC,eAAhC,EAAiD,KAAjD;;AACA,oBAAI,CAACkC,UAAL,CAAgBkB,IAAhB;;AACA,oBAAI,CAACrC,gBAAL,CAAsB,CAAtB;AACH,aATL;AAWH;AArE4B;AAAA;AAAA,+CAuED;AAAA;;AACxB,iBAAKF,GAAL,CAASnB,GAAT,CAAa,KAAKyC,gBAAL,GAAwB,SAArC,EACKxD,SADL,CAEQ,UAACkE,GAAD,EAAc;AACV,oBAAI,CAAC3D,YAAL,GAAkC,EAAlC;AACA,oBAAI,CAACmD,iBAAL,GAAyBQ,GAAG,CAACC,KAA7B;AACH,aALT;AAOH;AA/E4B;AAAA;AAAA,8CAiFF;AAAA;;AACvB,iBAAKjC,GAAL,CAASwC,IAAT,CAAc,KAAKlB,gBAAnB,EAAqC;AACjC5C,mBAAK,EAAE,KAAKL,YADqB;AAEjCgE,oBAAM,EAAE;AAFyB,aAArC,EAIGvE,SAJH,CAKI,UAACkE,GAAD,EAAc;AACV,oBAAI,CAACb,KAAL,CAAWmB,OAAX,CAAmBN,GAAG,CAAC7C,OAAvB,EAAgC,eAAhC,EAAiD,KAAjD;;AACA,oBAAI,CAACkC,UAAL,CAAgBkB,IAAhB;;AACA,oBAAI,CAACrC,gBAAL,CAAsB,CAAtB;AACH,aATL;AAWH;AA7F4B;AAAA;AAAA,6CA+FG5C,EA/FH,EA+FY;;;;;;;;;;AACrB,6BAAM,KAAK4D,KAAL,CAAWuB,YAAX,CAClB,yBADkB,CAAN;;;AAAVC,6B;;2BAGFA,O;;;;;AACA,2BAAK1C,GAAL,WAAgB,KAAKsB,gBAAL,GAAwB,GAAxB,GAA8BhE,EAA9C,EAAkD,EAAlD,EACKQ,SADL,CAEQ,UAACkE,GAAD,EAAc;AACV,8BAAI,CAACb,KAAL,CAAWmB,OAAX,CAAmBN,GAAG,CAAC7C,OAAvB,EAAgC,eAAhC,EAAiD,KAAjD;;AACA,8BAAI,CAACe,gBAAL,CAAsB,CAAtB;AACH,uBALT;;;;;;;;;;;;;;AAUP;AA9G4B;;AAAA;AAAA,S;;;;gBAbzB;;gBAGA;;gBACA;;gBALA;;gBAMA;;;;AAQKe,0BAAoB,6DAHhC,iEAAW;AACR0B,kBAAU,EAAE;AADJ,OAAX,CAGgC,GAApB1B,oBAAoB,CAApB","file":"oper-schedules-oper-schedules-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-schedules'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operSchedulesService.storeOperSchedule()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operSchedulesService.operSchedulesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'OPERATRIVIDAD AJENDAS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-oper-schedules-form #operScheduleForm [model]=\\\"operSchedulesService.operSchedule\\\"></app-oper-schedules-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  OperSchedules duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-schedules'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operSchedulesService.updateOperSchedule()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operSchedulesService.operSchedulesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'OPERATRIVIDAD AJENDAS' | titlecase}}: {{ operSchedulesService.operSchedule?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-oper-schedules-form #operScheduleForm [model]=\\\"operSchedulesService.operSchedule\\\"></app-oper-schedules-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #operSchedulesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- hous_unit_area_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'UNIDADES HABITACIONALES AREA' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"hous_unit_area_id\\\"\\n                          id=\\\"hous_unit_area_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.hous_unit_area\\\"\\n                          [items]=\\\"operSchedulesService.operScheduleLists.HousUnitArea\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('UNIDADES HABITACIONALES AREAS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('UNIDADES HABITACIONALES AREAS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setHousUnitAreaId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.hous_unit_area_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['hous_unit_area_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end hous_unit_area_id -->\\n\\n\\n    <!-- oper_sector_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'SECTOR' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_sector_id\\\"\\n                          id=\\\"oper_sector_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.oper_sector\\\"\\n                          [items]=\\\"operSchedulesService.operScheduleLists.OperSector\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('SECTORES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('SECTORES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperSectorId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_sector_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['oper_sector_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_sector_id -->\\n\\n\\n    <!-- oper_contractor_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'CONTRATISTA' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_contractor_id\\\"\\n                          id=\\\"oper_contractor_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.oper_contractor\\\"\\n                          [items]=\\\"operSchedulesService.operScheduleLists.OperContractor\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CONTRATISTA' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('CONTRATISTA' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperContractorId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_contractor_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['oper_contractor_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_contractor_id -->\\n\\n\\n    <!-- oper_movement_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'MOVIMIENTOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_movement_ids\\\"\\n                          id=\\\"oper_movement_ids-field\\\"\\n                          [(ngModel)]=\\\"model.oper_movements\\\"\\n                          [items]=\\\"operSchedulesService.operScheduleLists.OperMovement\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('MOVIMIENTOS OPERATIVOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('MOVIMIENTOS OPERATIVOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperMovementIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_movement_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['oper_movement_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_movement_ids -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- required_time -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'TIEMPO REQUERIDO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.required_time\\\"\\n                            type=\\\"number\\\"\\n                            name=\\\"required_time\\\"\\n                            id=\\\"required_time-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.required_time\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['required_time']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end required_time -->\\n\\n\\n            <!-- supervisor_email -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'EMAIL DEL SUPERVISOR' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.supervisor_email\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"supervisor_email\\\"\\n                            id=\\\"supervisor_email-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.supervisor_email\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['supervisor_email']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end supervisor_email -->\\n\\n\\n            <!-- area_phone -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'TELÉFONO DEL AREA' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.area_phone\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"area_phone\\\"\\n                            id=\\\"area_phone-field\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.area_phone\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['area_phone']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end area_phone -->\\n\\n\\n            <!-- time_start -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'HORA INICIAL' | titlecase }}</ion-label>\\n                <ion-datetime name=\\\"time_start\\\"\\n                              id=\\\"time_start-field\\\"\\n                              [doneText]=\\\"'Seleccionar'\\\"\\n                              [cancelText]=\\\"'Cancelar'\\\"\\n                              [(ngModel)]=\\\"model.time_start\\\"\\n                              displayFormat=\\\"HH:mm\\\"></ion-datetime>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.time_start\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['time_start']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end time_start -->\\n\\n\\n            <!-- time_end -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'HORA FINAL' | titlecase }}</ion-label>\\n                <ion-datetime name=\\\"time_end\\\"\\n                              id=\\\"time_end-field\\\"\\n                              [doneText]=\\\"'Seleccionar'\\\"\\n                              [cancelText]=\\\"'Cancelar'\\\"\\n                              [(ngModel)]=\\\"model.time_end\\\"\\n                              displayFormat=\\\"HH:mm\\\"></ion-datetime>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.time_end\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['time_end']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end time_end -->\\n\\n\\n            <!-- periodicity -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'PERIODICIDAD' | titlecase }}</ion-label>\\n                <ion-select [(ngModel)]=\\\"model.periodicity\\\"\\n                            [required]=\\\"true\\\"\\n                            name=\\\"periodicity\\\"\\n                            id=\\\"periodicity-field\\\"\\n                            okText=\\\"Seleccionar\\\"\\n                            cancelText=\\\"Cancelar\\\">\\n                    <ion-select-option value=\\\"\\\">{{ 'Ninguno' | titlecase }}</ion-select-option>\\n                    <ion-select-option value=\\\"daily\\\">{{ 'Diario' | titlecase }}</ion-select-option>\\n                    <ion-select-option value=\\\"weekly\\\">{{ 'Semanal' | titlecase }}</ion-select-option>\\n                    <ion-select-option value=\\\"monthly\\\">{{ 'Mensual' | titlecase }}</ion-select-option>\\n                    <ion-select-option value=\\\"bimonthly\\\">{{ 'Bimensual' | titlecase }}</ion-select-option>\\n                    <ion-select-option value=\\\"quarterly\\\">{{ 'Trimestral' | titlecase }}</ion-select-option>\\n                    <ion-select-option value=\\\"biannual\\\">{{ 'Semestral' | titlecase }}</ion-select-option>\\n                    <ion-select-option value=\\\"annual\\\">{{ 'Anual' | titlecase }}</ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validationMessages.periodicity\\\">\\n                <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['periodicity']?.hasError(validation.type)\\\">\\n                    {{ validation.message }}\\n                </div>\\n            </ng-container>\\n        </div>\\n        <!-- end periodicity -->\\n\\n\\n            <!-- repass -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'REQUIERE REPASAR' | titlecase }}</ion-label>\\n                <ion-toggle name=\\\"repass\\\"\\n                            id=\\\"repass-field\\\"\\n                            slot=\\\"end\\\"\\n                            [(ngModel)]=\\\"model.repass\\\"></ion-toggle>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.repass\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['repass']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end repass -->\\n\\n\\n            <!-- next -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'SIGUIENTE EN' | titlecase }}</ion-label>\\n                <ion-datetime name=\\\"next\\\"\\n                              id=\\\"next-field\\\"\\n                              [doneText]=\\\"'Seleccionar'\\\"\\n                              [cancelText]=\\\"'Cancelar'\\\"\\n                              [(ngModel)]=\\\"model.next\\\"\\n                              displayFormat=\\\"DD/MM/YYYY HH:mm\\\"></ion-datetime>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.next\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['next']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end next -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'OPERATRIVIDAD AJENDAS' | titlecase}}\\\"\\n                 primaryLink=\\\"oper-schedules/create\\\"\\n                 primaryText=\\\"Crear {{'OPERATRIVIDAD AJENDAS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('OPERATRIVIDAD AJENDAS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.operSchedulesService.searchValue = ''; operSchedulesService.getOperSchedules()\\\"\\n                       (keyup.enter)=\\\"operSchedulesService.getOperSchedules()\\\"\\n                       [(ngModel)]=\\\"operSchedulesService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operSchedulesService.operSchedules?.length\\\">\\n        <ion-card *ngFor=\\\"let operSchedule of operSchedulesService.operSchedules; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TIEMPO REQUERIDO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.required_time }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'EMAIL DEL SUPOERVISOR' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.supervisor_email }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'TELÉFONO DEL AREA' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.area_phone }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'HORA INICIAL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.time_start | dateFormat:'HH:mm' }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'HORA FINAL' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.time_end | dateFormat:'HH:mm' }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PERIODICIDAD' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.periodicity | status }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'REQUIERE REPASAR' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.repass  ? 'Si' : 'No' }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'SIGUIENTE EN' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.next | dateFormat:'DD/MM/YYYY HH:mm' }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'UNIDADES HABITACIONALES AREAS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/hous-unit-areas/{{ operSchedule?.hous_unit_area?.id }}/edit\\\">{{ operSchedule?.hous_unit_area?.name }}</a></div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'OPERATIVIDAD SECTORES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/oper-sectors/{{ operSchedule?.oper_sector?.id }}/edit\\\">{{ operSchedule?.oper_sector?.name }}</a></div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CONTRATISTAS OPERATIVOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/oper-contractors/{{ operSchedule?.oper_contractor?.id }}/edit\\\">{{ operSchedule?.oper_contractor?.name }}</a></div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'MOVIMIENTOS OPERATIVOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"operSchedule?.oper_movements?.length\\\">\\n                                <ng-container *ngFor=\\\"let operMovement of operSchedule?.oper_movements; let last = last\\\">\\n                                    <a routerLink=\\\"/oper-movements/{{ operMovement?.id }}/edit\\\">{{ operMovement?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/oper-schedules/' + operSchedule?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"operSchedulesService.deleteOperSchedule(operSchedule?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operSchedulesService.operSchedules?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'OPERATRIVIDAD AJENDAS' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/oper-schedules/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'OPERATRIVIDAD AJENDAS' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"operSchedulesService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"operSchedulesService.getOperSchedules(operSchedulesService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"operSchedulesService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{operSchedulesService.meta.current_page}}\\n                /{{operSchedulesService.meta.last_page}} {{operSchedulesService.meta.from}}-{{operSchedulesService.meta.to}}\\n                /{{operSchedulesService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"operSchedulesService.getOperSchedules(operSchedulesService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"operSchedulesService.meta.current_page == operSchedulesService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"OPERATRIVIDAD AJENDAS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-schedules/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'OPERATRIVIDAD AJENDAS'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-schedules/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'OPERATRIVIDAD AJENDAS' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWNyZWF0ZS9vcGVyLXNjaGVkdWxlcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {OperSchedulesService} from \"../oper-schedules.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperSchedule} from \"../oper-schedule\";\nimport {OperSchedulesFormComponent} from \"../oper-schedules-form/oper-schedules-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-oper-schedules-create',\n    templateUrl: './oper-schedules-create.component.html',\n    styleUrls: ['./oper-schedules-create.component.scss']\n})\nexport class OperSchedulesCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operScheduleForm') operScheduleForm: OperSchedulesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public operSchedulesService: OperSchedulesService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ionViewWillEnter() {\n       this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.operScheduleForm.operSchedulesForm.valueChanges.subscribe((data) => {\n            this.operSchedulesService.operSchedulesFormValid.next(this.operScheduleForm.operSchedulesForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.operSchedulesService.createOperSchedule();\n        this.operSchedulesService.operSchedule = <OperSchedule>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWR1cGxpY2F0ZS9vcGVyLXNjaGVkdWxlcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-oper-schedules-duplicate',\n  templateUrl: './oper-schedules-duplicate.component.html',\n  styleUrls: ['./oper-schedules-duplicate.component.scss'],\n})\nexport class OperSchedulesDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWVkaXQvb3Blci1zY2hlZHVsZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {OperSchedulesService} from \"../oper-schedules.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperSchedule} from \"../oper-schedule\";\nimport {OperSchedulesFormComponent} from \"../oper-schedules-form/oper-schedules-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-oper-schedules-edit',\n  templateUrl: './oper-schedules-edit.component.html',\n  styleUrls: ['./oper-schedules-edit.component.scss']\n})\nexport class OperSchedulesEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operScheduleForm') operScheduleForm: OperSchedulesFormComponent;\n\n    public id: any = null;\n    public model: OperSchedule = null;\n\n  constructor(\n      public operSchedulesService: OperSchedulesService,\n      public route: ActivatedRoute,\n      public platform: Platform,\n      public splitPanel: SplitPanelService,\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.operSchedulesService.editOperSchedule(this.id);\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n  ngAfterViewInit() {\n      this.operScheduleForm.operSchedulesForm.valueChanges.subscribe((data) => {\n          this.operSchedulesService.operSchedulesFormValid.next(this.operScheduleForm.operSchedulesForm.valid);\n      });\n  }\n\n}\n","export default \"/* generated section */\\n/* end generated section */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3Blci1zY2hlZHVsZXMvb3Blci1zY2hlZHVsZXMtZm9ybS9vcGVyLXNjaGVkdWxlcy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFBO0FBRUEsMEJBQUEiLCJmaWxlIjoic3JjL2FwcC9vcGVyLXNjaGVkdWxlcy9vcGVyLXNjaGVkdWxlcy1mb3JtL29wZXItc2NoZWR1bGVzLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnZW5lcmF0ZWQgc2VjdGlvbiAqL1xuXG4vKiBlbmQgZ2VuZXJhdGVkIHNlY3Rpb24gKi9cbiJdfQ== */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {OperSchedule} from \"../oper-schedule\";\nimport {FormGroup} from \"@angular/forms\";\nimport {OperSchedulesService} from \"../oper-schedules.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-oper-schedules-form',\n    templateUrl: './oper-schedules-form.component.html',\n    styleUrls: ['./oper-schedules-form.component.scss']\n})\nexport class OperSchedulesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: OperSchedule = <OperSchedule>{};\n\n    @ViewChild('operSchedulesForm') operSchedulesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'hous_unit_area_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('housUnitArea - NAME') + ' es obligatorio.'},\n        ],\n        'oper_sector_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('SECTOR') + ' es obligatorio.'},\n        ],\n        'oper_contractor_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('operContractor - NAME') + ' es obligatorio.'},\n        ],\n        'required_time': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TIEMPO REQUERIDO') + ' es obligatorio.'},\n        ],\n        'supervisor_email': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('EMAIL DEL SUPOERVISOR') + ' es obligatorio.'},\n        ],\n        'area_phone': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('TELÉFONO DEL AREA') + ' es obligatorio.'},\n        ],\n        'time_start': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('HORA INICIAL') + ' es obligatorio.'},\n        ],\n        'time_end': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('HORA FINAL') + ' es obligatorio.'},\n        ],\n        'periodicity': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERIODICIDAD') + ' es obligatorio.'},\n        ],\n        'repass': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('REQUIERE REPASAR') + ' es obligatorio.'},\n        ],\n        'next': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('SIGUIENTE EN') + ' es obligatorio.'},\n        ],\n        'oper_movement_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('MOVIMIENTOS OPERATIVOS') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public operSchedulesService: OperSchedulesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setHousUnitAreaId\n\n    setHousUnitAreaId(event: any) {\n        this.operSchedulesService.operSchedule.hous_unit_area_id = event.value ? event.value.id : null;\n    }\n    // end setHousUnitAreaId\n\n\n    // set setOperSectorId\n\n    setOperSectorId(event: any) {\n        this.operSchedulesService.operSchedule.oper_sector_id = event.value ? event.value.id : null;\n    }\n    // end setOperSectorId\n\n\n    // set setOperContractorId\n\n    setOperContractorId(event: any) {\n        this.operSchedulesService.operSchedule.oper_contractor_id = event.value ? event.value.id : null;\n    }\n    // end setOperContractorId\n\n\n    // set setOperMovementIds\n    setOperMovementIds(event: any) {\n        let operMovementIds = null;\n        if (event.value.length) {\n            operMovementIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                operMovementIds.push(event.value[i].id);\n            }\n        }\n        this.operSchedulesService.operSchedule.oper_movement_ids = operMovementIds;\n    }\n    // end setOperMovementIds\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWxpc3Qvb3Blci1zY2hlZHVsZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { OperSchedulesService} from \"../oper-schedules.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-oper-schedules-list',\n    templateUrl: './oper-schedules-list.component.html',\n    styleUrls: ['./oper-schedules-list.component.scss'],\n})\nexport class OperSchedulesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public operSchedulesService: OperSchedulesService,\n        public api: ApiService,\n        public loading: LoadingService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.operSchedulesService.getOperSchedules();\n    }\n\n    ionViewWillEnter() {\n     this.splitPanel.show.next(true);\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperSchedulesPage } from './oper-schedules.page';\nimport {OperSchedulesEditComponent} from \"./oper-schedules-edit/oper-schedules-edit.component\";\nimport {OperSchedulesCreateComponent} from \"./oper-schedules-create/oper-schedules-create.component\";\nimport {OperSchedulesListComponent} from \"./oper-schedules-list/oper-schedules-list.component\";\n\nconst routes: Routes = [\n// generated section\n    {\n        path: '',\n        data: {\n            title: 'OPERATRIVIDAD AJENDAS',\n            roles: ['admin'],\n            // permissions: []\n        },\n        component: OperSchedulesPage\n    },\n    {\n        path: 'list',\n        data: {\n            title: 'OPERATRIVIDAD AJENDAS',\n            roles: ['admin'],\n            // permissions: []\n        },\n        component: OperSchedulesListComponent\n    },\n    {\n      path: 'create',\n      data: {\n          title: 'OPERATRIVIDAD AJENDAS',\n          roles: ['admin'],\n          // permissions: []\n      },\n      component: OperSchedulesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        data: {\n            title: 'OPERATRIVIDAD AJENDAS',\n            roles: ['admin'],\n            // permissions: []\n        },\n        component: OperSchedulesEditComponent\n    },\n];\n// end generated section\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class OperSchedulesPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {OperSchedulesPageRoutingModule} from './oper-schedules-routing.module';\n\nimport { OperSchedulesPage} from './oper-schedules.page';\nimport { OperSchedulesListComponent} from \"./oper-schedules-list/oper-schedules-list.component\";\nimport { OperSchedulesCreateComponent} from \"./oper-schedules-create/oper-schedules-create.component\";\nimport { OperSchedulesDuplicateComponent} from \"./oper-schedules-duplicate/oper-schedules-duplicate.component\";\nimport { OperSchedulesEditComponent} from \"./oper-schedules-edit/oper-schedules-edit.component\";\nimport { OperSchedulesFormComponent} from \"./oper-schedules-form/oper-schedules-form.component\";\n\n@NgModule({\n    imports: [\n    // imports generated section\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        OperSchedulesPageRoutingModule\n    // end imports generated section\n    ],\n    declarations: [\n    // declarations generated section\n        OperSchedulesPage,\n        OperSchedulesListComponent,\n        OperSchedulesCreateComponent,\n        OperSchedulesDuplicateComponent,\n        OperSchedulesEditComponent,\n        OperSchedulesFormComponent,\n    // end declarations generated section\n    ]\n})\nexport class OperSchedulesPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-oper-schedules',\n  templateUrl: './oper-schedules.page.html',\n  styleUrls: ['./oper-schedules.page.scss'],\n})\nexport class OperSchedulesPage implements OnInit {\n\n  constructor(\n    public splitPanel: SplitPanelService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { OperSchedule, OperScheduleLists } from \"./oper-schedule\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OperSchedulesService {\n\n    public operSchedulesUrl = 'oper-schedules';\n    public operSchedulesFormValid = new BehaviorSubject<boolean>(false);\n\n    public operSchedules: OperSchedule[] = [];\n    public operSchedule: OperSchedule = <OperSchedule>{};\n    public operScheduleLists: OperScheduleLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n// generated section\n    public getOperSchedules(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.operSchedulesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.operSchedules = res.data;\n                    this.operScheduleLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editOperSchedule(id: any) {\n        this.api.get(this.operSchedulesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.operSchedule = res.data.model;\n                    this.operScheduleLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateOperSchedule() {\n        this.api.put(this.operSchedulesUrl + '/' + this.operSchedule.id, {\n            model: this.operSchedule,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperSchedules(1);\n            }\n        );\n    }\n\n    public createOperSchedule() {\n        this.api.get(this.operSchedulesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.operSchedule = <OperSchedule>{};\n                    this.operScheduleLists = res.lists\n                }\n            );\n    }\n\n    public storeOperSchedule() {\n        this.api.post(this.operSchedulesUrl, {\n            model: this.operSchedule,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperSchedules(1);\n            }\n        );\n    }\n\n    public async deleteOperSchedule(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.operSchedulesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getOperSchedules(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n// end generated section\n\n}\n"]}