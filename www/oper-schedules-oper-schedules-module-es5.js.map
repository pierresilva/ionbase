{"version":3,"sources":["webpack:///src/app/oper-schedules/oper-schedules-create/oper-schedules-create.component.html","webpack:///src/app/oper-schedules/oper-schedules-duplicate/oper-schedules-duplicate.component.html","webpack:///src/app/oper-schedules/oper-schedules-edit/oper-schedules-edit.component.html","webpack:///src/app/oper-schedules/oper-schedules-form/oper-schedules-form.component.html","webpack:///src/app/oper-schedules/oper-schedules-list/oper-schedules-list.component.html","webpack:///src/app/oper-schedules/oper-schedules.page.html","webpack:///src/app/oper-schedules/oper-schedules-create/oper-schedules-create.component.scss","webpack:///src/app/oper-schedules/oper-schedules-create/oper-schedules-create.component.ts","webpack:///src/app/oper-schedules/oper-schedules-duplicate/oper-schedules-duplicate.component.scss","webpack:///src/app/oper-schedules/oper-schedules-duplicate/oper-schedules-duplicate.component.ts","webpack:///src/app/oper-schedules/oper-schedules-edit/oper-schedules-edit.component.scss","webpack:///src/app/oper-schedules/oper-schedules-edit/oper-schedules-edit.component.ts","webpack:///src/app/oper-schedules/oper-schedules-form/oper-schedules-form.component.scss","webpack:///src/app/oper-schedules/oper-schedules-form/oper-schedules-form.component.ts","webpack:///src/app/oper-schedules/oper-schedules-list/oper-schedules-list.component.scss","webpack:///src/app/oper-schedules/oper-schedules-list/oper-schedules-list.component.ts","webpack:///src/app/oper-schedules/oper-schedules-routing.module.ts","webpack:///src/app/oper-schedules/oper-schedules.module.ts","webpack:///src/app/oper-schedules/oper-schedules.page.scss","webpack:///src/app/oper-schedules/oper-schedules.page.ts","webpack:///src/app/oper-schedules/oper-schedules.service.ts"],"names":["OperSchedulesCreateComponent","operSchedulesService","route","platform","id","formValid","clearPosts","operScheduleForm","operSchedulesForm","valueChanges","subscribe","data","operSchedulesFormValid","next","valid","console","log","createOperSchedule","operSchedule","selector","template","OperSchedulesDuplicateComponent","OperSchedulesEditComponent","model","snapshot","paramMap","get","editOperSchedule","OperSchedulesFormComponent","toTitlecase","validationMessages","type","message","transform","event","hous_unit_area_id","value","oper_sector_id","OperSchedulesListComponent","api","loading","getOperSchedules","content","scrollToTop","routes","path","component","OperSchedulesPageRoutingModule","imports","forChild","exports","OperSchedulesPageModule","declarations","OperSchedulesPage","OperSchedulesService","alert","toast","router","navigation","operSchedulesUrl","operSchedules","operScheduleLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"oper-schedules-oper-schedules-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-schedules'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operSchedulesService.storeOperSchedule()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operSchedulesService.operSchedulesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'AGENDA DE OPERACIONES' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-oper-schedules-form #operScheduleForm [model]=\\\"operSchedulesService.operSchedule\\\"></app-oper-schedules-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  OperSchedules duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/oper-schedules'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"operSchedulesService.updateOperSchedule()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!operSchedulesService.operSchedulesFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'AGENDA DE OPERACIONES' | titlecase}}: {{ operSchedulesService.operSchedule?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-oper-schedules-form #operScheduleForm [model]=\\\"operSchedulesService.operSchedule\\\"></app-oper-schedules-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #operSchedulesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- hous_unit_area_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'AREASDEUNIDADESHABITACIONALE' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"hous_unit_area_id\\\"\\n                          id=\\\"hous_unit_area_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.hous_unit_area\\\"\\n                          [items]=\\\"operSchedulesService.operScheduleLists.HousUnitArea\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('AREAS DE UNIDADES HABITACIONALES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('AREAS DE UNIDADES HABITACIONALES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setHousUnitAreaId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.hous_unit_area_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['hous_unit_area_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end hous_unit_area_id -->\\n\\n\\n    <!-- oper_sector_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'SECTORESOPERATIVO' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"oper_sector_id\\\"\\n                          id=\\\"oper_sector_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.oper_sector\\\"\\n                          [items]=\\\"operSchedulesService.operScheduleLists.OperSector\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('SECTORES OPERATIVOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('SECTORES OPERATIVOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setOperSectorId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.oper_sector_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['oper_sector_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end oper_sector_id -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"operSchedulesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'AGENDA DE OPERACIONES' | titlecase}}\\\"\\n                 primaryLink=\\\"oper-schedules/create\\\"\\n                 primaryText=\\\"Crear {{'AGENDA DE OPERACIONES' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('AGENDA DE OPERACIONES' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.operSchedulesService.searchValue = ''; operSchedulesService.getOperSchedules()\\\"\\n                       (keyup.enter)=\\\"operSchedulesService.getOperSchedules()\\\"\\n                       [(ngModel)]=\\\"operSchedulesService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && operSchedulesService.operSchedules?.length\\\">\\n        <ion-card *ngFor=\\\"let operSchedule of operSchedulesService.operSchedules; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ operSchedule?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'AREAS DE UNIDADES HABITACIONALES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/hous-unit-areas/{{ operSchedule?.hous_unit_area?.id }}/edit\\\">{{ operSchedule?.hous_unit_area?.name }}</a></div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'SECTORES OPERATIVOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/oper-sectors/{{ operSchedule?.oper_sector?.id }}/edit\\\">{{ operSchedule?.oper_sector?.name }}</a></div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/oper-schedules/' + operSchedule?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"operSchedulesService.deleteOperSchedule(operSchedule?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !operSchedulesService.operSchedules?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'AGENDA DE OPERACIONES' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/oper-schedules/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'AGENDA DE OPERACIONES' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"operSchedulesService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"operSchedulesService.getOperSchedules(operSchedulesService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"operSchedulesService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{operSchedulesService.meta.current_page}}\\n                /{{operSchedulesService.meta.last_page}} {{operSchedulesService.meta.from}}-{{operSchedulesService.meta.to}}\\n                /{{operSchedulesService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"operSchedulesService.getOperSchedules(operSchedulesService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"operSchedulesService.meta.current_page == operSchedulesService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"AGENDA DE OPERACIONES\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-schedules/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'AGENDA DE OPERACIONES'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/oper-schedules/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'AGENDA DE OPERACIONES' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWNyZWF0ZS9vcGVyLXNjaGVkdWxlcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {OperSchedulesService} from \"../oper-schedules.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperSchedule} from \"../oper-schedule\";\nimport {OperSchedulesFormComponent} from \"../oper-schedules-form/oper-schedules-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n    selector: 'app-oper-schedules-create',\n    templateUrl: './oper-schedules-create.component.html',\n    styleUrls: ['./oper-schedules-create.component.scss']\n})\nexport class OperSchedulesCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operScheduleForm') operScheduleForm: OperSchedulesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public operSchedulesService: OperSchedulesService,\n        public route: ActivatedRoute,\n        public platform: Platform\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ngAfterViewInit() {\n        this.operScheduleForm.operSchedulesForm.valueChanges.subscribe((data) => {\n            this.operSchedulesService.operSchedulesFormValid.next(this.operScheduleForm.operSchedulesForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.operSchedulesService.createOperSchedule();\n        this.operSchedulesService.operSchedule = <OperSchedule>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWR1cGxpY2F0ZS9vcGVyLXNjaGVkdWxlcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-oper-schedules-duplicate',\n  templateUrl: './oper-schedules-duplicate.component.html',\n  styleUrls: ['./oper-schedules-duplicate.component.scss'],\n})\nexport class OperSchedulesDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWVkaXQvb3Blci1zY2hlZHVsZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {OperSchedulesService} from \"../oper-schedules.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OperSchedule} from \"../oper-schedule\";\nimport {OperSchedulesFormComponent} from \"../oper-schedules-form/oper-schedules-form.component\";\nimport { Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-oper-schedules-edit',\n  templateUrl: './oper-schedules-edit.component.html',\n  styleUrls: ['./oper-schedules-edit.component.scss']\n})\nexport class OperSchedulesEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('operScheduleForm') operScheduleForm: OperSchedulesFormComponent;\n\n    public id: any = null;\n    public model: OperSchedule = null;\n\n  constructor(\n      public operSchedulesService: OperSchedulesService,\n      public route: ActivatedRoute,\n      public platform: Platform\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.operSchedulesService.editOperSchedule(this.id);\n  }\n\n  ngAfterViewInit() {\n      this.operScheduleForm.operSchedulesForm.valueChanges.subscribe((data) => {\n          this.operSchedulesService.operSchedulesFormValid.next(this.operScheduleForm.operSchedulesForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWZvcm0vb3Blci1zY2hlZHVsZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {OperSchedule} from \"../oper-schedule\";\nimport {FormGroup} from \"@angular/forms\";\nimport {OperSchedulesService} from \"../oper-schedules.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-oper-schedules-form',\n    templateUrl: './oper-schedules-form.component.html',\n    styleUrls: ['./oper-schedules-form.component.scss']\n})\nexport class OperSchedulesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: OperSchedule = <OperSchedule>{};\n\n    @ViewChild('operSchedulesForm') operSchedulesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'hous_unit_area_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('housUnitArea - NAME') + ' es obligatorio.'},\n        ],\n        'oper_sector_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('SECTOR') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public operSchedulesService: OperSchedulesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setHousUnitAreaId\n\n    setHousUnitAreaId(event: any) {\n        this.operSchedulesService.operSchedule.hous_unit_area_id = event.value ? event.value.id : null;\n    }\n    // end setHousUnitAreaId\n\n\n    // set setOperSectorId\n\n    setOperSectorId(event: any) {\n        this.operSchedulesService.operSchedule.oper_sector_id = event.value ? event.value.id : null;\n    }\n    // end setOperSectorId\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLWxpc3Qvb3Blci1zY2hlZHVsZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { OperSchedulesService} from \"../oper-schedules.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\n\n@Component({\n    selector: 'app-oper-schedules-list',\n    templateUrl: './oper-schedules-list.component.html',\n    styleUrls: ['./oper-schedules-list.component.scss'],\n})\nexport class OperSchedulesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public operSchedulesService: OperSchedulesService,\n        public api: ApiService,\n        public loading: LoadingService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.operSchedulesService.getOperSchedules();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperSchedulesPage } from './oper-schedules.page';\nimport {OperSchedulesEditComponent} from \"./oper-schedules-edit/oper-schedules-edit.component\";\nimport {OperSchedulesCreateComponent} from \"./oper-schedules-create/oper-schedules-create.component\";\nimport {OperSchedulesListComponent} from \"./oper-schedules-list/oper-schedules-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: OperSchedulesPage\n    },\n    {\n        path: 'list',\n        component: OperSchedulesListComponent\n    },\n    {\n      path: 'create',\n      component: OperSchedulesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: OperSchedulesEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class OperSchedulesPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {OperSchedulesPageRoutingModule} from './oper-schedules-routing.module';\n\nimport { OperSchedulesPage} from './oper-schedules.page';\nimport { OperSchedulesListComponent} from \"./oper-schedules-list/oper-schedules-list.component\";\nimport { OperSchedulesCreateComponent} from \"./oper-schedules-create/oper-schedules-create.component\";\nimport { OperSchedulesDuplicateComponent} from \"./oper-schedules-duplicate/oper-schedules-duplicate.component\";\nimport { OperSchedulesEditComponent} from \"./oper-schedules-edit/oper-schedules-edit.component\";\nimport { OperSchedulesFormComponent} from \"./oper-schedules-form/oper-schedules-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        OperSchedulesPageRoutingModule\n    ],\n    declarations: [\n        OperSchedulesPage,\n        OperSchedulesListComponent,\n        OperSchedulesCreateComponent,\n        OperSchedulesDuplicateComponent,\n        OperSchedulesEditComponent,\n        OperSchedulesFormComponent,\n    ]\n})\nexport class OperSchedulesPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wZXItc2NoZWR1bGVzL29wZXItc2NoZWR1bGVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-oper-schedules',\n  templateUrl: './oper-schedules.page.html',\n  styleUrls: ['./oper-schedules.page.scss'],\n})\nexport class OperSchedulesPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { OperSchedule, OperScheduleLists } from \"./oper-schedule\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OperSchedulesService {\n\n    public operSchedulesUrl = 'oper-schedules';\n    public operSchedulesFormValid = new BehaviorSubject<boolean>(false);\n\n    public operSchedules: OperSchedule[] = [];\n    public operSchedule: OperSchedule = <OperSchedule>{};\n    public operScheduleLists: OperScheduleLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getOperSchedules(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.operSchedulesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.operSchedules = res.data;\n                    this.operScheduleLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editOperSchedule(id: any) {\n        this.api.get(this.operSchedulesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.operSchedule = res.data.model;\n                    this.operScheduleLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateOperSchedule() {\n        this.api.put(this.operSchedulesUrl + '/' + this.operSchedule.id, {\n            model: this.operSchedule,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperSchedules(1);\n            }\n        );\n    }\n\n    public createOperSchedule() {\n        this.api.get(this.operSchedulesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.operSchedule = <OperSchedule>{};\n                    this.operScheduleLists = res.lists\n                }\n            );\n    }\n\n    public storeOperSchedule() {\n        this.api.post(this.operSchedulesUrl, {\n            model: this.operSchedule,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getOperSchedules(1);\n            }\n        );\n    }\n\n    public async deleteOperSchedule(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.operSchedulesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getOperSchedules(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"]}