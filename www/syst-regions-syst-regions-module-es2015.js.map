{"version":3,"sources":["./src/app/syst-regions/syst-regions-create/syst-regions-create.component.html","./src/app/syst-regions/syst-regions-duplicate/syst-regions-duplicate.component.html","./src/app/syst-regions/syst-regions-edit/syst-regions-edit.component.html","./src/app/syst-regions/syst-regions-form/syst-regions-form.component.html","./src/app/syst-regions/syst-regions-list/syst-regions-list.component.html","./src/app/syst-regions/syst-regions.page.html","./src/app/syst-regions/syst-regions-create/syst-regions-create.component.scss","./src/app/syst-regions/syst-regions-create/syst-regions-create.component.ts","./src/app/syst-regions/syst-regions-duplicate/syst-regions-duplicate.component.scss","./src/app/syst-regions/syst-regions-duplicate/syst-regions-duplicate.component.ts","./src/app/syst-regions/syst-regions-edit/syst-regions-edit.component.scss","./src/app/syst-regions/syst-regions-edit/syst-regions-edit.component.ts","./src/app/syst-regions/syst-regions-form/syst-regions-form.component.scss","./src/app/syst-regions/syst-regions-form/syst-regions-form.component.ts","./src/app/syst-regions/syst-regions-list/syst-regions-list.component.scss","./src/app/syst-regions/syst-regions-list/syst-regions-list.component.ts","./src/app/syst-regions/syst-regions-routing.module.ts","./src/app/syst-regions/syst-regions.module.ts","./src/app/syst-regions/syst-regions.page.scss","./src/app/syst-regions/syst-regions.page.ts","./src/app/syst-regions/syst-regions.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,2gCAA48B,6BAA6B,kPAAkP,E;;;;;;;;;;;;ACA1uC;AAAe,4GAA6C,E;;;;;;;;;;;;ACA5D;AAAe,6gCAA88B,6BAA6B,IAAI,uCAAuC,sPAAsP,E;;;;;;;;;;;;ACA3xC;AAAe,uOAAwK,sCAAsC,s1CAAs1C,sBAAsB,8LAA8L,0BAA0B,0yCAA0yC,sBAAsB,6LAA6L,uBAAuB,szCAAszC,sBAAsB,4MAA4M,sBAAsB,2mBAA2mB,sBAAsB,iOAAiO,wBAAwB,2mBAA2mB,sBAAsB,gIAAgI,E;;;;;;;;;;;;ACA99M;AAAe,2FAA4B,6BAA6B,iGAAiG,6BAA6B,gYAAgY,+XAA+X,qKAAqK,sBAAsB,qEAAqE,oBAAoB,+JAA+J,wBAAwB,qEAAqE,oBAAoB,+JAA+J,sCAAsC,iQAAiQ,0FAA0F,mBAAmB,UAAU,qBAAqB,0TAA0T,0BAA0B,0PAA0P,wFAAwF,gBAAgB,UAAU,kBAAkB,0TAA0T,wBAAwB,qGAAqG,gCAAgC,UAAU,kCAAkC,owCAAowC,6BAA6B,6JAA6J,6BAA6B,qoBAAqoB,8GAA8G,sCAAsC,qBAAqB,mCAAmC,GAAG,8BAA8B,GAAG,4BAA4B,qBAAqB,+BAA+B,ubAAub,E;;;;;;;;;;;;ACAvmM;AAAe,oVAAqR,aAAa,eAAe,qBAAqB,yBAAyB,mSAAmS,gCAAgC,kUAAkU,aAAa,eAAe,qBAAqB,yBAAyB,iSAAiS,+BAA+B,wLAAwL,E;;;;;;;;;;;;ACArjD;AAAe,6GAA8C,mMAAmM,E;;;;;;;;;;;;;;;;;;;;;ACAtL;AACf;AACZ;AAGL;AACmC;IAOhE,0BAA0B,SAA1B,0BAA0B;IAOnC,YACW,kBAAsC,EACtC,KAAqB,EACrB,QAAkB,EAClB,UAA6B;QAH7B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAmB;QAPxC,OAAE,GAAQ,IAAI,CAAC;QACR,cAAS,GAAG,KAAK,CAAC;IASzB,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,gBAAgB;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,eAAe;QACX,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAChE,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACN,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,UAAU,GAAe,EAAE,CAAC;IACxD,CAAC;CAEJ;;YAhDO,wEAAkB;YAClB,8DAAc;YAGb,uDAAQ;YACT,sFAAiB;;;6BASpB,uDAAS,SAAC,gBAAgB;;AAFlB,0BAA0B;IALtC,+DAAS,CAAC;QACP,QAAQ,EAAE,yBAAyB;QACnC,kRAAmD;;KAEtD,CAAC;GACW,0BAA0B,CAoCtC;AApCsC;;;;;;;;;;;;;ACbvC;AAAe,6GAA8C,2MAA2M,E;;;;;;;;;;;;;;;;;ACAtN;IAOrC,6BAA6B,SAA7B,6BAA6B;IAExC,gBAAgB,CAAC;IAEjB,QAAQ,KAAI,CAAC;CAEd;;AANY,6BAA6B;IALzC,+DAAS,CAAC;QACT,QAAQ,EAAE,4BAA4B;QACtC,2RAAsD;;KAEvD,CAAC;GACW,6BAA6B,CAMzC;AANyC;;;;;;;;;;;;;ACP1C;AAAe,6GAA8C,2LAA2L,E;;;;;;;;;;;;;;;;;;;;;ACA9K;AACf;AACZ;AAGL;AACmC;IAOhE,wBAAwB,SAAxB,wBAAwB;IAOnC,YACW,kBAAsC,EACtC,KAAqB,EACrB,QAAkB,EAClB,UAA6B;QAH7B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAmB;QAP/B,OAAE,GAAQ,IAAI,CAAC;QACf,UAAK,GAAe,IAAI,CAAC;IAO9B,CAAC;IAEL,QAAQ;QACJ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,eAAe;QACX,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAChE,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC;IACP,CAAC;CAEF;;YAzCO,wEAAkB;YAClB,8DAAc;YAGb,uDAAQ;YACT,sFAAiB;;;6BASpB,uDAAS,SAAC,gBAAgB;;AAFlB,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,4QAAiD;;KAElD,CAAC;GACW,wBAAwB,CA6BpC;AA7BoC;;;;;;;;;;;;;ACbrC;AAAe,6GAA8C,2LAA2L,E;;;;;;;;;;;;;;;;;;;ACAvK;AAGtB;AACb;IAOjC,wBAAwB,SAAxB,wBAAwB;IAwBjC,YACW,kBAAsC,EACrC,WAA0B;QAD3B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACrC,gBAAW,GAAX,WAAW,CAAe;QAxBtB,UAAK,GAA2B,EAAE,CAAC;QAI5C,uBAAkB,GAAG;YACxB,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,kBAAkB,EAAC;aACrG;YACD,MAAM,EAAE;gBACJ,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,kBAAkB,EAAC;aACvG;YACD,iBAAiB,EAAE;gBACf,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,kBAAkB,EAAC;aACrG;YACD,kBAAkB,EAAE;gBAChB,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,sBAAsB,CAAC,GAAG,kBAAkB,EAAC;aACrH;YACD,eAAe,EAAE;gBACb,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,kBAAkB,EAAC;aACzG;SACJ,CAAC;IAOF,CAAC;IAED,QAAQ;IACR,CAAC;IAED,eAAe;IACf,CAAC;IAGD,wBAAwB;IACxB,iBAAiB,CAAC,KAAU;QACxB,IAAI,cAAc,GAAG,IAAI,CAAC;QAC1B,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;YACpB,cAAc,GAAG,EAAE,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aAC1C;SACJ;QACD,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,gBAAgB,GAAG,cAAc,CAAC;IACzE,CAAC;IACD,wBAAwB;IAGxB,qBAAqB;IACrB,cAAc,CAAC,KAAU;QACrB,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;YACpB,WAAW,GAAG,EAAE,CAAC;YACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACvC;SACJ;QACD,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,aAAa,GAAG,WAAW,CAAC;IACnE,CAAC;IACD,qBAAqB;IAGrB,uBAAuB;IAEvB,gBAAgB,CAAC,KAAU;QACvB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,eAAe,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7F,CAAC;CAIJ;;YAlFO,wEAAkB;YAClB,6DAAa;;;oBAShB,mDAAK,SAAC,OAAO;8BAEb,uDAAS,SAAC,iBAAiB;;AAJnB,wBAAwB;IALpC,+DAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;QACjC,4QAAiD;;KAEpD,CAAC;GACW,wBAAwB,CA0EpC;AA1EoC;;;;;;;;;;;;;ACXrC;AAAe,6GAA8C,2LAA2L,E;;;;;;;;;;;;;;;;;;;;;;ACA7L;AACC;AACE;AACQ;AAC5B;AACmC;IAOhE,wBAAwB,SAAxB,wBAAwB;IAMjC,YACW,kBAAsC,EACtC,GAAe,EACf,OAAuB,EACvB,UAA6B;QAH7B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,QAAG,GAAH,GAAG,CAAY;QACf,YAAO,GAAP,OAAO,CAAgB;QACvB,eAAU,GAAV,UAAU,CAAmB;IAExC,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAED,gBAAgB;QACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;CAEJ;;YArCQ,wEAAkB;YACnB,uEAAU;YACV,+EAAc;YAEd,sFAAiB;;;sBASpB,uDAAS,SAAC,yDAAU,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC;;AAF7B,wBAAwB;IALpC,+DAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;QACjC,4QAAiD;;KAEpD,CAAC;GACW,wBAAwB,CA0BpC;AA1BoC;;;;;;;;;;;;;;;;;;;;;;;ACZI;AACc;AAED;AACmC;AACM;AACN;AAEzF,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAe;KAC7B;IACD;QACI,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,uGAAwB;KACtC;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,6GAA0B;KACtC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,uGAAwB;KACtC;CACJ,CAAC;IAQW,4BAA4B,SAA5B,4BAA4B;CAAG;AAA/B,4BAA4B;IANxC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE;YACP,4DAAY;SACb;KACF,CAAC;GACW,4BAA4B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCF;AACM;AACF;AAEA;AAEW;AAEqB;AAEtB;AACqC;AACM;AACS;AACf;AACA;IAmB7E,qBAAqB,SAArB,qBAAqB;CACjC;AADY,qBAAqB;IAjBjC,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kEAAY;YACZ,yFAA4B;SAC/B;QACD,YAAY,EAAE;YACV,kEAAe;YACf,uGAAwB;YACxB,6GAA0B;YAC1B,uHAA6B;YAC7B,wGAAwB;YACxB,wGAAwB;SAC3B;KACJ,CAAC;GACW,qBAAqB,CACjC;AADiC;;;;;;;;;;;;;AClClC;AAAe,6GAA8C,uJAAuJ,E;;;;;;;;;;;;;;;;;;ACAlK;AACwB;IAO7D,eAAe,SAAf,eAAe;IAE1B,YACS,UAA6B;QAA7B,eAAU,GAAV,UAAU,CAAmB;IAClC,CAAC;IAEL,QAAQ;IAER,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;CAEF;;YArBO,sFAAiB;;AAOZ,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,sOAAuC;;KAExC,CAAC;GACW,eAAe,CAc3B;AAd2B;;;;;;;;;;;;;;;;;;;;;;;;ACRa;AACF;AACoB;AAGI;AACA;AACS;AACnC;IAOxB,kBAAkB,SAAlB,kBAAkB;IAkB3B,YACW,GAAe,EACf,KAAmB,EACnB,KAAmB,EACnB,MAAc,EACb,UAA6B;QAJ9B,QAAG,GAAH,GAAG,CAAY;QACf,UAAK,GAAL,KAAK,CAAc;QACnB,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAQ;QACb,eAAU,GAAV,UAAU,CAAmB;QArBlC,mBAAc,GAAG,cAAc,CAAC;QAChC,yBAAoB,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;QAE3D,gBAAW,GAAiB,EAAE,CAAC;QAC/B,eAAU,GAA2B,EAAE,CAAC;QACxC,oBAAe,GAAoB,EAAE,CAAC;QAEtC,gBAAW,GAAG,EAAE,CAAC;QACjB,YAAO,GAAG,EAAE,CAAC;QAEb,SAAI,GAAS,IAAI,CAAC;QAElB,SAAI,GAAG,CAAC,CAAC;QAET,iBAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAS/D,CAAC;IAEM,cAAc,CAAC,OAAY,IAAI,CAAC,IAAI,EAAE,UAAe,IAAI,CAAC,OAAO;QAEpE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,QAAQ,GAAG,IAAI,GAAG,WAAW,GAAG,OAAO,GAAG,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC;aAC5G,SAAS,CACN,CAAC,GAAQ,EAAE,EAAE;YACT,aAAa;YACb,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC1D,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC;YAC5B,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,KAAK,CAAC;YACjC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACzB,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE;YACT,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CACJ,CAAC;IACV,CAAC;IAEM,cAAc,CAAC,EAAO;QACzB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,EAAE,GAAG,OAAO,CAAC;aACjD,SAAS,CACN,CAAC,GAAQ,EAAE,EAAE;YACT,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,KAAK,CAAC;QACrC,CAAC,EACD,CAAC,GAAQ,EAAE,EAAE;YACT,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CACJ,CAAC;IACV,CAAC;IAEM,gBAAgB;QACnB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE;YACzD,KAAK,EAAE,IAAI,CAAC,UAAU;YACtB,MAAM,EAAE,EACP;SACJ,CAAC,CAAC,SAAS,CACR,CAAC,GAAQ,EAAE,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CACJ,CAAC;IACN,CAAC;IAEM,gBAAgB;QACnB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;aACxC,SAAS,CACN,CAAC,GAAQ,EAAE,EAAE;YACT,IAAI,CAAC,UAAU,GAAe,EAAE,CAAC;YACjC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,KAAK;QACpC,CAAC,CACJ,CAAC;IACV,CAAC;IAEM,eAAe;QAClB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAC/B,KAAK,EAAE,IAAI,CAAC,UAAU;YACtB,MAAM,EAAE,EACP;SACJ,CAAC,CAAC,SAAS,CACR,CAAC,GAAQ,EAAE,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CACJ,CAAC;IACN,CAAC;IAEY,gBAAgB,CAAC,EAAO;;YACjC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,YAAY,CACzC,yBAAyB,CAC5B,CAAC;YACF,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC;qBAC9C,SAAS,CACN,CAAC,GAAQ,EAAE,EAAE;oBACT,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;oBACxD,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBAC3B,CAAC,CACJ,CAAC;aACT;iBAAM;gBACH,OAAO;aACV;QACL,CAAC;KAAA;CAEJ;;YA7HO,uEAAU;YAGV,2EAAY;YACZ,2EAAY;YALZ,sDAAM;YAMN,qFAAiB;;AAQZ,kBAAkB;IAH9B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,kBAAkB,CAgH9B;AAhH8B","file":"syst-regions-syst-regions-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/syst-regions'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"systRegionsService.storeSystRegion()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!systRegionsService.systRegionsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'DEPARTAMENTOS' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-syst-regions-form #systRegionForm [model]=\\\"systRegionsService.systRegion\\\"></app-syst-regions-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  SystRegions duplicate works!\\n</p>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/syst-regions'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n              [text]=\\\"''\\\"\\n              [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"systRegionsService.updateSystRegion()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!systRegionsService.systRegionsFormValid.value\\\">\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'DEPARTAMENTOS' | titlecase}}: {{ systRegionsService.systRegion?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n            <app-syst-regions-form #systRegionForm [model]=\\\"systRegionsService.systRegion\\\"></app-syst-regions-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #systRegionsForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\n\\n\\n    <!-- user_profile_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'PERFILES DE USUARIOS' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"user_profile_ids\\\"\\n                          id=\\\"user_profile_ids-field\\\"\\n                          [(ngModel)]=\\\"model.user_profiles\\\"\\n                          [items]=\\\"systRegionsService.systRegionLists.UserProfile\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('PERFILES DE USUARIOS' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('PERFILES DE USUARIOS' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setUserProfileIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.user_profile_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systRegionsForm.form.controls['user_profile_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end user_profile_ids -->\\n\\n\\n    <!-- syst_city_ids -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'CIUDADES' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"syst_city_ids\\\"\\n                          id=\\\"syst_city_ids-field\\\"\\n                          [(ngModel)]=\\\"model.syst_cities\\\"\\n                          [items]=\\\"systRegionsService.systRegionLists.SystCity\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [isMultiple]=\\\"true\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('CIUDADES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('CIUDADES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setSystCityIds($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_city_ids\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systRegionsForm.form.controls['syst_city_ids']?.hasError(validation.type)\\\">\\n            {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end syst_city_ids -->\\n\\n\\n    <!-- syst_country_id -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'PAISE' | titlecase }}</ion-label>\\n        <ionic-selectable name=\\\"syst_country_id\\\"\\n                          id=\\\"syst_country_id-field\\\"\\n                          [required]=\\\"true\\\"\\n                          [(ngModel)]=\\\"model.syst_country\\\"\\n                          [items]=\\\"systRegionsService.systRegionLists.SystCountry\\\"\\n                          itemValueField=\\\"id\\\"\\n                          itemTextField=\\\"name\\\"\\n                          [canClear]=\\\"true\\\"\\n                          [hasConfirmButton]=\\\"true\\\"\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('PAISES' | titlecase)\\\"\\n                          [searchFailText]=\\\"'No se encontro ' + ('PAISES' | titlecase) + ' que coincida!'\\\"\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\n                          [canSearch]=\\\"true\\\"\\n                          (onChange)=\\\"setSystCountryId($event)\\\">\\n        </ionic-selectable>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.syst_country_id\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"systRegionsForm.form.controls['syst_country_id']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end syst_country_id -->\\n\\n\\n            <!-- name -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'NAME' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"name\\\"\\n                            id=\\\"name-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"systRegionsForm.form.controls['name']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end name -->\\n\\n\\n            <!-- code -->\\n            <ion-item class=\\\"item-transparent\\\">\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\n                            type=\\\"text\\\"\\n                            name=\\\"code\\\"\\n                            id=\\\"code-field\\\"\\n                            [required]=\\\"true\\\"\\n                            placeholder=\\\"\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"systRegionsForm.form.controls['code']?.hasError(validation.type)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- end code -->\\n\\n\\n</form>\\n\";","export default \"<app-main-header title=\\\"{{'DEPARTAMENTOS' | titlecase}}\\\"\\n                 primaryLink=\\\"syst-regions/create\\\"\\n                 primaryText=\\\"Crear {{'DEPARTAMENTOS' | lowercase}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n\\n<ion-content id=\\\"pages-content\\\">\\n\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\n                       [placeholder]=\\\"'Buscar ' + ('DEPARTAMENTOS' | lowercase )\\\"\\n                       (ionCancel)=\\\"this.systRegionsService.searchValue = ''; systRegionsService.getSystRegions()\\\"\\n                       (keyup.enter)=\\\"systRegionsService.getSystRegions()\\\"\\n                       [(ngModel)]=\\\"systRegionsService.searchValue\\\"></ion-searchbar>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && systRegionsService.systRegions?.length\\\">\\n        <ion-card *ngFor=\\\"let systRegion of systRegionsService.systRegions; let index = index\\\">\\n            <ion-list>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NAME' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ systRegion?.name }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">{{ systRegion?.code }}</div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PERFILES DE USUARIOS' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"systRegion?.user_profiles?.length\\\">\\n                                <ng-container *ngFor=\\\"let userProfile of systRegion?.user_profiles; let last = last\\\">\\n                                    <a routerLink=\\\"/user-profiles/{{ userProfile?.id }}/edit\\\">{{ userProfile?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CIUDADES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\">\\n                            <ng-container *ngIf=\\\"systRegion?.syst_cities?.length\\\">\\n                                <ng-container *ngFor=\\\"let systCity of systRegion?.syst_cities; let last = last\\\">\\n                                    <a routerLink=\\\"/syst-cities/{{ systCity?.id }}/edit\\\">{{ systCity?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\n                                </ng-container>\\n                            </ng-container>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item class=\\\"item-transparent\\\">\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'PAISES' | titlecase }}</b></ion-label>\\n                        <div class=\\\"wrap-text\\\"><a routerLink=\\\"/syst-countries/{{ systRegion?.syst_country?.id }}/edit\\\">{{ systRegion?.syst_country?.name }}</a></div>\\n                    </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/syst-regions/' + systRegion?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"systRegionsService.deleteSystRegion(systRegion?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !systRegionsService.systRegions?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron {{'DEPARTAMENTOS' | titlecase}}</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/syst-regions/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear {{'DEPARTAMENTOS' | titlecase}}\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n\\n</ion-content>\\n\\n<ion-footer class=\\\"lists-footer\\\">\\n    <ion-row *ngIf=\\\"systRegionsService.meta\\\">\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\n            <ion-button (click)=\\\"systRegionsService.getSystRegions(systRegionsService.meta.current_page - 1)\\\"\\n                        [disabled]=\\\"systRegionsService.meta.current_page == 1\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{systRegionsService.meta.current_page}}\\n                /{{systRegionsService.meta.last_page}} {{systRegionsService.meta.from}}-{{systRegionsService.meta.to}}\\n                /{{systRegionsService.meta.total}} </ion-button>\\n            <ion-button (click)=\\\"systRegionsService.getSystRegions(systRegionsService.meta.current_page + 1)\\\"\\n                        [disabled]=\\\"systRegionsService.meta.current_page == systRegionsService.meta.last_page\\\"\\n                        fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-col>\\n    </ion-row>\\n</ion-footer>\\n\";","export default \"<app-main-header title=\\\"DEPARTAMENTOS\\\"></app-main-header>\\n\\n<ion-content>\\n\\n        <ion-row>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/syst-regions/list\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Listar {{ 'DEPARTAMENTOS'  | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n                <ion-card routerLink=\\\"/syst-regions/create\\\">\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                    </div>\\n                    <ion-card-header>\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                            Crear {{ 'DEPARTAMENTOS' | titlecase }}\\n                        </ion-card-subtitle>\\n                    </ion-card-header>\\n\\n                </ion-card>\\n            </ion-col>\\n\\n        </ion-row>\\n\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtcmVnaW9ucy9zeXN0LXJlZ2lvbnMtY3JlYXRlL3N5c3QtcmVnaW9ucy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {SystRegionsService} from \"../syst-regions.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {SystRegion} from \"../syst-region\";\nimport {SystRegionsFormComponent} from \"../syst-regions-form/syst-regions-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-syst-regions-create',\n    templateUrl: './syst-regions-create.component.html',\n    styleUrls: ['./syst-regions-create.component.scss']\n})\nexport class SystRegionsCreateComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('systRegionForm') systRegionForm: SystRegionsFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public systRegionsService: SystRegionsService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.clearPosts();\n    }\n\n    ionViewWillEnter() {\n       this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.systRegionForm.systRegionsForm.valueChanges.subscribe((data) => {\n            this.systRegionsService.systRegionsFormValid.next(this.systRegionForm.systRegionsForm.valid);\n        });\n    }\n\n    clearPosts() {\n        console.log('clear');\n        this.systRegionsService.createSystRegion();\n        this.systRegionsService.systRegion = <SystRegion>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtcmVnaW9ucy9zeXN0LXJlZ2lvbnMtZHVwbGljYXRlL3N5c3QtcmVnaW9ucy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-syst-regions-duplicate',\n  templateUrl: './syst-regions-duplicate.component.html',\n  styleUrls: ['./syst-regions-duplicate.component.scss'],\n})\nexport class SystRegionsDuplicateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtcmVnaW9ucy9zeXN0LXJlZ2lvbnMtZWRpdC9zeXN0LXJlZ2lvbnMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {SystRegionsService} from \"../syst-regions.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {SystRegion} from \"../syst-region\";\nimport {SystRegionsFormComponent} from \"../syst-regions-form/syst-regions-form.component\";\nimport { Platform } from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-syst-regions-edit',\n  templateUrl: './syst-regions-edit.component.html',\n  styleUrls: ['./syst-regions-edit.component.scss']\n})\nexport class SystRegionsEditComponent implements OnInit, AfterViewInit {\n\n    @ViewChild('systRegionForm') systRegionForm: SystRegionsFormComponent;\n\n    public id: any = null;\n    public model: SystRegion = null;\n\n  constructor(\n      public systRegionsService: SystRegionsService,\n      public route: ActivatedRoute,\n      public platform: Platform,\n      public splitPanel: SplitPanelService,\n  ) { }\n\n  ngOnInit(): void {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.systRegionsService.editSystRegion(this.id);\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n  ngAfterViewInit() {\n      this.systRegionForm.systRegionsForm.valueChanges.subscribe((data) => {\n          this.systRegionsService.systRegionsFormValid.next(this.systRegionForm.systRegionsForm.valid);\n      });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtcmVnaW9ucy9zeXN0LXJlZ2lvbnMtZm9ybS9zeXN0LXJlZ2lvbnMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {SystRegion} from \"../syst-region\";\nimport {FormGroup} from \"@angular/forms\";\nimport {SystRegionsService} from \"../syst-regions.service\";\nimport {TitleCasePipe} from \"@angular/common\";\n\n@Component({\n    selector: 'app-syst-regions-form',\n    templateUrl: './syst-regions-form.component.html',\n    styleUrls: ['./syst-regions-form.component.scss']\n})\nexport class SystRegionsFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: SystRegion = <SystRegion>{};\n\n    @ViewChild('systRegionsForm') systRegionsForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NAME') + ' es obligatorio.'},\n        ],\n        'code': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\n        ],\n        'syst_country_id': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PAÍS') + ' es obligatorio.'},\n        ],\n        'user_profile_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('PERFILES DE USUARIOS') + ' es obligatorio.'},\n        ],\n        'syst_city_ids': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CIUDADES') + ' es obligatorio.'},\n        ],\n    };\n\n    constructor(\n        public systRegionsService: SystRegionsService,\n        private toTitlecase: TitleCasePipe\n    ) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n    // set setUserProfileIds\n    setUserProfileIds(event: any) {\n        let userProfileIds = null;\n        if (event.value.length) {\n            userProfileIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                userProfileIds.push(event.value[i].id);\n            }\n        }\n        this.systRegionsService.systRegion.user_profile_ids = userProfileIds;\n    }\n    // end setUserProfileIds\n\n\n    // set setSystCityIds\n    setSystCityIds(event: any) {\n        let systCityIds = null;\n        if (event.value.length) {\n            systCityIds = [];\n            for (let i = 0; i < event.value.length; i++) {\n                systCityIds.push(event.value[i].id);\n            }\n        }\n        this.systRegionsService.systRegion.syst_city_ids = systCityIds;\n    }\n    // end setSystCityIds\n\n\n    // set setSystCountryId\n\n    setSystCountryId(event: any) {\n        this.systRegionsService.systRegion.syst_country_id = event.value ? event.value.id : null;\n    }\n    // end setSystCountryId\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtcmVnaW9ucy9zeXN0LXJlZ2lvbnMtbGlzdC9zeXN0LXJlZ2lvbnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { SystRegionsService} from \"../syst-regions.service\";\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {IonContent} from '@ionic/angular';\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-syst-regions-list',\n    templateUrl: './syst-regions-list.component.html',\n    styleUrls: ['./syst-regions-list.component.scss'],\n})\nexport class SystRegionsListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    popover: any;\n\n    constructor(\n        public systRegionsService: SystRegionsService,\n        public api: ApiService,\n        public loading: LoadingService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.systRegionsService.getSystRegions();\n    }\n\n    ionViewWillEnter() {\n     this.splitPanel.show.next(true);\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SystRegionsPage } from './syst-regions.page';\nimport {SystRegionsEditComponent} from \"./syst-regions-edit/syst-regions-edit.component\";\nimport {SystRegionsCreateComponent} from \"./syst-regions-create/syst-regions-create.component\";\nimport {SystRegionsListComponent} from \"./syst-regions-list/syst-regions-list.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SystRegionsPage\n    },\n    {\n        path: 'list',\n        component: SystRegionsListComponent\n    },\n    {\n      path: 'create',\n      component: SystRegionsCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: SystRegionsEditComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class SystRegionsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SharedModule} from '../@shared/shared.module';\n\nimport {SystRegionsPageRoutingModule} from './syst-regions-routing.module';\n\nimport { SystRegionsPage} from './syst-regions.page';\nimport { SystRegionsListComponent} from \"./syst-regions-list/syst-regions-list.component\";\nimport { SystRegionsCreateComponent} from \"./syst-regions-create/syst-regions-create.component\";\nimport { SystRegionsDuplicateComponent} from \"./syst-regions-duplicate/syst-regions-duplicate.component\";\nimport { SystRegionsEditComponent} from \"./syst-regions-edit/syst-regions-edit.component\";\nimport { SystRegionsFormComponent} from \"./syst-regions-form/syst-regions-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        SystRegionsPageRoutingModule\n    ],\n    declarations: [\n        SystRegionsPage,\n        SystRegionsListComponent,\n        SystRegionsCreateComponent,\n        SystRegionsDuplicateComponent,\n        SystRegionsEditComponent,\n        SystRegionsFormComponent,\n    ]\n})\nexport class SystRegionsPageModule {\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3QtcmVnaW9ucy9zeXN0LXJlZ2lvbnMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\n\n@Component({\n  selector: 'app-syst-regions',\n  templateUrl: './syst-regions.page.html',\n  styleUrls: ['./syst-regions.page.scss'],\n})\nexport class SystRegionsPage implements OnInit {\n\n  constructor(\n    public splitPanel: SplitPanelService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter() {\n    this.splitPanel.show.next(true);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport { SystRegion, SystRegionLists } from \"./syst-region\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {NavigationService} from '../@shared/services/navigation.service'\nimport {BehaviorSubject} from \"rxjs\";\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SystRegionsService {\n\n    public systRegionsUrl = 'syst-regions';\n    public systRegionsFormValid = new BehaviorSubject<boolean>(false);\n\n    public systRegions: SystRegion[] = [];\n    public systRegion: SystRegion = <SystRegion>{};\n    public systRegionLists: SystRegionLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n    constructor(\n        public api: ApiService,\n        public alert: AlertService,\n        public toast: ToastService,\n        public router: Router,\n        private navigation: NavigationService,\n    ) {\n    }\n\n    public getSystRegions(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.systRegionsUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    document.getElementById('pages-content').scrollToTop(300);\n                    this.systRegions = res.data;\n                    this.systRegionLists = res.lists;\n                    this.meta = res.meta;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editSystRegion(id: any) {\n        this.api.get(this.systRegionsUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.systRegion = res.data.model;\n                    this.systRegionLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateSystRegion() {\n        this.api.put(this.systRegionsUrl + '/' + this.systRegion.id, {\n            model: this.systRegion,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getSystRegions(1);\n            }\n        );\n    }\n\n    public createSystRegion() {\n        this.api.get(this.systRegionsUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.systRegion = <SystRegion>{};\n                    this.systRegionLists = res.lists\n                }\n            );\n    }\n\n    public storeSystRegion() {\n        this.api.post(this.systRegionsUrl, {\n            model: this.systRegion,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getSystRegions(1);\n            }\n        );\n    }\n\n    public async deleteSystRegion(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.systRegionsUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getSystRegions(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}