{"version":3,"sources":["webpack:///src/app/user-roles/user-roles-create/user-roles-create.component.html","webpack:///src/app/user-roles/user-roles-duplicate/user-roles-duplicate.component.html","webpack:///src/app/user-roles/user-roles-edit/user-roles-edit.component.html","webpack:///src/app/user-roles/user-roles-form/user-roles-form.component.html","webpack:///src/app/user-roles/user-roles-list/user-roles-list.component.html","webpack:///src/app/user-roles/user-roles.page.html","webpack:///src/app/user-roles/user-roles-create/user-roles-create.component.scss","webpack:///src/app/user-roles/user-roles-create/user-roles-create.component.ts","webpack:///src/app/user-roles/user-roles-duplicate/user-roles-duplicate.component.scss","webpack:///src/app/user-roles/user-roles-duplicate/user-roles-duplicate.component.ts","webpack:///src/app/user-roles/user-roles-edit/user-roles-edit.component.scss","webpack:///src/app/user-roles/user-roles-edit/user-roles-edit.component.ts","webpack:///src/app/user-roles/user-roles-form/user-roles-form.component.scss","webpack:///src/app/user-roles/user-roles-form/user-roles-form.component.ts","webpack:///src/app/user-roles/user-roles-list/user-roles-list.component.scss","webpack:///src/app/user-roles/user-roles-list/user-roles-list.component.ts","webpack:///src/app/user-roles/user-roles-routing.module.ts","webpack:///src/app/user-roles/user-roles.module.ts","webpack:///src/app/user-roles/user-roles.page.scss","webpack:///src/app/user-roles/user-roles.page.ts","webpack:///src/app/user-roles/user-roles.service.ts"],"names":["UserRolesCreateComponent","userRolesService","route","platform","splitPanel","id","formValid","clearPosts","show","next","userRoleForm","userRolesForm","valueChanges","subscribe","data","userRolesFormValid","valid","console","log","createUserRole","userRole","selector","template","UserRolesDuplicateComponent","UserRolesEditComponent","model","snapshot","paramMap","get","editUserRole","UserRolesFormComponent","toTitlecase","validationMessages","type","message","transform","event","userIds","value","length","i","push","user_ids","userPermissionIds","user_permission_ids","UserRolesListComponent","api","loading","getUserRoles","content","scrollToTop","routes","path","component","UserRolesPageRoutingModule","imports","forChild","exports","UserRolesPageModule","declarations","UserRolesPage","UserRolesService","alert","toast","router","navigation","userRolesUrl","userRoles","userRoleLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","user","users","user_permission","user_permissions","present","back","post","confirmation","confirm","providedIn"],"mappings":"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","file":"user-roles-user-roles-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/user-roles'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"userRolesService.storeUserRole()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!userRolesService.userRolesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Crear {{'USUARIOS ROLES' | titlecase}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n        <app-user-roles-form #userRoleForm [model]=\\\"userRolesService.userRole\\\"></app-user-roles-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<p>\\r\\n  UserRoles duplicate works!\\r\\n</p>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <!-- <ion-button [routerLink]=\\\"'/user-roles'\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n            </ion-button> -->\\r\\n            <ion-back-button\\r\\n              [text]=\\\"''\\\"\\r\\n              [icon]=\\\"'arrow-back-outline'\\\">\\r\\n            </ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-buttons slot=\\\"primary\\\">\\r\\n            <ion-button (click)=\\\"userRolesService.updateUserRole()\\\"\\r\\n                        color=\\\"success\\\"\\r\\n                        fill=\\\"clear\\\"\\r\\n                        [disabled]=\\\"!userRolesService.userRolesFormValid.value\\\">\\r\\n                        <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\r\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Editar {{'USUARIOS ROLES' | titlecase}}: {{ userRolesService.userRole?.name }}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content fullscreen>\\r\\n    <ion-card>\\r\\n            <app-user-roles-form #userRoleForm [model]=\\\"userRolesService.userRole\\\"></app-user-roles-form>\\r\\n    </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"<form #userRolesForm=\\\"ngForm\\\" novalidate autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <!-- user_ids -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'USUARIOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"user_ids\\\"\\r\\n                          id=\\\"user_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.users\\\"\\r\\n                          [items]=\\\"userRolesService.userRoleLists.User\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('USUARIOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('USUARIOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setUserIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.user_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"userRolesForm.form.controls['user_ids']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end user_ids -->\\r\\n\\r\\n\\r\\n    <!-- user_permission_ids -->\\r\\n    <ion-item class=\\\"item-transparent\\\">\\r\\n        <ion-label>{{ 'USUARIOS PERMISOS' | titlecase }}</ion-label>\\r\\n        <ionic-selectable name=\\\"user_permission_ids\\\"\\r\\n                          id=\\\"user_permission_ids-field\\\"\\r\\n                          [(ngModel)]=\\\"model.user_permissions\\\"\\r\\n                          [items]=\\\"userRolesService.userRoleLists.UserPermission\\\"\\r\\n                          itemValueField=\\\"id\\\"\\r\\n                          itemTextField=\\\"name\\\"\\r\\n                          [isMultiple]=\\\"true\\\"\\r\\n                          [canClear]=\\\"true\\\"\\r\\n                          [hasConfirmButton]=\\\"true\\\"\\r\\n                          [confirmButtonText]=\\\"'Seleccionar'\\\"\\r\\n                          [searchPlaceholder]=\\\"'Buscar ' + ('USUARIOS PERMISOS' | titlecase)\\\"\\r\\n                          [searchFailText]=\\\"'No se encontro ' + ('USUARIOS PERMISOS' | titlecase) + ' que coincida!'\\\"\\r\\n                          [closeButtonText]=\\\"'Cancelar'\\\"\\r\\n                          [clearButtonText]=\\\"'Limpiar'\\\"\\r\\n                          [canSearch]=\\\"true\\\"\\r\\n                          (onChange)=\\\"setUserPermissionIds($event)\\\">\\r\\n        </ionic-selectable>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n        <ng-container *ngFor=\\\"let validation of validationMessages.user_permission_ids\\\">\\r\\n            <div class=\\\"error-message\\\" *ngIf=\\\"userRolesForm.form.controls['user_permission_ids']?.hasError(validation.type)\\\">\\r\\n                {{ validation.message }}\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <!-- end user_permission_ids -->\\r\\n\\r\\n\\r\\n            <!-- name -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"name\\\"\\r\\n                            id=\\\"name-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"userRolesForm.form.controls['name']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end name -->\\r\\n\\r\\n\\r\\n            <!-- code -->\\r\\n            <ion-item class=\\\"item-transparent\\\">\\r\\n                <ion-label>{{ 'CÓDIGO' | titlecase }}</ion-label>\\r\\n                <ion-input [(ngModel)]=\\\"model.code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"code\\\"\\r\\n                            id=\\\"code-field\\\"\\r\\n                            [required]=\\\"true\\\"\\r\\n                            placeholder=\\\"\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-errors\\\">\\r\\n                <ng-container *ngFor=\\\"let validation of validationMessages.code\\\">\\r\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"userRolesForm.form.controls['code']?.hasError(validation.type)\\\">\\r\\n                        {{ validation.message }}\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            <!-- end code -->\\r\\n\\r\\n\\r\\n</form>\\r\\n\";","export default \"<app-main-header title=\\\"{{'USUARIOS ROLES' | titlecase}}\\\"\\r\\n                 primaryLink=\\\"user-roles/create\\\"\\r\\n                 primaryText=\\\"Crear {{'USUARIOS ROLES' | lowercase}}\\\"\\r\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\r\\n\\r\\n<ion-content id=\\\"pages-content\\\">\\r\\n\\r\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\r\\n                       [cancelButtonText]=\\\"'Cancelar'\\\"\\r\\n                       [placeholder]=\\\"'Buscar ' + ('USUARIOS ROLES' | lowercase )\\\"\\r\\n                       (ionCancel)=\\\"this.userRolesService.searchValue = ''; userRolesService.getUserRoles()\\\"\\r\\n                       (keyup.enter)=\\\"userRolesService.getUserRoles()\\\"\\r\\n                       [(ngModel)]=\\\"userRolesService.searchValue\\\"></ion-searchbar>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && userRolesService.userRoles?.length\\\">\\r\\n        <ion-card *ngFor=\\\"let userRole of userRolesService.userRoles; let index = index\\\">\\r\\n            <ion-list>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ userRole?.name }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">{{ userRole?.code }}</div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'USUARIOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"userRole?.users?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let user of userRole?.users; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/users/{{ user?.id }}/edit\\\">{{ user?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"item-transparent\\\">\\r\\n                        <ion-label position=\\\"fixed\\\"><b>{{ 'USUARIOS PERMISOS' | titlecase }}</b></ion-label>\\r\\n                        <div class=\\\"wrap-text\\\">\\r\\n                            <ng-container *ngIf=\\\"userRole?.user_permissions?.length\\\">\\r\\n                                <ng-container *ngFor=\\\"let userPermission of userRole?.user_permissions; let last = last\\\">\\r\\n                                    <a routerLink=\\\"/user-permissions/{{ userPermission?.id }}/edit\\\">{{ userPermission?.name }}</a><span *ngIf=\\\"!last\\\">, </span>\\r\\n                                </ng-container>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </ion-item>\\r\\n            </ion-list>\\r\\n            <ion-footer>\\r\\n                <ion-row>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/user-roles/' + userRole?.id + '/edit'\\\">\\r\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n                            <div>Editar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-text-center\\\">\\r\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"userRolesService.deleteUserRole(userRole?.id)\\\">\\r\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n                            <div>Eliminar</div>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-footer>\\r\\n        </ion-card>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !userRolesService.userRoles?.length\\\">\\r\\n        <ion-item>\\r\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n            <ion-label><h2>No se encontraron {{'USUARIOS ROLES' | titlecase}}</h2></ion-label>\\r\\n            <ion-button [routerLink]=\\\"'/user-roles/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\r\\n                Crear {{'USUARIOS ROLES' | titlecase}}\\r\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-item>\\r\\n    </ng-container>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer class=\\\"lists-footer\\\">\\r\\n    <ion-row *ngIf=\\\"userRolesService.meta\\\">\\r\\n        <ion-col class=\\\"ion-text-center\\\" size=\\\"12\\\">\\r\\n            <ion-button (click)=\\\"userRolesService.getUserRoles(userRolesService.meta.current_page - 1)\\\"\\r\\n                        [disabled]=\\\"userRolesService.meta.current_page == 1\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"end\\\" name=\\\"play-outline\\\" style=\\\"transform: rotate(180deg);\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n            <ion-button fill=\\\"clear\\\" [disabled]=\\\"true\\\"> Pag: {{userRolesService.meta.current_page}}\\r\\n                /{{userRolesService.meta.last_page}} {{userRolesService.meta.from}}-{{userRolesService.meta.to}}\\r\\n                /{{userRolesService.meta.total}} </ion-button>\\r\\n            <ion-button (click)=\\\"userRolesService.getUserRoles(userRolesService.meta.current_page + 1)\\\"\\r\\n                        [disabled]=\\\"userRolesService.meta.current_page == userRolesService.meta.last_page\\\"\\r\\n                        fill=\\\"clear\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"play-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>\\r\\n</ion-footer>\\r\\n\";","export default \"<app-main-header title=\\\"USUARIOS ROLES\\\"></app-main-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n        <ion-row>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/user-roles/list\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Listar {{ 'USUARIOS ROLES'  | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\r\\n                <ion-card routerLink=\\\"/user-roles/create\\\">\\r\\n                    <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\r\\n                        <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\r\\n                    </div>\\r\\n                    <ion-card-header>\\r\\n                        <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                            Crear {{ 'USUARIOS ROLES' | titlecase }}\\r\\n                        </ion-card-subtitle>\\r\\n                    </ion-card-header>\\r\\n\\r\\n                </ion-card>\\r\\n            </ion-col>\\r\\n\\r\\n        </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcm9sZXMvdXNlci1yb2xlcy1jcmVhdGUvdXNlci1yb2xlcy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {UserRolesService} from \"../user-roles.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {UserRole} from \"../user-role\";\r\nimport {UserRolesFormComponent} from \"../user-roles-form/user-roles-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-user-roles-create',\r\n    templateUrl: './user-roles-create.component.html',\r\n    styleUrls: ['./user-roles-create.component.scss']\r\n})\r\nexport class UserRolesCreateComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('userRoleForm') userRoleForm: UserRolesFormComponent;\r\n\r\n    id: any = null;\r\n    public formValid = false;\r\n\r\n    constructor(\r\n        public userRolesService: UserRolesService,\r\n        public route: ActivatedRoute,\r\n        public platform: Platform,\r\n        public splitPanel: SplitPanelService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clearPosts();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n       this.splitPanel.show.next(true);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.userRoleForm.userRolesForm.valueChanges.subscribe((data) => {\r\n            this.userRolesService.userRolesFormValid.next(this.userRoleForm.userRolesForm.valid);\r\n        });\r\n    }\r\n\r\n    clearPosts() {\r\n        console.log('clear');\r\n        this.userRolesService.createUserRole();\r\n        this.userRolesService.userRole = <UserRole>{};\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcm9sZXMvdXNlci1yb2xlcy1kdXBsaWNhdGUvdXNlci1yb2xlcy1kdXBsaWNhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-roles-duplicate',\r\n  templateUrl: './user-roles-duplicate.component.html',\r\n  styleUrls: ['./user-roles-duplicate.component.scss'],\r\n})\r\nexport class UserRolesDuplicateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcm9sZXMvdXNlci1yb2xlcy1lZGl0L3VzZXItcm9sZXMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {UserRolesService} from \"../user-roles.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {UserRole} from \"../user-role\";\r\nimport {UserRolesFormComponent} from \"../user-roles-form/user-roles-form.component\";\r\nimport { Platform } from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-user-roles-edit',\r\n  templateUrl: './user-roles-edit.component.html',\r\n  styleUrls: ['./user-roles-edit.component.scss']\r\n})\r\nexport class UserRolesEditComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('userRoleForm') userRoleForm: UserRolesFormComponent;\r\n\r\n    public id: any = null;\r\n    public model: UserRole = null;\r\n\r\n  constructor(\r\n      public userRolesService: UserRolesService,\r\n      public route: ActivatedRoute,\r\n      public platform: Platform,\r\n      public splitPanel: SplitPanelService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.userRolesService.editUserRole(this.id);\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n      this.userRoleForm.userRolesForm.valueChanges.subscribe((data) => {\r\n          this.userRolesService.userRolesFormValid.next(this.userRoleForm.userRolesForm.valid);\r\n      });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcm9sZXMvdXNlci1yb2xlcy1mb3JtL3VzZXItcm9sZXMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {UserRole} from \"../user-role\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {UserRolesService} from \"../user-roles.service\";\r\nimport {TitleCasePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-user-roles-form',\r\n    templateUrl: './user-roles-form.component.html',\r\n    styleUrls: ['./user-roles-form.component.scss']\r\n})\r\nexport class UserRolesFormComponent implements OnInit, AfterViewInit {\r\n\r\n    @Input('model') model: UserRole = <UserRole>{};\r\n\r\n    @ViewChild('userRolesForm') userRolesForm: FormGroup;\r\n\r\n    public validationMessages = {\r\n        'name': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\r\n        ],\r\n        'code': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\r\n        ],\r\n        'user_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('USUARIOS') + ' es obligatorio.'},\r\n        ],\r\n        'user_permission_ids': [\r\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('USUARIOS PERMISOS') + ' es obligatorio.'},\r\n        ],\r\n    };\r\n\r\n    constructor(\r\n        public userRolesService: UserRolesService,\r\n        private toTitlecase: TitleCasePipe\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n\r\n    // set setUserIds\r\n    setUserIds(event: any) {\r\n        let userIds = null;\r\n        if (event.value.length) {\r\n            userIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                userIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.userRolesService.userRole.user_ids = userIds;\r\n    }\r\n    // end setUserIds\r\n\r\n\r\n    // set setUserPermissionIds\r\n    setUserPermissionIds(event: any) {\r\n        let userPermissionIds = null;\r\n        if (event.value.length) {\r\n            userPermissionIds = [];\r\n            for (let i = 0; i < event.value.length; i++) {\r\n                userPermissionIds.push(event.value[i].id);\r\n            }\r\n        }\r\n        this.userRolesService.userRole.user_permission_ids = userPermissionIds;\r\n    }\r\n    // end setUserPermissionIds\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcm9sZXMvdXNlci1yb2xlcy1saXN0L3VzZXItcm9sZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { UserRolesService} from \"../user-roles.service\";\r\nimport {ApiService} from \"../../@shared/services/api.service\";\r\nimport {LoadingService} from \"../../@shared/services/loading.service\";\r\nimport {IonContent} from '@ionic/angular';\r\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n    selector: 'app-user-roles-list',\r\n    templateUrl: './user-roles-list.component.html',\r\n    styleUrls: ['./user-roles-list.component.scss'],\r\n})\r\nexport class UserRolesListComponent implements OnInit {\r\n\r\n    @ViewChild(IonContent, {static: false}) content: IonContent;\r\n\r\n    popover: any;\r\n\r\n    constructor(\r\n        public userRolesService: UserRolesService,\r\n        public api: ApiService,\r\n        public loading: LoadingService,\r\n        public splitPanel: SplitPanelService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.userRolesService.getUserRoles();\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n     this.splitPanel.show.next(true);\r\n    }\r\n\r\n    public scrollToTop() {\r\n        this.content.scrollToTop(300);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserRolesPage } from './user-roles.page';\r\nimport {UserRolesEditComponent} from \"./user-roles-edit/user-roles-edit.component\";\r\nimport {UserRolesCreateComponent} from \"./user-roles-create/user-roles-create.component\";\r\nimport {UserRolesListComponent} from \"./user-roles-list/user-roles-list.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: UserRolesPage\r\n    },\r\n    {\r\n        path: 'list',\r\n        component: UserRolesListComponent\r\n    },\r\n    {\r\n      path: 'create',\r\n      component: UserRolesCreateComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: UserRolesEditComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n})\r\nexport class UserRolesPageRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport {IonicModule} from '@ionic/angular';\r\n\r\nimport {SharedModule} from '../@shared/shared.module';\r\n\r\nimport {UserRolesPageRoutingModule} from './user-roles-routing.module';\r\n\r\nimport { UserRolesPage} from './user-roles.page';\r\nimport { UserRolesListComponent} from \"./user-roles-list/user-roles-list.component\";\r\nimport { UserRolesCreateComponent} from \"./user-roles-create/user-roles-create.component\";\r\nimport { UserRolesDuplicateComponent} from \"./user-roles-duplicate/user-roles-duplicate.component\";\r\nimport { UserRolesEditComponent} from \"./user-roles-edit/user-roles-edit.component\";\r\nimport { UserRolesFormComponent} from \"./user-roles-form/user-roles-form.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        UserRolesPageRoutingModule\r\n    ],\r\n    declarations: [\r\n        UserRolesPage,\r\n        UserRolesListComponent,\r\n        UserRolesCreateComponent,\r\n        UserRolesDuplicateComponent,\r\n        UserRolesEditComponent,\r\n        UserRolesFormComponent,\r\n    ]\r\n})\r\nexport class UserRolesPageModule {\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcm9sZXMvdXNlci1yb2xlcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\r\n\r\n@Component({\r\n  selector: 'app-user-roles',\r\n  templateUrl: './user-roles.page.html',\r\n  styleUrls: ['./user-roles.page.scss'],\r\n})\r\nexport class UserRolesPage implements OnInit {\r\n\r\n  constructor(\r\n    public splitPanel: SplitPanelService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.splitPanel.show.next(true);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {ApiService} from \"../@shared/services/api.service\";\r\nimport { UserRole, UserRoleLists } from \"./user-role\";\r\nimport {Meta} from \"../@shared/interfaces/meta\";\r\nimport {AlertService} from \"../@shared/services/alert.service\";\r\nimport {ToastService} from \"../@shared/services/toast.service\";\r\nimport {NavigationService} from '../@shared/services/navigation.service'\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserRolesService {\r\n\r\n    public userRolesUrl = 'user-roles';\r\n    public userRolesFormValid = new BehaviorSubject<boolean>(false);\r\n\r\n    public userRoles: UserRole[] = [];\r\n    public userRole: UserRole = <UserRole>{};\r\n    public userRoleLists: UserRoleLists = {};\r\n\r\n    public searchValue = '';\r\n    public perPage = 10;\r\n\r\n    public meta: Meta = null;\r\n\r\n    public page = 1;\r\n\r\n    public pagesContent = document.getElementById('pages-content');\r\n\r\n    constructor(\r\n        public api: ApiService,\r\n        public alert: AlertService,\r\n        public toast: ToastService,\r\n        public router: Router,\r\n        private navigation: NavigationService,\r\n    ) {\r\n    }\r\n\r\n    public getUserRoles(page: any = this.page, perPage: any = this.perPage) {\r\n\r\n        this.api.get(this.userRolesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\r\n            .subscribe(\r\n                (res: any) => {\r\n                    // @ts-ignore\r\n                    document.getElementById('pages-content').scrollToTop(300);\r\n                    this.userRoles = res.data;\r\n                    this.userRoleLists = res.lists;\r\n                    this.meta = res.meta;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public editUserRole(id: any) {\r\n        this.api.get(this.userRolesUrl + '/' + id + '/edit')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.userRole = res.data.model;\r\n                    this.userRoleLists = res.lists;\r\n                },\r\n                (err: any) => {\r\n                    console.error(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    public updateUserRole() {\r\n        this.api.put(this.userRolesUrl + '/' + this.userRole.id, {\r\n            model: this.userRole,\r\n            pivots: {\r\n                user: this.userRole.users,\r\n                user_permission: this.userRole.user_permissions,\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getUserRoles(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public createUserRole() {\r\n        this.api.get(this.userRolesUrl + '/create')\r\n            .subscribe(\r\n                (res: any) => {\r\n                    this.userRole = <UserRole>{};\r\n                    this.userRoleLists = res.lists\r\n                }\r\n            );\r\n    }\r\n\r\n    public storeUserRole() {\r\n        this.api.post(this.userRolesUrl, {\r\n            model: this.userRole,\r\n            pivots: {\r\n                user: this.userRole.users,\r\n                user_permission: this.userRole.user_permissions,\r\n            }\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.toast.present(res.message, 'toast-success', 'top');\r\n                this.navigation.back();\r\n                this.getUserRoles(1);\r\n            }\r\n        );\r\n    }\r\n\r\n    public async deleteUserRole(id: any) {\r\n        const confirm = await this.alert.confirmation(\r\n            'Desea eliminar el item?'\r\n        );\r\n        if (confirm) {\r\n            this.api.delete(this.userRolesUrl + '/' + id, {})\r\n                .subscribe(\r\n                    (res: any) => {\r\n                        this.toast.present(res.message, 'toast-success', 'top');\r\n                        this.getUserRoles(1);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n}\r\n"]}