{"version":3,"sources":["webpack:///src/app/board/boar-messages-create/boar-messages-create.component.html","webpack:///src/app/board/boar-messages-edit/boar-messages-edit.component.html","webpack:///src/app/board/boar-messages-form/boar-messages-form.component.html","webpack:///src/app/board/boar-messages-list-view/boar-messages-list-view.component.html","webpack:///src/app/board/boar-messages-show/boar-messages-show.component.html","webpack:///src/app/board/board-messages-list/board-messages-list.component.html","webpack:///src/app/board/board.component.html","webpack:///src/app/board/boar-messages-create/boar-messages-create.component.scss","webpack:///src/app/board/boar-messages-create/boar-messages-create.component.ts","webpack:///src/app/board/boar-messages-edit/boar-messages-edit.component.scss","webpack:///src/app/board/boar-messages-edit/boar-messages-edit.component.ts","webpack:///src/app/board/boar-messages-form/boar-messages-form.component.scss","webpack:///src/app/board/boar-messages-form/boar-messages-form.component.ts","webpack:///src/app/board/boar-messages-list-view/boar-messages-list-view.component.scss","webpack:///src/app/board/boar-messages-list-view/boar-messages-list-view.component.ts","webpack:///src/app/board/boar-messages-show/boar-messages-show.component.scss","webpack:///src/app/board/boar-messages-show/boar-messages-show.component.ts","webpack:///src/app/board/boar-messages.service.ts","webpack:///src/app/board/board-messages-list/board-messages-list.component.scss","webpack:///src/app/board/board-messages-list/board-messages-list.component.ts","webpack:///src/app/board/board-routing.module.ts","webpack:///src/app/board/board.component.scss","webpack:///src/app/board/board.component.ts","webpack:///src/app/board/board.module.ts"],"names":["BoarMessagesCreateComponent","boarMessagesService","route","platform","splitPanel","id","formValid","clearBoarMessage","show","next","boarMessagesForm","valueChanges","subscribe","data","boarMessagesFormValid","valid","console","log","createBoarMessage","boarMessage","selector","template","BoarMessagesEditComponent","model","snapshot","paramMap","get","editBoarMessage","BoarMessagesFormComponent","toTitlecase","validationMessages","type","message","transform","BoarMessagesListViewComponent","getBoarMessages","BoarMessagesShowComponent","BoarMessagesService","api","alert","toast","router","navigation","boarMessagesUrl","boarMessages","boarMessagesLists","searchValue","perPage","meta","page","pagesContent","document","getElementById","res","lists","err","error","put","pivots","present","back","post","confirmation","confirm","providedIn","BoardMessagesListComponent","loading","content","scrollToTop","routes","path","component","BoardRoutingModule","imports","forChild","exports","BoardComponent","BoardModule","declarations"],"mappings":"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","file":"default~board-board-module~folder-folder-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/comp-addresses'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n                [text]=\\\"''\\\"\\n                [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"boarMessagesService.storeBoarMessage()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!boarMessagesService.boarMessagesFormValid.value\\\">\\n                <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Crear {{'Entrada de la cartelera' | titlecase}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-boar-messages-form #boarMessagesForm [model]=\\\"boarMessagesService.boarMessage\\\"></app-boar-messages-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-button [routerLink]=\\\"'/comp-addresses'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button> -->\\n            <ion-back-button\\n                [text]=\\\"''\\\"\\n                [icon]=\\\"'arrow-back-outline'\\\">\\n            </ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"boarMessagesService.updateBoarMessage()\\\"\\n                        color=\\\"success\\\"\\n                        fill=\\\"clear\\\"\\n                        [disabled]=\\\"!boarMessagesService.boarMessagesFormValid.value\\\">\\n                <ng-container *ngIf=\\\"!platform.is('mobile')\\\">Guardar</ng-container>\\n                <ion-icon slot=\\\"end\\\" color=\\\"success\\\" name=\\\"save-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n\\n        <ion-title>Editar {{'Entrada de la cartelera' | titlecase}}: {{ boarMessagesService.boarMessage?.name }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen>\\n    <ion-card>\\n        <app-boar-messages-form #boarMessagesForm [model]=\\\"boarMessagesService.boarMessage\\\"></app-boar-messages-form>\\n    </ion-card>\\n\\n</ion-content>\\n\";","export default \"<form #boarMessagesForm=\\\"ngForm\\\"\\n      novalidate\\n      autocomplete=\\\"off\\\">\\n    <!-- name -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'NOMBRE' | titlecase }}</ion-label>\\n        <ion-input [(ngModel)]=\\\"model.name\\\"\\n                   type=\\\"text\\\"\\n                   name=\\\"name\\\"\\n                   id=\\\"name-field\\\"\\n                   [required]=\\\"true\\\"\\n                   placeholder=\\\"\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"boarMessagesForm.form.controls['name']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end name -->\\n    <!-- body -->\\n    <!--<ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'cuerpo' | titlecase }}</ion-label>\\n        <ion-textarea [(ngModel)]=\\\"model.body\\\"\\n                      type=\\\"text\\\"\\n                      name=\\\"body\\\"\\n                      id=\\\"body-field\\\"\\n                      [rows]=\\\"10\\\"\\n                      [required]=\\\"true\\\"\\n                      placeholder=\\\"\\\"></ion-textarea>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.body\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"boarMessagesForm.form.controls['body']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>-->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label position=\\\"stacked\\\" style=\\\"font-size: 1rem;\\\">{{ 'ACTA' | titlecase }}</ion-label>\\n        <input [ngxSummernote]\\n               name=\\\"act\\\"\\n               id=\\\"act-field\\\"\\n               [(ngModel)]=\\\"model.body\\\">\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.body\\\">\\n            <div class=\\\"error-message\\\" *ngIf=\\\"boarMessagesForm.form.controls['body']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end body -->\\n    <!-- status -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'ESTADO' | titlecase }}</ion-label>\\n        <ion-select [(ngModel)]=\\\"model.status\\\"\\n                    [required]=\\\"true\\\"\\n                    name=\\\"status\\\"\\n                    id=\\\"status-field\\\"\\n                    okText=\\\"Seleccionar\\\"\\n                    cancelText=\\\"Cancelar\\\">\\n            <ion-select-option value=\\\"active\\\">{{ 'Activo' | titlecase }}</ion-select-option>\\n            <ion-select-option value=\\\"inactive\\\">{{ 'Inactivo' | titlecase }}</ion-select-option>\\n        </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.status\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"boarMessagesForm.form.controls['status']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end status -->\\n    <!-- notify_to_users -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'notificar a los usuarios' | titlecase }}</ion-label>\\n        <ion-toggle name=\\\"notify_to_users\\\"\\n                    id=\\\"notify_to_users-field\\\"\\n                    slot=\\\"end\\\"\\n                    [(ngModel)]=\\\"model.notify_to_users\\\"></ion-toggle>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.notify_to_users\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"boarMessagesForm.form.controls['repass']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end notify_to_users -->\\n    <!-- notify_to_house_units -->\\n    <ion-item class=\\\"item-transparent\\\">\\n        <ion-label>{{ 'notificar a unidades habitacionales' | titlecase }}</ion-label>\\n        <ion-toggle name=\\\"notify_to_house_units\\\"\\n                    id=\\\"notify_to_house_units-field\\\"\\n                    slot=\\\"end\\\"\\n                    [(ngModel)]=\\\"model.notify_to_house_units\\\"></ion-toggle>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.notify_to_house_units\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"boarMessagesForm.form.controls['repass']?.hasError(validation.type)\\\">\\n                {{ validation.message }}\\n            </div>\\n        </ng-container>\\n    </div>\\n    <!-- end notify_to_house_units -->\\n</form>\\n\";","export default \"<ng-container *ngFor=\\\"let boarMessage of boarMessagesService.boarMessages\\\">\\n\\n    <ion-card>\\n        <div class=\\\"cssreset\\\">\\n            <ion-card-header>\\n                <ion-card-subtitle>Publicado el {{boarMessage.created_at | dateFormat:'DD/MM/YYYY'}}</ion-card-subtitle>\\n                <a [routerLink]=\\\"'/board/' + boarMessage.id + '/show'\\\">\\n                    <ion-card-title>{{boarMessage.name}}</ion-card-title>\\n                </a>\\n            </ion-card-header>\\n\\n            <ion-card-content>\\n                {{boarMessage.body | stripHtml | truncate:150}}\\n            </ion-card-content>\\n        </div>\\n\\n    </ion-card>\\n\\n</ng-container>\\n\\n\";","export default \"<app-main-header title=\\\"{{boarMessagesService.boarMessage?.name}}\\\"></app-main-header>\\n<ion-content id=\\\"pages-content\\\">\\n    <ion-header collapse=\\\"condense\\\">\\n        <ion-toolbar>\\n            <ion-title size=\\\"large\\\">{{boarMessagesService.boarMessage?.name}}</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n    <ion-grid>\\n        <ion-row>\\n            <ion-col>\\n                <span>Publicado el {{boarMessagesService.boarMessage?.created_at | dateFormat:'DD/MM/YYYY'}}</span>\\n                <br><br>\\n                <div [innerHTML]=\\\"boarMessagesService.boarMessage?.body\\\"></div>\\n            </ion-col>\\n        </ion-row>\\n\\n    </ion-grid>\\n</ion-content>\\n\";","export default \"<app-main-header title=\\\"{{'Entradas de la Cartelera'}}\\\"\\n                 primaryLink=\\\"board/create\\\"\\n                 primaryText=\\\"Crear {{'Entradas de la Cartelera'}}\\\"\\n                 primaryIcon=\\\"add-circle-outline\\\"></app-main-header>\\n<ion-content id=\\\"pages-content\\\">\\n    <ion-searchbar showCancelButton=\\\"focus\\\"\\n                   [cancelButtonText]=\\\"'Cancelar'\\\"\\n                   [placeholder]=\\\"'Buscar Entradas de la Cartelera'\\\"\\n                   (ionCancel)=\\\"this.boarMessagesService.searchValue = ''; boarMessagesService.getBoarMessages()\\\"\\n                   (keyup.enter)=\\\"boarMessagesService.getBoarMessages()\\\"\\n                   [(ngModel)]=\\\"boarMessagesService.searchValue\\\"></ion-searchbar>\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && boarMessagesService.boarMessages?.length\\\">\\n        <ion-card *ngFor=\\\"let boarMessage of boarMessagesService.boarMessages; let index = index\\\">\\n            <ion-list>\\n                <ion-item class=\\\"item-transparent\\\">\\n                    <ion-label position=\\\"fixed\\\"><b>{{ 'NOMBRE' | titlecase }}</b></ion-label>\\n                    <div class=\\\"wrap-text\\\">{{ boarMessage?.name }}</div>\\n                </ion-item>\\n                <ion-item class=\\\"item-transparent\\\">\\n                    <ion-label position=\\\"fixed\\\"><b>{{ 'CÓDIGO' | titlecase }}</b></ion-label>\\n                    <div class=\\\"wrap-text\\\">{{ boarMessage?.code }}</div>\\n                </ion-item>\\n            </ion-list>\\n            <ion-footer>\\n                <ion-row>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"success\\\" size=\\\"small\\\" fill=\\\"clear\\\" [routerLink]=\\\"'/board/' + boarMessage?.id + '/edit'\\\">\\n                            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\n                            <div>Editar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                    <ion-col class=\\\"ion-text-center\\\">\\n                        <ion-button color=\\\"danger\\\" size=\\\"small\\\" fill=\\\"clear\\\" (click)=\\\"boarMessagesService.deleteBoardMessage(boarMessage?.id)\\\">\\n                            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                            <div>Eliminar</div>\\n                        </ion-button>\\n                    </ion-col>\\n                </ion-row>\\n            </ion-footer>\\n        </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!(loading.loading | async) && !boarMessagesService.boarMessages?.length\\\">\\n        <ion-item>\\n            <ion-icon class=\\\"text-warning\\\" name=\\\"warning-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label><h2>No se encontraron entradas de la cartelera</h2></ion-label>\\n            <ion-button [routerLink]=\\\"'/board/create'\\\" fill=\\\"outline\\\" color=\\\"success\\\" slot=\\\"end\\\">\\n                Crear entradas de la cartelera\\n                <ion-icon name=\\\"add-circle-outline\\\" slot=\\\"end\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ng-container>\\n</ion-content>\\n\";","export default \"<app-main-header title=\\\"CARTELERA\\\"></app-main-header>\\n<ion-content>\\n    <ion-row>\\n\\n        <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n            <ion-card routerLink=\\\"/board/list\\\">\\n                <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                    <ion-icon name=\\\"list-circle-outline\\\" color=\\\"primary\\\" class=\\\"icon-m\\\"></ion-icon>\\n                </div>\\n                <ion-card-header>\\n                    <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                        Listar {{ 'ENTRADAS DE LA CARTELERA'  | titlecase }}\\n                    </ion-card-subtitle>\\n                </ion-card-header>\\n\\n            </ion-card>\\n        </ion-col>\\n\\n        <ion-col size-md=\\\"3\\\" size-sm=\\\"6\\\" size-xs=\\\"12\\\">\\n            <ion-card routerLink=\\\"/board/create\\\">\\n                <div style=\\\"height: 120px; width: 100%; display: flex; align-items: center; justify-content: center;\\\">\\n                    <ion-icon name=\\\"add-circle-outline\\\" color=\\\"success\\\" class=\\\"icon-m\\\"></ion-icon>\\n                </div>\\n                <ion-card-header>\\n                    <ion-card-subtitle class=\\\"ion-text-center\\\">\\n                        Crear {{ 'ENTRADAS DE LA CARTELERA' | titlecase }}\\n                    </ion-card-subtitle>\\n                </ion-card-header>\\n\\n            </ion-card>\\n        </ion-col>\\n\\n    </ion-row>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXItbWVzc2FnZXMtY3JlYXRlL2JvYXItbWVzc2FnZXMtY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Platform} from \"@ionic/angular\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\nimport {BoarMessagesService} from \"../boar-messages.service\";\nimport {BoarMessagesFormComponent} from \"../boar-messages-form/boar-messages-form.component\";\nimport {CompAddress} from \"../../comp-addresses/comp-address\";\nimport {BoarMessage} from \"../boar-message\";\n\n@Component({\n    selector: 'app-boar-messages-create',\n    templateUrl: './boar-messages-create.component.html',\n    styleUrls: ['./boar-messages-create.component.scss'],\n})\nexport class BoarMessagesCreateComponent implements OnInit {\n\n    @ViewChild('boarMessagesForm') boarMessagesForm: BoarMessagesFormComponent;\n\n    id: any = null;\n    public formValid = false;\n\n    constructor(\n        public boarMessagesService: BoarMessagesService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService\n    ) {\n    }\n\n    ngOnInit() {\n        this.clearBoarMessage();\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.boarMessagesForm.boarMessagesForm.valueChanges.subscribe((data) => {\n            this.boarMessagesService.boarMessagesFormValid.next(this.boarMessagesForm.boarMessagesForm.valid);\n        });\n    }\n\n    clearBoarMessage() {\n        console.log('clear');\n        this.boarMessagesService.createBoarMessage();\n        this.boarMessagesService.boarMessage = <BoarMessage>{};\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXItbWVzc2FnZXMtZWRpdC9ib2FyLW1lc3NhZ2VzLWVkaXQuY29tcG9uZW50LnNjc3MifQ== */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {CompAddress} from \"../../comp-addresses/comp-address\";\nimport {BoarMessagesFormComponent} from \"../boar-messages-form/boar-messages-form.component\";\nimport {BoarMessage} from \"../boar-message\";\nimport {CompAddressesService} from \"../../comp-addresses/comp-addresses.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Platform} from \"@ionic/angular\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\nimport {BoarMessagesService} from \"../boar-messages.service\";\n\n@Component({\n    selector: 'app-boar-messages-edit',\n    templateUrl: './boar-messages-edit.component.html',\n    styleUrls: ['./boar-messages-edit.component.scss'],\n})\nexport class BoarMessagesEditComponent implements OnInit {\n\n    @ViewChild('boarMessagesForm') boarMessagesForm: BoarMessagesFormComponent;\n\n    public id: any = null;\n    public model: BoarMessage = null;\n\n    constructor(\n        public boarMessagesService: BoarMessagesService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.id = this.route.snapshot.paramMap.get('id');\n        this.boarMessagesService.editBoarMessage(this.id);\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(true);\n    }\n\n    ngAfterViewInit() {\n        this.boarMessagesForm.boarMessagesForm.valueChanges.subscribe((data) => {\n            this.boarMessagesService.boarMessagesFormValid.next(this.boarMessagesForm.boarMessagesForm.valid);\n        });\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXItbWVzc2FnZXMtZm9ybS9ib2FyLW1lc3NhZ2VzLWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\";","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {FormGroup} from \"@angular/forms\";\nimport {BoarMessage} from \"../boar-message\";\nimport {TitleCasePipe} from \"@angular/common\";\nimport {BoarMessagesService} from \"../boar-messages.service\";\n\n@Component({\n    selector: 'app-boar-messages-form',\n    templateUrl: './boar-messages-form.component.html',\n    styleUrls: ['./boar-messages-form.component.scss'],\n})\nexport class BoarMessagesFormComponent implements OnInit, AfterViewInit {\n\n    @Input('model') model: BoarMessage = <BoarMessage>{};\n\n    @ViewChild('boarMessagesForm') boarMessagesForm: FormGroup;\n\n    public validationMessages = {\n        'name': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('NOMBRE') + ' es obligatorio.'},\n        ],\n        'code': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CÓDIGO') + ' es obligatorio.'},\n        ],\n        'body': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('CUERPO') + ' es obligatorio.'},\n        ],\n        'status': [\n            {type: 'required', message: 'El campo ' + this.toTitlecase.transform('ESTADO') + ' es obligatorio.'},\n        ],\n        'notify_to_users': [\n\n        ],\n         'notify_to_house_units': [\n\n         ]\n    };\n\n    constructor(\n        public boarMessagesService: BoarMessagesService,\n        private toTitlecase: TitleCasePipe\n    ) {\n        this.model = <BoarMessage>{};\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXItbWVzc2FnZXMtbGlzdC12aWV3L2JvYXItbWVzc2FnZXMtbGlzdC12aWV3LmNvbXBvbmVudC5zY3NzIn0= */\";","import {Component, OnInit} from '@angular/core';\nimport {BoarMessagesService} from \"../boar-messages.service\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-boar-messages-list-view',\n    templateUrl: './boar-messages-list-view.component.html',\n    styleUrls: ['./boar-messages-list-view.component.scss'],\n})\nexport class BoarMessagesListViewComponent implements OnInit {\n\n    constructor(\n        public boarMessagesService: BoarMessagesService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.boarMessagesService.getBoarMessages();\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(true);\n\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXItbWVzc2FnZXMtc2hvdy9ib2FyLW1lc3NhZ2VzLXNob3cuY29tcG9uZW50LnNjc3MifQ== */\";","import {Component, OnInit} from '@angular/core';\nimport {BoarMessage} from \"../boar-message\";\nimport {BoarMessagesService} from \"../boar-messages.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Platform} from \"@ionic/angular\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-boar-messages-show',\n    templateUrl: './boar-messages-show.component.html',\n    styleUrls: ['./boar-messages-show.component.scss'],\n})\nexport class BoarMessagesShowComponent implements OnInit {\n\n    public id: any = null;\n    public model: BoarMessage = null;\n\n    constructor(\n        public boarMessagesService: BoarMessagesService,\n        public route: ActivatedRoute,\n        public platform: Platform,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.id = this.route.snapshot.paramMap.get('id');\n        this.boarMessagesService.editBoarMessage(this.id);\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(true);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\nimport {Meta} from \"../@shared/interfaces/meta\";\nimport {BoarMessage, BoarMessageLists} from \"./boar-message\";\nimport {ApiService} from \"../@shared/services/api.service\";\nimport {AlertService} from \"../@shared/services/alert.service\";\nimport {ToastService} from \"../@shared/services/toast.service\";\nimport {Router} from \"@angular/router\";\nimport {NavigationService} from \"../@shared/services/navigation.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoarMessagesService {\n    public boarMessagesUrl = 'boar-messages';\n    public boarMessagesFormValid = new BehaviorSubject<boolean>(false);\n\n    public boarMessages: BoarMessage[] = [];\n    public boarMessage: BoarMessage = <BoarMessage>{};\n    public boarMessagesLists: BoarMessageLists = {};\n\n    public searchValue = '';\n    public perPage = 10;\n\n    public meta: Meta = null;\n\n    public page = 1;\n\n    public pagesContent = document.getElementById('pages-content');\n\n  constructor(\n      public api: ApiService,\n      public alert: AlertService,\n      public toast: ToastService,\n      public router: Router,\n      private navigation: NavigationService,\n  ) { }\n\n    public getBoarMessages(page: any = this.page, perPage: any = this.perPage) {\n\n        this.api.get(this.boarMessagesUrl + '?page=' + page + '&perPage=' + perPage + '&q[name:cont]=' + this.searchValue)\n            .subscribe(\n                (res: any) => {\n                    // @ts-ignore\n                    this.boarMessages = res.data;\n                    this.boarMessagesLists = res.lists;\n                    this.meta = res.meta;\n                    // document.getElementById('pages-content').scrollToTop(300);\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public editBoarMessage(id: any) {\n        this.api.get(this.boarMessagesUrl + '/' + id + '/edit')\n            .subscribe(\n                (res: any) => {\n                    this.boarMessage = res.data.model;\n                    this.boarMessagesLists = res.lists;\n                },\n                (err: any) => {\n                    console.error(err);\n                }\n            );\n    }\n\n    public updateBoarMessage() {\n        this.api.put(this.boarMessagesUrl + '/' + this.boarMessage.id, {\n            model: this.boarMessage,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getBoarMessages(1);\n            }\n        );\n    }\n\n    public createBoarMessage() {\n        this.api.get(this.boarMessagesUrl + '/create')\n            .subscribe(\n                (res: any) => {\n                    this.boarMessage = <BoarMessage>{};\n                    this.boarMessagesLists = res.lists\n                }\n            );\n    }\n\n    public storeBoarMessage() {\n        this.api.post(this.boarMessagesUrl, {\n            model: this.boarMessage,\n            pivots: {\n            }\n        }).subscribe(\n            (res: any) => {\n                this.toast.present(res.message, 'toast-success', 'top');\n                this.navigation.back();\n                this.getBoarMessages(1);\n            }\n        );\n    }\n\n    public async deleteBoardMessage(id: any) {\n        const confirm = await this.alert.confirmation(\n            'Desea eliminar el item?'\n        );\n        if (confirm) {\n            this.api.delete(this.boarMessagesUrl + '/' + id, {})\n                .subscribe(\n                    (res: any) => {\n                        this.toast.present(res.message, 'toast-success', 'top');\n                        this.getBoarMessages(1);\n                    }\n                );\n        } else {\n            return;\n        }\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXJkLW1lc3NhZ2VzLWxpc3QvYm9hcmQtbWVzc2FnZXMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ApiService} from \"../../@shared/services/api.service\";\nimport {LoadingService} from \"../../@shared/services/loading.service\";\nimport {SplitPanelService} from \"../../@shared/services/split-panel.service\";\nimport {BoarMessagesService} from \"../boar-messages.service\";\nimport {IonContent} from \"@ionic/angular\";\n\n@Component({\n    selector: 'app-board-messages-list',\n    templateUrl: './board-messages-list.component.html',\n    styleUrls: ['./board-messages-list.component.scss'],\n})\nexport class BoardMessagesListComponent implements OnInit {\n\n    @ViewChild(IonContent, {static: false}) content: IonContent;\n\n    constructor(\n        public boarMessagesService: BoarMessagesService,\n        public api: ApiService,\n        public loading: LoadingService,\n        public splitPanel: SplitPanelService,\n    ) {\n    }\n\n    ngOnInit() {\n        // this.boarMessagesService.getBoarMessages();\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(true);\n        this.boarMessagesService.getBoarMessages();\n    }\n\n    public scrollToTop() {\n        this.content.scrollToTop(300);\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {BoardComponent} from \"./board.component\";\nimport {BoardMessagesListComponent} from \"./board-messages-list/board-messages-list.component\";\nimport {BoarMessagesCreateComponent} from \"./boar-messages-create/boar-messages-create.component\";\nimport {BoarMessagesEditComponent} from \"./boar-messages-edit/boar-messages-edit.component\";\nimport {BoarMessagesShowComponent} from \"./boar-messages-show/boar-messages-show.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: BoardComponent,\n    },\n    {\n        path: 'list',\n        component: BoardMessagesListComponent,\n    },\n    {\n        path: 'create',\n        component: BoarMessagesCreateComponent\n    },\n    {\n        path: ':id/edit',\n        component: BoarMessagesEditComponent\n    },\n    {\n        path: ':id/show',\n        component: BoarMessagesShowComponent\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BoardRoutingModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkL2JvYXJkLmNvbXBvbmVudC5zY3NzIn0= */\";","import {Component, OnInit} from '@angular/core';\nimport {SplitPanelService} from \"../@shared/services/split-panel.service\";\n\n@Component({\n    selector: 'app-board',\n    templateUrl: './board.component.html',\n    styleUrls: ['./board.component.scss'],\n})\nexport class BoardComponent implements OnInit {\n\n    constructor(\n        public splitPanel: SplitPanelService\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ionViewWillEnter() {\n        this.splitPanel.show.next(true);\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {BoardRoutingModule} from './board-routing.module';\nimport {FormsModule} from \"@angular/forms\";\nimport {IonicModule} from \"@ionic/angular\";\nimport {SharedModule} from \"../@shared/shared.module\";\nimport {BoardComponent} from \"./board.component\";\nimport {BoardMessagesListComponent} from \"./board-messages-list/board-messages-list.component\";\nimport {BoarMessagesFormComponent} from \"./boar-messages-form/boar-messages-form.component\";\nimport {BoarMessagesCreateComponent} from \"./boar-messages-create/boar-messages-create.component\";\nimport {BoarMessagesEditComponent} from \"./boar-messages-edit/boar-messages-edit.component\";\nimport {BoarMessagesListViewComponent} from \"./boar-messages-list-view/boar-messages-list-view.component\";\nimport {BoarMessagesShowComponent} from \"./boar-messages-show/boar-messages-show.component\";\n\n\n@NgModule({\n    declarations: [\n        BoardComponent,\n        BoardMessagesListComponent,\n        BoarMessagesFormComponent,\n        BoarMessagesCreateComponent,\n        BoarMessagesEditComponent,\n        BoarMessagesListViewComponent,\n        BoarMessagesShowComponent\n    ],\n    exports: [\n        BoarMessagesListViewComponent\n    ],\n    imports: [\n        CommonModule,\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        BoardRoutingModule\n    ]\n})\nexport class BoardModule {\n}\n"]}